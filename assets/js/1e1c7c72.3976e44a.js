"use strict";(self.webpackChunkmaptaskr_docs_copy=self.webpackChunkmaptaskr_docs_copy||[]).push([[2248],{38266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(74848),o=t(28453);const a={},s="Annotation Drawing Events",r={id:"dynamics-365/registerable-events/annotation-drawing-events",title:"Annotation Drawing Events",description:"AnnotationDrawingStarted",source:"@site/docs/dynamics-365/registerable-events/annotation-drawing-events.md",sourceDirName:"dynamics-365/registerable-events",slug:"/dynamics-365/registerable-events/annotation-drawing-events",permalink:"/docs/dynamics-365/registerable-events/annotation-drawing-events",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"maptaskrSidebar",previous:{title:"Base Map Events",permalink:"/docs/dynamics-365/registerable-events/base-map-events"},next:{title:"Search Address Events",permalink:"/docs/dynamics-365/registerable-events/search-address-events"}},l={},d=[{value:"AnnotationDrawingStarted",id:"annotationdrawingstarted",level:2},{value:"Description",id:"description",level:3},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:4},{value:"Parameters",id:"parameters",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners",level:3},{value:"Example",id:"example-1",level:4},{value:"AnnotationDrawingCompleted",id:"annotationdrawingcompleted",level:2},{value:"Description",id:"description-1",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Example",id:"example-2",level:4},{value:"Parameters",id:"parameters-1",level:3},{value:"Response Example",id:"response-example",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-1",level:3},{value:"Example",id:"example-3",level:4},{value:"AnnotationDrawingCancelled",id:"annotationdrawingcancelled",level:2},{value:"Description",id:"description-2",level:3},{value:"Usage",id:"usage-2",level:3},{value:"Example",id:"example-4",level:4},{value:"Parameters",id:"parameters-2",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-2",level:3},{value:"Example",id:"example-5",level:4},{value:"AnnotationDrawingModified",id:"annotationdrawingmodified",level:2},{value:"Description",id:"description-3",level:3},{value:"Usage",id:"usage-3",level:3},{value:"Example",id:"example-6",level:4},{value:"Parameters",id:"parameters-3",level:3},{value:"Reponse Example",id:"reponse-example",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-3",level:3},{value:"Example",id:"example-7",level:4},{value:"AnnotationDrawingDeleted",id:"annotationdrawingdeleted",level:2},{value:"Description",id:"description-4",level:3},{value:"Usage",id:"usage-4",level:3},{value:"Example",id:"example-8",level:4},{value:"Parameters",id:"parameters-4",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-4",level:3},{value:"Example",id:"example-9",level:4}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"annotation-drawing-events",children:"Annotation Drawing Events"}),"\n",(0,i.jsx)(n.h2,{id:"annotationdrawingstarted",children:"AnnotationDrawingStarted"}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AnnotationDrawingStarted"})," event is triggered when a user begins drawing an annotation on a ",(0,i.jsx)(n.code,{children:"Dashboard"})," or ",(0,i.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the annotation's shape name and starting latitude and longitude coordinates."]}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["To listen for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingStarted"})," event, you can use the ",(0,i.jsx)(n.code,{children:"on"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("AnnotationDrawingStarted", function(shapeName, startLat, startLng) {\n    console.log("shapeName: " + shapeName);\n    console.log("startLat: " + startLat);\n    console.log("startLng: " + startLng);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingStarted"})," event. When the event occurs, the provided call-back function is executed, logging the annotation's shape name, starting latitude, and starting longitude to the console."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"shapeName"})," (string): The type or category of the annotation being drawn."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startLat"})," (number): The latitude coordinate where the annotation drawing started."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startLng"})," (number): The longitude coordinate where the annotation drawing started."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"removing-event-listeners",children:"Removing Event Listeners"}),"\n",(0,i.jsxs)(n.p,{children:["To remove the event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingStarted"})," event, you can use the ",(0,i.jsx)(n.code,{children:"off"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"AnnotationDrawingStarted\");\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,i.jsx)(n.code,{children:"AnnotationDrawingStarted"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,i.jsx)(n.h2,{id:"annotationdrawingcompleted",children:"AnnotationDrawingCompleted"}),"\n",(0,i.jsx)(n.h3,{id:"description-1",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCompleted"})," event is triggered when a user completes the drawing of an annotation on a ",(0,i.jsx)(n.code,{children:"Dashboard"})," or ",(0,i.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the annotation's shape name, finishing latitude, finishing longitude, polygon representation (if applicable) and text (if applicable)."]}),"\n",(0,i.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["To listen for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCompleted"})," event, you can use the ",(0,i.jsx)(n.code,{children:"on"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("AnnotationDrawingCompleted", function(shapeName, finishLat, finishLong, polygon, text) {\n    console.log("shapeName: " + shapeName);\n    console.log("finishLat: " + finishLat);\n    console.log("finishLong: " + finishLong);\n    console.log("polygon: " + polygon);\n    console.log("text: " + text);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCompleted"})," event. When the event occurs, the provided call-back function is executed, logging the annotation's shape name, finishing latitude, finishing longitude, the polygon representation (if available) and text (if available) to the console."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"shapeName"})," (string): The type or category of the completed annotation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"finishLat"})," (number): The latitude coordinate where the annotation drawing was completed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"finishLong"})," (number): The longitude coordinate where the annotation drawing was completed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Polygon"})," (string): A polygon representation of the completed annotation area, if applicable."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Text"})," (string): The text content of the completed annotation if it was a text annotation. If the annotation wasn`t a text annotation, this will return as undefined."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"response-example",children:"Response Example"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"polygon"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "extent": "10833324.643667039,-5422575.956473999,12041155.960114244,-3916179.5955117554",\n    "geometry": {\n        "geometry": "10962250.458343988,-4377598.300671361,10833324.643667039,-5422575.956473999,11864731.16108263,-5388648.110506381,12041155.960114244,-4771161.313895731,11844374.453502059,-3916179.5955117554",\n        "type": "LineString"\n    },\n    "shapeSize": "Length: 2735.42 km",\n    "attributes": {\n        "ShapeSize": "Length: 2735.42 km"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"removing-event-listeners-1",children:"Removing Event Listeners"}),"\n",(0,i.jsxs)(n.p,{children:["To remove the event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCompleted"})," event, you can use the ",(0,i.jsx)(n.code,{children:"off"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,i.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"AnnotationDrawingCompleted\");\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCompleted"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,i.jsx)(n.h2,{id:"annotationdrawingcancelled",children:"AnnotationDrawingCancelled"}),"\n",(0,i.jsx)(n.h3,{id:"description-2",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCancelled"})," event is triggered when a user cancels the drawing of an annotation on a ",(0,i.jsx)(n.code,{children:"Dashboard"})," or ",(0,i.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the annotation's shape name."]}),"\n",(0,i.jsx)(n.h3,{id:"usage-2",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["To listen for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCancelled"})," event, you can use the ",(0,i.jsx)(n.code,{children:"on"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,i.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("AnnotationDrawingCancelled", function(shapeName) {\n    console.log("shapeName: " + shapeName);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCancelled"})," event. When the event occurs, the provided call-back function is executed, logging the name of the cancelled annotation to the console."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"shapeName"})," (string): The type or category of the cancelled annotation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"removing-event-listeners-2",children:"Removing Event Listeners"}),"\n",(0,i.jsxs)(n.p,{children:["To remove the event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCancelled"})," event, you can use the ",(0,i.jsx)(n.code,{children:"off"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,i.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"AnnotationDrawingCancelled\");\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,i.jsx)(n.code,{children:"AnnotationDrawingCancelled"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,i.jsx)(n.h2,{id:"annotationdrawingmodified",children:"AnnotationDrawingModified"}),"\n",(0,i.jsx)(n.h3,{id:"description-3",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AnnotationDrawingModified"})," event is triggered when a previously drawn annotation is modified within a ",(0,i.jsx)(n.code,{children:"Dashboard"})," or ",(0,i.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the modified annotation's name and its updated polygon geometry."]}),"\n",(0,i.jsx)(n.h3,{id:"usage-3",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["To listen for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingModified"})," event, you can use the ",(0,i.jsx)(n.code,{children:"on"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,i.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("AnnotationDrawingModified", function(shapeName, polygon, oldText, newText) {\n    console.log("shapeName: " + shapeName);\n    console.log("polygon: " + polygon);\n    console.log("oldText: " + oldText);\n    console.log("newText: " + newText);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingModified"})," event. When the event occurs, the provided call-back function is executed, logging the name of the modified annotation and its updated polygon geometry to the console."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"shapeName"})," (string): The type or category of the modified annotation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"polygon"})," (string): The updated polygon geometry of the modified annotation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"oldText"})," (string): The old text value of the modified annotation if it was a text annotation. If the annotation wasn",(0,i.jsx)(n.code,{children:"t an annotation text or the text wasn"}),"t modified, this will return as undefined."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"newText"})," (string): The new text value of the modified annotation if it was a text annotation. If the annotation wasn",(0,i.jsx)(n.code,{children:"t an annotation text or the text wasn"}),"t modified, this will return as undefined."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"reponse-example",children:"Reponse Example"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"polygon"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "extent": "10833324.643667039,-5565072.909537995,13167560.446239164,-4377598.300671361",\n    "geometry": {\n        "geometry": "10962250.458343988,-4377598.300671361,10833324.643667039,-5422575.956473999,11864731.16108263,-5388648.110506381,12041155.960114244,-4771161.313895731,13167560.446239164,-5565072.909537995",\n        "type": "LineString"\n    },\n    "shapeSize": "Length: 3050.95 km",\n    "attributes": {\n        "ShapeSize": "Length: 3050.95 km",\n        "OldGeometry": [\n            [\n                10962250.458343988,\n                -4377598.300671361\n            ],\n            [\n                10833324.643667039,\n                -5422575.956473999\n            ],\n            [\n                11864731.16108263,\n                -5388648.110506381\n            ],\n            [\n                12041155.960114244,\n                -4771161.313895731\n            ],\n            [\n                11844374.453502059,\n                -3916179.5955117554\n            ]\n        ],\n        "ExclusionIntersecting": false\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"removing-event-listeners-3",children:"Removing Event Listeners"}),"\n",(0,i.jsxs)(n.p,{children:["To remove the event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingModified"})," event, you can use the ",(0,i.jsx)(n.code,{children:"off"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,i.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"AnnotationDrawingModified\");\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,i.jsx)(n.code,{children:"AnnotationDrawingModified"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,i.jsx)(n.h2,{id:"annotationdrawingdeleted",children:"AnnotationDrawingDeleted"}),"\n",(0,i.jsx)(n.h3,{id:"description-4",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AnnotationDrawingDeleted"})," event is triggered when a user deletes a previously drawn annotation on a ",(0,i.jsx)(n.code,{children:"Dashboard"})," or ",(0,i.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the deleted annotation's shape name."]}),"\n",(0,i.jsx)(n.h3,{id:"usage-4",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["To listen for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingDeleted"})," event, you can use the ",(0,i.jsx)(n.code,{children:"on"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,i.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("AnnotationDrawingDeleted", function(shapeName) {\n    console.log("shapeName: " + shapeName);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingDeleted"})," event. When the event occurs, the provided call-back function is executed, logging the name of the deleted annotation to the console."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"shapeName"})," (string): The type or category of the deleted annotation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"removing-event-listeners-4",children:"Removing Event Listeners"}),"\n",(0,i.jsxs)(n.p,{children:["To remove the event listener for the ",(0,i.jsx)(n.code,{children:"AnnotationDrawingDeleted"})," event, you can use the ",(0,i.jsx)(n.code,{children:"off"})," method of the ",(0,i.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen for this specific event."]}),"\n",(0,i.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"AnnotationDrawingDeleted\");\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,i.jsx)(n.code,{children:"AnnotationDrawingDeleted"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(96540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);