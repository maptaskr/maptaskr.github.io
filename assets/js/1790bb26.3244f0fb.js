"use strict";(self.webpackChunkmaptaskr_docs_copy=self.webpackChunkmaptaskr_docs_copy||[]).push([[8516],{53405:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var t=r(74848),s=r(28453);const l={},a="Layer List Events",i={id:"dynamics-365/registerable-events/layer-list-events",title:"Layer List Events",description:"LayerSearchCompleted",source:"@site/docs/dynamics-365/registerable-events/layer-list-events.md",sourceDirName:"dynamics-365/registerable-events",slug:"/dynamics-365/registerable-events/layer-list-events",permalink:"/docs/dynamics-365/registerable-events/layer-list-events",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"maptaskrSidebar",previous:{title:"Search Address Events",permalink:"/docs/dynamics-365/registerable-events/search-address-events"},next:{title:"Layer Attribute Events",permalink:"/docs/dynamics-365/registerable-events/layer-attribute-events"}},o={},d=[{value:"LayerSearchCompleted",id:"layersearchcompleted",level:2},{value:"Description",id:"description",level:3},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:4},{value:"Parameters",id:"parameters",level:3},{value:"Response Example",id:"response-example",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners",level:3},{value:"Example",id:"example-1",level:4},{value:"LayerSelected",id:"layerselected",level:2},{value:"Description",id:"description-1",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Example",id:"example-2",level:4},{value:"Parameters",id:"parameters-1",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-1",level:3},{value:"Example",id:"example-3",level:4},{value:"LayerFilterApplied",id:"layerfilterapplied",level:2},{value:"Description",id:"description-2",level:3},{value:"Usage",id:"usage-2",level:3},{value:"Example",id:"example-4",level:4},{value:"Parameters",id:"parameters-2",level:3},{value:"Response Example",id:"response-example-1",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-2",level:3},{value:"Example",id:"example-5",level:4},{value:"LayerAttributeRequested",id:"layerattributerequested",level:2},{value:"Description",id:"description-3",level:3},{value:"Usage",id:"usage-3",level:3},{value:"Example",id:"example-6",level:4},{value:"Parameters",id:"parameters-3",level:3},{value:"Response Example",id:"response-example-2",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-3",level:3},{value:"Example",id:"example-7",level:4}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"layer-list-events",children:"Layer List Events"}),"\n",(0,t.jsx)(n.h2,{id:"layersearchcompleted",children:"LayerSearchCompleted"}),"\n",(0,t.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LayerSearchCompleted"})," event is triggered when a user completes a search for layers on a ",(0,t.jsx)(n.code,{children:"Dashboard"})," or ",(0,t.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the search polygon, search term, and the resulting layers in JSON format."]}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To listen for the ",(0,t.jsx)(n.code,{children:"LayerSearchCompleted"})," event, you can use the ",(0,t.jsx)(n.code,{children:"on"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("LayerSearchCompleted", function(searchPolygon, searchTerm, resultingLayersJson) {\n    console.log("searchPolygon: " + searchPolygon);\n    console.log("searchTerm: " + searchTerm);\n    console.log("resultingLayersJson: " + resultingLayersJson);\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,t.jsx)(n.code,{children:"LayerSearchCompleted"})," event. When the event occurs, the provided call-back function is executed, logging the search polygon, search term, and the resulting layers in JSON format to the console."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"searchPolygon"})," (string): The search polygon or area used for layer searching."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"searchTerm"})," (string): The search term or criteria used for layer searching."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"resultingLayersJson"})," (string): The resulting layers in JSON format that match the search criteria."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"response-example",children:"Response Example"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"resultingLayersJson"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "layers": [],\n    "groups": [],\n    "isFiltered": true,\n    "LayerId": "acb612f0-bea7-eb11-9442-000d3acb7dc6-2",\n    "LayerName": "MapServer RoadAssets_DataPortal",\n    "LayerHiddenName": "https://mrgis.mainroads.wa.gov.au/arcgis/rest/services/OpenData/RoadAssets_DataPortal/MapServer",\n    "IsCorporate": true,\n    "layerGroupId": "819aafa8-2a8e-ec11-8d20-002248159630",\n    "SecurityGroupId": [\n      "all"\n    ],\n    "LayerType": 5,\n    "LayerUrl": "https://mrgis.mainroads.wa.gov.au/arcgis/rest/services/OpenData/RoadAssets_DataPortal/MapServer",\n    "isService": true,\n    "IsVisible": true,\n    "IsSelected": false,\n    "sharedUserIds": [],\n    "hasAuthentication": false,\n    "layerUserName": "",\n    "layerPassword": "",\n    "metadataStyle": "Table",\n    "arcGisAuthApplication": "",\n    "securityLayerKey": "",\n    "securityLayerValue": "",\n    "securityLayerType": 0,\n    "arcGisLayerToken": "",\n    "isForPortal": true,\n    "LayerUniqueIdentifier": "acb612f0-bea7-eb11-9442-000d3acb7dc6-2",\n    "IsCollapsed": true,\n    "IsLayerFunctionality": false,\n    "filteredSubLayersId": [\n      0,\n      6,\n      27\n    ]\n  }\n]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"removing-event-listeners",children:"Removing Event Listeners"}),"\n",(0,t.jsxs)(n.p,{children:["To remove the event listener for the ",(0,t.jsx)(n.code,{children:"LayerSearchCompleted"})," event, you can use the ",(0,t.jsx)(n.code,{children:"off"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,t.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"LayerSearchCompleted\");\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,t.jsx)(n.code,{children:"LayerSearchCompleted"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,t.jsx)(n.h2,{id:"layerselected",children:"LayerSelected"}),"\n",(0,t.jsx)(n.h3,{id:"description-1",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LayerSelected"})," event is triggered when a user selects a layer or layer group on a ",(0,t.jsx)(n.code,{children:"Dashboard"})," or ",(0,t.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the selected layer group ID and layer ID."]}),"\n",(0,t.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To listen for the ",(0,t.jsx)(n.code,{children:"LayerSelected"})," event, you can use the ",(0,t.jsx)(n.code,{children:"on"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,t.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("LayerSelected", function(layerGroupID, layerID, checked) {\n    console.log("layerGroupID: " + layerGroupID);\n    console.log("layerID: " + layerID);\n    console.log("checked: " + checked);\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,t.jsx)(n.code,{children:"LayerSelected"})," event. The provided call-back function is executed when the event occurs, logging the layer group ID and layer ID to the console."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"layerGroupID"})," (string): The ID of the selected layer group."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"layerID"})," (string): The ID of the selected layer within the group."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"checked"})," (boolean): If the layer is checked or unchecked."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"removing-event-listeners-1",children:"Removing Event Listeners"}),"\n",(0,t.jsxs)(n.p,{children:["To remove the event listener for the ",(0,t.jsx)(n.code,{children:"LayerSelected"})," event, you can use the ",(0,t.jsx)(n.code,{children:"off"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,t.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"LayerSelected\");\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,t.jsx)(n.code,{children:"LayerSelected"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,t.jsx)(n.h2,{id:"layerfilterapplied",children:"LayerFilterApplied"}),"\n",(0,t.jsx)(n.h3,{id:"description-2",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LayerFilterApplied"})," event is triggered when a user applies a filter to a layer on a ",(0,t.jsx)(n.code,{children:"Dashboard"})," or ",(0,t.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the filter parameters."]}),"\n",(0,t.jsx)(n.h3,{id:"usage-2",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To listen for the ",(0,t.jsx)(n.code,{children:"LayerFilterApplied"})," event, you can use the ",(0,t.jsx)(n.code,{children:"on"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,t.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("LayerFilterApplied", function(filterparams) {\n    console.log("filterparams: " + filterparams);\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,t.jsx)(n.code,{children:"LayerFilterApplied"})," event. The provided call-back function is executed when the event occurs, logging the filter parameters to the console."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filterparams"})," (string): The filter parameters applied to the layer."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"response-example-1",children:"Response Example"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"filterparams"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "LayerName": "Bike Count Sites",\n  "LayerUniqueIdentifier": "acb612f0-bea7-eb11-9442-000d3acb7dc6-2_670badf1-7131-4068-9437-a9f254cf2607",\n  "expressionItems": [\n    {\n      "operators": [\n        {\n          "name": "Equals",\n          "value": "eq",\n          "fetchOp": "eq",\n          "fetchVal": "",\n          "types": [\n            6,\n            1,\n            3,\n            7\n          ],\n          "isCommon": false\n        },\n        {\n          "name": "Does Not Equal",\n          "value": "ne",\n          "fetchOp": "ne",\n          "fetchVal": "",\n          "types": [\n            6,\n            1,\n            3,\n            7\n          ],\n          "isCommon": false\n        }\n      ],\n      "fields": [\n        {\n          "displayName": "OBJECTID",\n          "internalName": "OBJECTID",\n          "fieldTypeName": "decimal",\n          "fieldType": 6\n        },\n        ...\n      ],\n      "valueList": [],\n      "dataType": 6,\n      "displayName": "OBJECTID",\n      "operator": "eq",\n      "value": "1",\n      "fieldInfo": "{\\"displayName\\":\\"OBJECTID\\",\\"internalName\\":\\"OBJECTID\\",\\"fieldTypeName\\":\\"decimal\\",\\"fieldType\\":6}"\n    }\n  ],\n  "FilterLayerOperator": "Match All"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"removing-event-listeners-2",children:"Removing Event Listeners"}),"\n",(0,t.jsxs)(n.p,{children:["To remove the event listener for the ",(0,t.jsx)(n.code,{children:"LayerFilterApplied"})," event, you can use the ",(0,t.jsx)(n.code,{children:"off"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,t.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"LayerFilterApplied\");\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,t.jsx)(n.code,{children:"LayerFilterApplied"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,t.jsx)(n.h2,{id:"layerattributerequested",children:"LayerAttributeRequested"}),"\n",(0,t.jsx)(n.h3,{id:"description-3",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LayerAttributeRequested"})," event is triggered when a user requests attributes for a layer on a ",(0,t.jsx)(n.code,{children:"Dashboard"})," or ",(0,t.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the layer group ID, layer ID, and resulting attributes."]}),"\n",(0,t.jsx)(n.h3,{id:"usage-3",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To listen for the ",(0,t.jsx)(n.code,{children:"LayerAttributeRequested"})," event, you can use the ",(0,t.jsx)(n.code,{children:"on"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,t.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("LayerAttributeRequested", function(layerGroupdID, layerID, resultingAttributes) {\n    console.log("layerGroupdID: " + layerGroupdID);\n    console.log("layerID: " + layerID);\n    console.log("resultingAttributes: " + resultingAttributes);\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,t.jsx)(n.code,{children:"LayerAttributeRequested"})," event. When the event occurs, the provided call-back function is executed, logging the layer group ID, layer ID, and resulting attributes to the console."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"layerGroupdID"})," (string): The ID of the layer group for which attributes were requested."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"layerID"})," (string): The ID of the layer for which attributes were requested."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"resultingAttributes"})," (string): The resulting attributes for the requested layer."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"response-example-2",children:"Response Example"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"resultingAttributes"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "OBJECTID": 88315,\n    "SITE_NO": "6737",\n    "ROAD_NAME": "Kwinana Fwy PSP",\n    "LOCATION_DESC": "North Abutment of Narrows Bridge",\n    "DATE_COMMISSIONED": "2008-11-01 09:00:00",\n    "TRAFFIC_YEAR": "2023/24",\n    "PRIMARY_DIRECTION": "To Perth",\n    "PRIMARY_DIRECTION_MON_SUN": 234,\n    "PRIMARY_DIRECTION_MON_FRI": 207,\n    "SECONDARY_DIRECTION": "To Fremantle",\n    "SECONDARY_DIRECTION_MON_SUN": 257,\n    "SECONDARY_DIRECTION_MON_FRI": 213,\n    "COMBINED_DIRECTION_MON_SUN": 491,\n    "COMBINED_DIRECTION_MON_FRI": 420,\n    "LG_NO": "124",\n    "LG_NAME": "Perth (C)",\n    "RA_NO": 7,\n    "RA_NAME": "Metropolitan",\n    "PRIMARY_DIRECTION_SAT_SUN": 300,\n    "SECONDARY_DIRECTION_SAT_SUN": 368,\n    "COMBINED_DIRECTION_SAT_SUN": 668,\n    "geom": {\n      "x": 115.8481209999099,\n      "y": -31.96117500052617\n    },\n    "projection": "4326",\n    "isSelected": false\n  },\n  ...\n]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"removing-event-listeners-3",children:"Removing Event Listeners"}),"\n",(0,t.jsxs)(n.p,{children:["To remove the event listener for the ",(0,t.jsx)(n.code,{children:"LayerAttributeRequested"})," event, you can use the ",(0,t.jsx)(n.code,{children:"off"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,t.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"LayerAttributeRequested\");\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,t.jsx)(n.code,{children:"LayerAttributeRequested"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(96540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);