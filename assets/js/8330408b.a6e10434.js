"use strict";(self.webpackChunkmaptaskr_docs_copy=self.webpackChunkmaptaskr_docs_copy||[]).push([[9139],{80811:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var o=a(74848),n=a(28453);const i={title:"Tutorials | Dynamics 365 Layer Attribute Popup Custom Actions | Introduction",sidebar_label:"Introduction"},s="Introduction",r={id:"tutorials/maptaskr-for-dynamics-365-layer-attribute-popup-custom-actions/introduction",title:"Tutorials | Dynamics 365 Layer Attribute Popup Custom Actions | Introduction",description:"This guide is aimed at experienced Dynamics 365 consultants and shows how to extend the core functionality of Maptaskr for Dynamics 365 to allow internal users to perform predefined custom actions when interacting with layers. It is assumed that readers have a knowledge of JavaScript, experience configuring Maptaskr and have access to layers and permission to expose them to a public website.",source:"@site/docs/tutorials/maptaskr-for-dynamics-365-layer-attribute-popup-custom-actions/introduction.md",sourceDirName:"tutorials/maptaskr-for-dynamics-365-layer-attribute-popup-custom-actions",slug:"/tutorials/maptaskr-for-dynamics-365-layer-attribute-popup-custom-actions/introduction",permalink:"/docs/tutorials/maptaskr-for-dynamics-365-layer-attribute-popup-custom-actions/introduction",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Tutorials | Dynamics 365 Layer Attribute Popup Custom Actions | Introduction",sidebar_label:"Introduction"},sidebar:"maptaskrSidebar",previous:{title:"Configuring PCF & Power Pages Management",permalink:"/docs/tutorials/maptaskr-for-power-pages-selecting-layer-features/configuring-portal-form-js"},next:{title:"Configuring Custom JS",permalink:"/docs/tutorials/maptaskr-for-dynamics-365-layer-attribute-popup-custom-actions/configuring-custom-js"}},c={},u=[];function p(t){const e={admonition:"admonition",h1:"h1",p:"p",...(0,n.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(e.p,{children:"This guide is aimed at experienced Dynamics 365 consultants and shows how to extend the core functionality of Maptaskr for Dynamics 365 to allow internal users to perform predefined custom actions when interacting with layers. It is assumed that readers have a knowledge of JavaScript, experience configuring Maptaskr and have access to layers and permission to expose them to a public website."}),"\n",(0,o.jsx)(e.admonition,{type:"warning",children:(0,o.jsx)(e.p,{children:"Please do your due dilligence when selecting an appropriate layer. Even publically available datasets may have licensing and/or usage restrictions."})}),"\n",(0,o.jsx)(e.p,{children:"By default, Maptaskr for Dynamics 365 does not support executing actions directly from the attribute popup displayed when a layer feature is selected. This tutorial demonstrates how to configure Custom.JS to add a custom button to the attribute popup. When a feature is selected, the popup will appear with the custom button, which can be programmed to execute predefined actions and reference attribute data. With this feature, you can implement your own custom actions seamlessly."}),"\n",(0,o.jsxs)(e.admonition,{type:"warning",children:[(0,o.jsx)(e.p,{children:"Please note that this tutorial has been written to suit the functionality and capability of Maptaskr v2.2.2.58 and above."}),(0,o.jsx)(e.p,{children:"If you are using an older version of Maptaskr, then this guide will not be applicable and you will be required to upgrade to the latest version."})]})]})}function d(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(p,{...t})}):p(t)}},28453:(t,e,a)=>{a.d(e,{R:()=>s,x:()=>r});var o=a(96540);const n={},i=o.createContext(n);function s(t){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),o.createElement(i.Provider,{value:e},t.children)}}}]);