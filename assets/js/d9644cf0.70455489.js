"use strict";(self.webpackChunkmaptaskr_docs_copy=self.webpackChunkmaptaskr_docs_copy||[]).push([[149],{82582:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=e(74848),n=e(28453);const s={title:"Power Pages | Installation Guide | Appendix A: Web Templates",sidebar_label:"Appendix A: Web Templates"},i="Appendix A: Web Templates",l={id:"power-pages/installation-guide/appendix-a-web-templates",title:"Power Pages | Installation Guide | Appendix A: Web Templates",description:"These liquid template files can be loaded in a text editor and content copied to the relevant template",source:"@site/docs/power-pages/installation-guide/appendix-a-web-templates.md",sourceDirName:"power-pages/installation-guide",slug:"/power-pages/installation-guide/appendix-a-web-templates",permalink:"/docs/power-pages/installation-guide/appendix-a-web-templates",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Power Pages | Installation Guide | Appendix A: Web Templates",sidebar_label:"Appendix A: Web Templates"},sidebar:"maptaskrSidebar",previous:{title:"Advanced Configuration and Capability",permalink:"/docs/power-pages/installation-guide/advanced-configuration-and-capability"},next:{title:"Appendix B: Custom Javascript",permalink:"/docs/power-pages/installation-guide/appendix-b-custom-javascript"}},o={},p=[{value:"Interactive Map",id:"interactive-map",level:2},{value:"Maptaskr Custom Layer Search",id:"maptaskr-custom-layer-search",level:2},{value:"v2.2.1.58 &amp; earlier",id:"v22158--earlier",level:3},{value:"v2.2.1.59 - v2.2.1.63",id:"v22159---v22163",level:3},{value:"v2.2.1.64 &amp; later",id:"v22164--later",level:3},{value:"Maptaskr Lambpet Search",id:"maptaskr-lambpet-search",level:2},{value:"Maptaskr Shape Search",id:"maptaskr-shape-search",level:2},{value:"Maptaskr Layer Groups",id:"maptaskr-layer-groups",level:2},{value:"Maptaskr Related Shape Search",id:"maptaskr-related-shape-search",level:2},{value:"Maptaskr Layer Group Security Search",id:"maptaskr-layer-group-security-search",level:2},{value:"Maptaskr Dataverse Layer",id:"maptaskr-dataverse-layer",level:2}];function u(t){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"appendix-a-web-templates",children:"Appendix A: Web Templates"}),"\n",(0,r.jsx)(a.p,{children:"These liquid template files can be loaded in a text editor and content copied to the relevant template\nsource field."}),"\n",(0,r.jsx)(a.h2,{id:"interactive-map",children:"Interactive Map"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:"{% codecomponent name:maptaskr_MaptaskrPCF.MtrPCF designHeightOfMap:'80vh' featuresShowMapDownload:'yes' featuresDownloadMapFormat:'pdf' featuresShowScaleBar:'yes' featuresShowExtentControls:'yes' featuresShowLayersSearch:'yes' featuresDefaultTabOpened:'none' preSelectedLayers:'' snapSelectedLayers:'' traceSelectedLayers: ' exclusionarySelectedLayers:'' intersectionSelectedLayers:'' intersectionWarningBuffers:'' intersectionErrorBuffers:'' featuresAutoCollapseTabs:'yes' constrainBoundaries:'' uploadsShowAnnotationControl:'yes' uploadsAnnotationColor:'#b4eb34' uploadsAllowedUploadTypes:'Both' uploadsAllowedProjections:'' showFileCount:'-1' shapeNames:'Boundary' shapeStrokeColors:'' shapeFillColors:'' shapeDashedLine:'' tabsShowSearch:'yes' tabsShowBasemap:'yes' tabsShowMeasurement:'yes' tabsShowDrawUpload:'yes' tabsShowMapLayers:'yes' tabsShowLegend:'yes' tabsShowHelpGuide:'yes' loadShapes:'yes' loadRelatedShapes:'No' loadShapesCustomEndpoint:'' loadRelatedShapesCustomEndpoint:'' numberOfConcurrentIntersectionCalls:'20' %}\n"})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-custom-layer-search",children:"Maptaskr Custom Layer Search"}),"\n",(0,r.jsx)(a.p,{children:"Please refer to the appropriate template depending on your installed version of Maptaskr for Power Pages listed below."}),"\n",(0,r.jsx)(a.h3,{id:"v22158--earlier",children:"v2.2.1.58 & earlier"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% fetchxml layer_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="maptaskr_layers">\n            <attribute name="maptaskr_iscorporate"/>\n            <attribute name="maptaskr_layername"/>\n            <attribute name="maptaskr_securitygroupid"/>\n            <attribute name="maptaskr_layersid"/>\n            <attribute name="maptaskr_layerurl"/>\n            <attribute name="maptaskr_layertype"/>\n            <attribute name="maptaskr_layergroupid"/>\n            <attribute name="maptaskr_metadata_style"/>\n            <attribute name="maptaskr_hasauth"/>\n            <attribute name="createdon"/>\n            <attribute name="maptaskr_securitylayertype"/>\n            <attribute name="maptaskr_sharedto"/>\n            <attribute name="maptaskr_password"/>\n            <attribute name="maptaskr_securitylayervalue"/>\n            <attribute name="maptaskr_username"/>\n            <attribute name="maptaskr_name"/>\n            <attribute name="maptaskr_arcgisauthapplication"/>\n            <attribute name="maptaskr_securitylayerkey"/>\n            <attribute name="maptaskr_zoomtoextent"/>\n            <attribute name="maptaskr_isforportal"/>\n            <attribute name="maptaskr_arcgisauthtype"/>\n            <attribute name="maptaskr_isforauthenticated"/>\n            <attribute name="maptaskr_sortorder"/>\n            <attribute name="maptaskr_isforenableexport"/>\n            <order descending="false" attribute="maptaskr_sortorder"/>\n                <filter type="and">\n                    <condition attribute="maptaskr_iscorporate" value="1" operator="eq"/>\n                    <condition attribute="maptaskr_isforportal" value="1" operator="eq"/>\n                </filter>\n            <link-entity name="maptaskr_layergroup" alias="layerGroup" link-type="inner" to="maptaskr_group_id" from="maptaskr_layergroupid">\n                <attribute name="maptaskr_name" alias="layer_group_name"/>\n                <attribute name="maptaskr_layergroupid"/>\n            </link-entity>\n        </entity>\n    </fetch>\n{% endfetchxml %} \n{   "layers" :\n    [\n        {% for result in layer_query.results.entities %}\n        {\n            "maptaskr_iscorporate" : "{{ result.maptaskr_iscorporate }}",\n            "maptaskr_layername" : "{{ result.maptaskr_layername }}",\n            "maptaskr_securitygroupid" : "{{ result.maptaskr_securitygroupid }}",\n            "maptaskr_layersid" : "{{ result.maptaskr_layersid }}",\n            "maptaskr_layerurl" : "{{ result.maptaskr_layerurl }}",\n            "maptaskr_layertype" : "{{ result.maptaskr_layertype }}",\n            "maptaskr_layergroupid" : "{{ result.maptaskr_layergroupid }}",\n            "maptaskr_metadata_style" : "{{ result.maptaskr_metadata_style }}",\n            "maptaskr_hasauth" : "{{ result.maptaskr_hasauth }}",\n            "createdon" : "{{ result.createdon }}",\n            "maptaskr_securitylayertype" : "{{ result.maptaskr_securitylayertype }}",\n            "maptaskr_sharedto" : "{{ result.maptaskr_sharedto }}",\n            "maptaskr_password" : "{{ result.maptaskr_password }}",\n            "maptaskr_securitylayervalue" : "{{ result.maptaskr_securitylayervalue }}",\n            "maptaskr_username" : "{{ result.maptaskr_username }}",\n            "maptaskr_name" : "{{ result.maptaskr_name }}",\n            "maptaskr_arcgisauthapplication" : "{{ result.maptaskr_arcgisauthapplication }}",\n            "maptaskr_securitylayerkey" : "{{ result.maptaskr_securitylayerkey }}",\n            "maptaskr_zoomtoextent" : "{{ result.maptaskr_zoomtoextent }}",\n            "maptaskr_isforportal" : "{{ result.maptaskr_isforportal }}",\n            "maptaskr_arcgisauthtype" : "{{ result.maptaskr_arcgisauthtype }}",\n            "maptaskr_isforauthenticated" : "{{ result.maptaskr_isforauthenticated }}",\n            "maptaskr_sortorder" : "{{ result.maptaskr_sortorder }}",\n            "maptaskr_isforenableexport" : "{{ result.maptaskr_isforenableexport }}",\n            "layer_group_name" : "{{ result[\'layer_group_name\'] }}"\n        }\n        {% unless forloop.last %},{% endunless %}\n        {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h3,{id:"v22159---v22163",children:"v2.2.1.59 - v2.2.1.63"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% fetchxml layer_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="maptaskr_layers">\n            <attribute name="maptaskr_iscorporate"/>\n            <attribute name="maptaskr_layername"/>\n            <attribute name="maptaskr_securitygroupid"/>\n            <attribute name="maptaskr_layersid"/>\n            <attribute name="maptaskr_layerurl"/>\n            <attribute name="maptaskr_layertype"/>\n            <attribute name="maptaskr_layergroupid"/>\n            <attribute name="maptaskr_metadata_style"/>\n            <attribute name="maptaskr_hasauth"/>\n            <attribute name="createdon"/>\n            <attribute name="maptaskr_securitylayertype"/>\n            <attribute name="maptaskr_sharedto"/>\n            <attribute name="maptaskr_password"/>\n            <attribute name="maptaskr_securitylayervalue"/>\n            <attribute name="maptaskr_username"/>\n            <attribute name="maptaskr_name"/>\n            <attribute name="maptaskr_arcgisauthapplication"/>\n            <attribute name="maptaskr_securitylayerkey"/>\n            <attribute name="maptaskr_zoomtoextent"/>\n            <attribute name="maptaskr_isforportal"/>\n            <attribute name="maptaskr_statictoken"/>\n            <attribute name="maptaskr_arcgisauthtype"/>\n            <attribute name="maptaskr_isforauthenticated"/>\n            <attribute name="maptaskr_sortorder"/>\n            <attribute name="maptaskr_isforenableexport"/>\n            <order descending="false" attribute="maptaskr_sortorder"/>\n                <filter type="and">\n                    <condition attribute="maptaskr_iscorporate" value="1" operator="eq"/>\n                    <condition attribute="maptaskr_isforportal" value="1" operator="eq"/>\n                </filter>\n            <link-entity name="maptaskr_layergroup" alias="layerGroup" link-type="inner" to="maptaskr_group_id" from="maptaskr_layergroupid">\n                <attribute name="maptaskr_name" alias="layer_group_name"/>\n                <attribute name="maptaskr_layergroupid"/>\n            </link-entity>\n        </entity>\n    </fetch>\n{% endfetchxml %} \n{   "layers" :\n    [\n        {% for result in layer_query.results.entities %}\n        {\n            "maptaskr_iscorporate" : "{{ result.maptaskr_iscorporate }}",\n            "maptaskr_layername" : "{{ result.maptaskr_layername }}",\n            "maptaskr_securitygroupid" : "{{ result.maptaskr_securitygroupid }}",\n            "maptaskr_layersid" : "{{ result.maptaskr_layersid }}",\n            "maptaskr_layerurl" : "{{ result.maptaskr_layerurl }}",\n            "maptaskr_layertype" : "{{ result.maptaskr_layertype }}",\n            "maptaskr_layergroupid" : "{{ result.maptaskr_layergroupid }}",\n            "maptaskr_metadata_style" : "{{ result.maptaskr_metadata_style }}",\n            "maptaskr_hasauth" : "{{ result.maptaskr_hasauth }}",\n            "createdon" : "{{ result.createdon }}",\n            "maptaskr_securitylayertype" : "{{ result.maptaskr_securitylayertype }}",\n            "maptaskr_sharedto" : "{{ result.maptaskr_sharedto }}",\n            "maptaskr_password" : "{{ result.maptaskr_password }}",\n            "maptaskr_securitylayervalue" : "{{ result.maptaskr_securitylayervalue }}",\n            "maptaskr_username" : "{{ result.maptaskr_username }}",\n            "maptaskr_name" : "{{ result.maptaskr_name }}",\n            "maptaskr_arcgisauthapplication" : "{{ result.maptaskr_arcgisauthapplication }}",\n            "maptaskr_securitylayerkey" : "{{ result.maptaskr_securitylayerkey }}",\n            "maptaskr_zoomtoextent" : "{{ result.maptaskr_zoomtoextent }}",\n            "maptaskr_isforportal" : "{{ result.maptaskr_isforportal }}",\n            "maptaskr_statictoken" : "{{ result.maptaskr_statictoken }}",\n            "maptaskr_arcgisauthtype" : "{{ result.maptaskr_arcgisauthtype }}",\n            "maptaskr_isforauthenticated" : "{{ result.maptaskr_isforauthenticated }}",\n            "maptaskr_sortorder" : "{{ result.maptaskr_sortorder }}",\n            "maptaskr_isforenableexport" : "{{ result.maptaskr_isforenableexport }}",\n            "layer_group_name" : "{{ result[\'layer_group_name\'] }}"\n        }\n        {% unless forloop.last %},{% endunless %}\n        {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h3,{id:"v22164--later",children:"v2.2.1.64 & later"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% fetchxml layer_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="maptaskr_layers">\n            <attribute name="maptaskr_iscorporate" />\n            <attribute name="maptaskr_layername" />\n            <attribute name="maptaskr_securitygroupid" />\n            <attribute name="maptaskr_layersid" />\n            <attribute name="maptaskr_layerurl" />\n            <attribute name="maptaskr_layertype" />\n            <attribute name="maptaskr_layergroupid" />\n            <attribute name="maptaskr_metadata_style" />\n            <attribute name="maptaskr_hasauth" />\n            <attribute name="createdon" />\n            <attribute name="maptaskr_securitylayertype" />\n            <attribute name="maptaskr_sharedto" />\n            <attribute name="maptaskr_password" />\n            <attribute name="maptaskr_securitylayervalue" />\n            <attribute name="maptaskr_username" />\n            <attribute name="maptaskr_name" />\n            <attribute name="maptaskr_arcgisauthapplication" />\n            <attribute name="maptaskr_securitylayerkey" />\n            <attribute name="maptaskr_zoomtoextent" />\n            <attribute name="maptaskr_isforportal" />\n            <attribute name="maptaskr_statictoken" />\n            <attribute name="maptaskr_arcgisauthtype" />\n            <attribute name="maptaskr_isforauthenticated" />\n            <attribute name="maptaskr_additionalparameters" />\n            <attribute name="maptaskr_sortorder" />\n            <attribute name="maptaskr_isforenableexport" />\n            <order descending="false" attribute="maptaskr_sortorder" />\n            <filter type="and">\n                <condition attribute="maptaskr_iscorporate" value="1" operator="eq" />\n                <condition attribute="maptaskr_isforportal" value="1" operator="eq" />\n            </filter>\n            <link-entity name="maptaskr_layergroup" alias="layerGroup" link-type="inner" to="maptaskr_group_id" from="maptaskr_layergroupid">\n                <attribute name="maptaskr_name" alias="layer_group_name" />\n                <attribute name="maptaskr_layergroupid" />\n            </link-entity>\n        </entity>\n    </fetch>\n{% endfetchxml %} \n{   "layers" :\n    [\n        {% for result in layer_query.results.entities %}\n        {\n            "maptaskr_iscorporate" : "{{ result.maptaskr_iscorporate }}",\n            "maptaskr_layername" : "{{ result.maptaskr_layername }}",\n            "maptaskr_securitygroupid" : "{{ result.maptaskr_securitygroupid }}",\n            "maptaskr_layersid" : "{{ result.maptaskr_layersid }}",\n            "maptaskr_layerurl" : "{{ result.maptaskr_layerurl }}",\n            "maptaskr_layertype" : "{{ result.maptaskr_layertype }}",\n            "maptaskr_layergroupid" : "{{ result.maptaskr_layergroupid }}",\n            "maptaskr_metadata_style" : "{{ result.maptaskr_metadata_style }}",\n            "maptaskr_hasauth" : "{{ result.maptaskr_hasauth }}",\n            "createdon" : "{{ result.createdon }}",\n            "maptaskr_securitylayertype" : "{{ result.maptaskr_securitylayertype }}",\n            "maptaskr_sharedto" : "{{ result.maptaskr_sharedto }}",\n            "maptaskr_password" : "{{ result.maptaskr_password }}",\n            "maptaskr_securitylayervalue" : "{{ result.maptaskr_securitylayervalue }}",\n            "maptaskr_username" : "{{ result.maptaskr_username }}",\n            "maptaskr_name" : "{{ result.maptaskr_name }}",\n            "maptaskr_arcgisauthapplication" : "{{ result.maptaskr_arcgisauthapplication }}",\n            "maptaskr_securitylayerkey" : "{{ result.maptaskr_securitylayerkey }}",\n            "maptaskr_zoomtoextent" : "{{ result.maptaskr_zoomtoextent }}",\n            "maptaskr_isforportal" : "{{ result.maptaskr_isforportal }}",\n            "maptaskr_statictoken" : "{{ result.maptaskr_statictoken }}",\n            "maptaskr_arcgisauthtype" : "{{ result.maptaskr_arcgisauthtype }}",\n            "maptaskr_isforauthenticated" : "{{ result.maptaskr_isforauthenticated }}",\n            "maptaskr_additionalparameters" : "{{ result.maptaskr_additionalparameters }}",\n            "maptaskr_sortorder" : "{{ result.maptaskr_sortorder }}",\n            "maptaskr_isforenableexport" : "{{ result.maptaskr_isforenableexport }}",\n            "layer_group_name" : "{{ result[\'layer_group_name\'] }}"\n        }\n        {% unless forloop.last %},{% endunless %}\n        {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-lambpet-search",children:"Maptaskr Lambpet Search"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% assign parentid = request.params[\'parentid\'] | xml_escape %}\n{% fetchxml mtr_query %}\n    <fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false">\n        <entity name="maptaskr_lambpet">\n            <attribute name="maptaskr_lambpetid" />\n            <attribute name="maptaskr_name" />\n            <attribute name="createdon" />\n            <order attribute="maptaskr_name" descending="false" />\n            <filter type="and">\n                <condition attribute="maptaskr_parententityid" operator="eq" value="{{parentid}}" />\n            </filter>\n        </entity>\n    </fetch>\n{% endfetchxml %} \n{   "mtrshape" :\n    [\n        {% for result in mtr_query.results.entities %}\n        {\n            "mtrobjectid" : {{ result.maptaskr_lambpetid }}\n        }\n        {% unless forloop.last %},{% endunless %}\n        {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-shape-search",children:"Maptaskr Shape Search"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% assign parentid = request.params[\'parentid\'] | xml_escape %}\n{% fetchxml mtr_query%}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="annotation">\n            <attribute name="subject" />\n            <attribute name="notetext" />\n            <attribute name="filename" />\n            <attribute name="documentbody" />\n            <attribute name="annotationid" />\n            <attribute name="objectid" />\n            <order descending="false" attribute="subject" />\n            <link-entity name="maptaskr_lambpet" alias="af" link-type="inner" to="objectid" from="maptaskr_lambpetid">\n                <attribute name="maptaskr_lambpetid" />\n                <filter type="and">\n                    <condition attribute="maptaskr_parententityid" operator="eq" value="{{parentid}}" />\n                </filter>\n            </link-entity>\n        </entity>\n    </fetch>\n{% endfetchxml %}\n{ "shapes" :\n    [\n    {% for result in mtr_query.results.entities %}\n        {\n            "subject" : "{{ result.subject }}",\n            "notetext" : "{{ result.notetext }}",\n            "filename" : "{{ result.filename }}",\n            "documentbody" : "{{ result.documentbody }}",\n            "annotationid" : "{{ result.annotationid }}",\n            "documentname" : "{{ result["ag.dwer_name"] }}",\n            "documenttype" : "{{ result.subject }}",\n            "lambpetid" : "{{ result.[\'af.maptaskr_lambpetid\'] }}"\n        }\n    {% unless forloop.last %},{% endunless %}\n    {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-layer-groups",children:"Maptaskr Layer Groups"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% fetchxml layer_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="maptaskr_layergroup">\n            <attribute name="maptaskr_name" />\n            <attribute name="maptaskr_layergroupid" />\n            <attribute name="maptaskr_group_type" />\n            <attribute name="createdby" />\n            <order descending="false" attribute="maptaskr_name" />\n        </entity>\n    </fetch>\n{% endfetchxml %}\n{ "layergroups" :\n    [\n    {% for result in layer_query.results.entities %}\n        {\n            "maptaskr_name" : "{{ result.maptaskr_name }}",\n            "maptaskr_layergroupid" : "{{ result.maptaskr_layergroupid }}",\n            "maptaskr_group_type" : "{{ result.maptaskr_group_type }}",\n            "_createdby_value" : "{{ result.createdby }}"\n        }\n    {% unless forloop.last %},{% endunless %}\n    {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-related-shape-search",children:"Maptaskr Related Shape Search"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% assign parentid = request.params[\'parentid\'] | xml_escape %}\n\n{% assign parent_id_filter = "<value />" %}\n\n{% fetchxml is_account_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="account">\n            <attribute name="accountid" />\n            <filter type="and">\n                <condition attribute="accountid" operator="eq" value="{{parentid}}" />\n            </filter>\n        </entity>\n    </fetch>\n{% endfetchxml %}\n\n{% fetchxml is_contact_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="contact">\n            <attribute name="contactid" />\n            <filter type="and">\n                <condition attribute="contactid" operator="eq" value="{{parentid}}" />\n            </filter>\n        </entity>\n    </fetch>\n{% endfetchxml %}\n\n{% assign is_account = false %}\n{% for account in is_account_query.results.entities %}\n{% assign is_account = true %}\n{% endfor %}\n\n{% assign is_contact = false %}\n{% for contact in is_contact_query.results.entities %}\n{% assign is_contact = true %}\n{% endfor %}\n\n{% assign filtered_parent_ids = "" %}\n\n{% if is_account %}\n\n  {% fetchxml account_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="account">\n            <attribute name="accountid" />\n            <filter type="and">\n                <condition attribute="accountid" operator="neq" value="{{parentid}}" />\n            </filter>\n        </entity>\n    </fetch>\n  {% endfetchxml %}\n\n  {% capture parent_id_filter %}\n    {% for account in account_query.results.entities %}\n      <value>{{account.accountid}}</value>\n    {% endfor %}\n  {% endcapture %}\n\n{% elsif is_contact %}\n\n  {% fetchxml contact_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="contact">\n            <attribute name="contactid" />\n            <filter>\n                <condition attribute="contactid" operator="neq" value="{{parentid}}" />\n            </filter>\n        </entity>\n    </fetch>\n  {% endfetchxml %}\n\n  {% capture parent_id_filter %}\n    {% for contact in contact_query.results.entities %}\n      <value>{{contact.contactid}}</value>\n    {% endfor %}\n  {% endcapture %}\n\n{% endif %}\n\n{% fetchxml mtr_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="annotation">\n            <attribute name="subject" />\n            <attribute name="notetext" />\n            <attribute name="filename" />\n            <attribute name="documentbody" />\n            <attribute name="annotationid" />\n            <attribute name="objectid" />\n            <order descending="false" attribute="subject" />\n            <link-entity name="maptaskr_lambpet" alias="af" link-type="inner" to="objectid" from="maptaskr_lambpetid">\n                <attribute name="maptaskr_lambpetid" />\n                <filter type="and">\n                    <condition attribute="maptaskr_parententityid" operator="in">\n                        {{parent_id_filter}}\n                    </condition>\n                </filter>\n            </link-entity>\n        </entity>\n    </fetch>\n{% endfetchxml %}\n{ "shapes" :\n  [\n    {% for result in mtr_query.results.entities %}\n      {\n        "subject" : "{{ result.subject }}",\n        "notetext" : "{{ result.notetext }}",\n        "filename" : "{{ result.filename }}",\n        "documentbody" : "{{ result.documentbody }}",\n        "annotationid" : "{{ result.annotationid }}",\n        "documentname" : "{{ result["ag.dwer_name"] }}",\n        "documenttype" : "{{ result.subject }}",\n        "lambpetid" : "{{ result.[\'af.maptaskr_lambpetid\'] }}",\n        "attributes" : [\n          "key" : "Name",\n          "Value" : "{{ result.subject }}"\n        ]\n      }\n    {% unless forloop.last %},{% endunless %}\n    {% endfor %}\n  ]\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-layer-group-security-search",children:"Maptaskr Layer Group Security Search"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% fetchxml layer_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="cr092_layertokens">\n            <attribute name="cr092_name" alias="name" />\n            <order descending="false" attribute="cr092_name" />\n        </entity>\n    </fetch>\n{% endfetchxml %}\n{ "token":\n    [\n        {% for result in layer_query.results.entities %}\n        {\n            "token": "{{result.name}}"\n        }\n        {% unless forloop.last %},{% endunless %}\n        {% endfor %}\n    ]\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"maptaskr-dataverse-layer",children:"Maptaskr Dataverse Layer"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-liquid",children:'{% assign parentid = request.params[\'parentid\'] | xml_escape %}\n{% fetchxml account_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="account">\n            <attribute name="accountid" />\n            <attribute name="address1_longitude" />\n            <attribute name="address1_latitude" />\n            <attribute name="name" />\n            <attribute name="websiteurl" />\n            <attribute name="telephone1" />\n            <filter type="and">\n                <condition attribute="accountid" operator="neq" value="{{parentid}}" />\n                <condition attribute="address1_latitude" operator="not-null" />\n                <condition attribute="address1_longitude" operator="not-null" />\n            </filter>\n        </entity>\n    </fetch>\n{% endfetchxml %}\n{% fetchxml contact_query %}\n    <fetch distinct="false" mapping="logical" output-format="xml-platform" version="1.0">\n        <entity name="contact">\n            <attribute name="contactid" />\n            <attribute name="address1_longitude" />\n            <attribute name="address1_latitude" />\n            <attribute name="lastname" />\n            <attribute name="websiteurl" />\n            <attribute name="telephone1" />\n            <filter>\n                <condition attribute="contactid" operator="neq" value="{{parentid}}" />\n                <condition attribute="address1_latitude" operator="not-null" />\n                <condition attribute="address1_longitude" operator="not-null" />\n            </filter>\n        </entity>\n    </fetch>\n{% endfetchxml %}\n{ "layers": [\n      {\n          "LayerName": "Accounts",\n          "LayerStrokeColor": "#FF0000",\n          "LayerFillColor": "#FF0000",\n          "LayerFeatures": [\n            {% for account in account_query.results.entities %}\n            {\n              "FeatureName": "{{account.accountid}}",\n              "FeatureGeometry": {\n                "type": "Point",\n                "coordinates": [{{account.address1_longitude}},{{account.address1_latitude}}]\n              },\n              "FeatureAttributes": [\n                {"key": "Company Name", "value":"{{account.name}}"},\n                {"key": "Website", "value":"{{account.websiteurl}}"},\n                {"key": "Phone Number", "value":"{{account.telephone1}}"}\n              ]\n            }\n            {% unless forloop.last %},{% endunless %}\n            {% endfor %}\n          ]\n      },\n      {\n          "LayerName": "Contacts",\n          "LayerStrokeColor": "#0000FF",\n          "LayerFillColor": "#0000FF",\n          "LayerFeatures": [\n            {% for contact in contact_query.results.entities %}\n            {\n              "FeatureName": "{{contact.contactid}}",\n              "FeatureGeometry": {\n                "type": "Point",\n                "coordinates": [{{contact.address1_longitude}},{{contact.address1_latitude}}]\n              },\n              "FeatureAttributes": [\n                {"key": "Company Name", "value":"{{contact.lastname}}"},\n                {"key": "Website", "value":"{{contact.websiteurl}}"},\n                {"key": "Phone Number", "value":"{{contact.telephone1}}"}\n              ]\n            }\n            {% unless forloop.last %},{% endunless %}\n            {% endfor %}\n          ]\n      }\n  ]\n}\n'})})]})}function m(t={}){const{wrapper:a}={...(0,n.R)(),...t.components};return a?(0,r.jsx)(a,{...t,children:(0,r.jsx)(u,{...t})}):u(t)}},28453:(t,a,e)=>{e.d(a,{R:()=>i,x:()=>l});var r=e(96540);const n={},s=r.createContext(n);function i(t){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof t?t(a):{...a,...t}}),[a,t])}function l(t){let a;return a=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:i(t.components),r.createElement(s.Provider,{value:a},t.children)}}}]);