"use strict";(self.webpackChunkmaptaskr_docs_copy=self.webpackChunkmaptaskr_docs_copy||[]).push([[613],{36944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var s=t(74848),i=t(28453);const r={},o="Map Interaction Events",l={id:"power-pages/registerable-events/map-interaction-events/map-interaction-events",title:"Map Interaction Events",description:"FeaturesSelected",source:"@site/docs/power-pages/registerable-events/map-interaction-events/map-interaction-events.md",sourceDirName:"power-pages/registerable-events/map-interaction-events",slug:"/power-pages/registerable-events/map-interaction-events/",permalink:"/docs/power-pages/registerable-events/map-interaction-events/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"maptaskrSidebar",previous:{title:"Measurement Events",permalink:"/docs/power-pages/registerable-events/measurement-events/"},next:{title:"Layer List Events",permalink:"/docs/power-pages/registerable-events/layer-list-events/"}},a={},d=[{value:"FeaturesSelected",id:"featuresselected",level:2},{value:"Description",id:"description",level:3},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:4},{value:"Parameters",id:"parameters",level:3},{value:"Response Example",id:"response-example",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners",level:3},{value:"Example",id:"example-1",level:4},{value:"OnMapClicked",id:"onmapclicked",level:2},{value:"Description",id:"description-1",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Example",id:"example-2",level:4},{value:"Parameters",id:"parameters-1",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-1",level:3},{value:"Example",id:"example-3",level:4},{value:"ZoomChanged",id:"zoomchanged",level:2},{value:"Description",id:"description-2",level:3},{value:"Usage",id:"usage-2",level:3},{value:"Example",id:"example-4",level:4},{value:"Parameters",id:"parameters-2",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-2",level:3},{value:"Example",id:"example-5",level:4},{value:"ExtentChanged",id:"extentchanged",level:2},{value:"Description",id:"description-3",level:3},{value:"Usage",id:"usage-3",level:3},{value:"Example",id:"example-6",level:4},{value:"Parameters",id:"parameters-3",level:3},{value:"Response Example",id:"response-example-1",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-3",level:3},{value:"Example",id:"example-7",level:4},{value:"MapDownloaded",id:"mapdownloaded",level:2},{value:"Description",id:"description-4",level:3},{value:"Usage",id:"usage-4",level:3},{value:"Example",id:"example-8",level:4},{value:"IMPORTANT",id:"important",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-4",level:3},{value:"Example",id:"example-9",level:4},{value:"ShapeIntersectionsDetected",id:"shapeintersectionsdetected",level:2},{value:"Description",id:"description-5",level:3},{value:"Usage",id:"usage-5",level:3},{value:"Example",id:"example-10",level:4},{value:"Parameters",id:"parameters-5",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners-5",level:3},{value:"Example",id:"example-11",level:4}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"map-interaction-events",children:"Map Interaction Events"}),"\n",(0,s.jsx)(n.h2,{id:"featuresselected",children:"FeaturesSelected"}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"FeaturesSelected"})," event is triggered when one or more features are selected on the map using the ",(0,s.jsx)(n.code,{children:"Maptaskr for Power Pages"})," App. This event provides information about the selected features in an array."]}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["To listen for the ",(0,s.jsx)(n.code,{children:"FeaturesSelected"})," event, you can use the ",(0,s.jsx)(n.code,{children:"on"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'window[\'maptaskrPCF\'].on("FeaturesSelected", function(featureArray) { \n\n    console.log("featureArray: " + featureArray);\n\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,s.jsx)(n.code,{children:"FeaturesSelected"})," event. The provided call-back function is executed when the event occurs, logging the selected features in an array to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"featureArray"})," (array): An array containing information about the selected features."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"response-example",children:"Response Example"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"featureArray"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        " extent": "16604577.824962063,-4208878.32517417,16877565.654802185,-4017740.3699756954", \n        "geometry" : { \n            "geometry": "16604577.824962063,-4193191.11802936,16798639.64578343,-4017740.3699756954,16877565.654802185,-4208878.32517417,16604577.824962063,-4193191.11802936", \n            "type" : "Polygon" \n        }, \n        "attributes" : { \n            "FID" : 433, \n            "ST*PLY_PID" : null, \n            "DT_CREATE" : null, \n            "DT_RETIRE" : null, \n            "STATE_PID" : null, \n            "STATE_NAME" : null, \n            "ST_ABBREV" : null, \n            "Shape*_Area" : 25470103468.5586, \n            "Shape__Length" : 741846.481025205, \n            "LayerName" : "new_gis_sa_test" \n        } \n    } \n] \n'})}),"\n",(0,s.jsx)(n.h3,{id:"removing-event-listeners",children:"Removing Event Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the event listener for the ",(0,s.jsx)(n.code,{children:"FeaturesSelected"})," event, you can use the ",(0,s.jsx)(n.code,{children:"off"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window['maptaskrPCF'].off(\"FeaturesSelected\"); \n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,s.jsx)(n.code,{children:"FeaturesSelected"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,s.jsx)(n.h2,{id:"onmapclicked",children:"OnMapClicked"}),"\n",(0,s.jsx)(n.h3,{id:"description-1",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"OnMapClicked"})," event is triggered when a user clicks on the map using the ",(0,s.jsx)(n.code,{children:"Maptaskr for Power Pages"})," App. This event provides information about the clicked coordinates on the map."]}),"\n",(0,s.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["To listen for the ",(0,s.jsx)(n.code,{children:"OnMapClicked"})," event, you can use the ",(0,s.jsx)(n.code,{children:"on"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'window[\'maptaskrPCF\'].on("OnMapClicked", function(coordinates){ \n\n    console.log("coordinates: " + coordinates);\n\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,s.jsx)(n.code,{children:"OnMapClicked"})," event. The provided call-back function is executed when the event occurs, logging the clicked coordinates on the map to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"coordinates"})," (object): An object containing information about the clicked coordinates on the map."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removing-event-listeners-1",children:"Removing Event Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the event listener for the ",(0,s.jsx)(n.code,{children:"OnMapClicked"})," event, you can use the ",(0,s.jsx)(n.code,{children:"off"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,s.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window['maptaskrPCF'].off(\" OnMapClicked\"); \n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,s.jsx)(n.code,{children:"OnMapClicked"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,s.jsx)(n.h2,{id:"zoomchanged",children:"ZoomChanged"}),"\n",(0,s.jsx)(n.h3,{id:"description-2",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ZoomChanged"})," event is triggered when the zoom level of the map is changed using the ",(0,s.jsx)(n.code,{children:"Maptaskr for Power Pages"})," App. This event provides information about the previous and new zoom levels."]}),"\n",(0,s.jsx)(n.h3,{id:"usage-2",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["To listen for the ",(0,s.jsx)(n.code,{children:"ZoomChanged"})," event, you can use the ",(0,s.jsx)(n.code,{children:"on"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,s.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'window[\'maptaskrPCF\'].on("ZoomChanged", function(previousZoom, newZoom) { \n    \n    console.log("previousZoom: " + previousZoom);\n\n    console.log(" newZoom: " + newZoom);\n\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,s.jsx)(n.code,{children:"ZoomChanged"})," event. The provided call-back function is executed when the event occurs, logging the previous and new zoom levels to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"previousZoom"})," (number): The previous zoom level."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"newZoom"})," (number): The new zoom level."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removing-event-listeners-2",children:"Removing Event Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the event listener for the ",(0,s.jsx)(n.code,{children:"ZoomChanged"})," event, you can use the ",(0,s.jsx)(n.code,{children:"off"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,s.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window['maptaskrPCF'].off(\" ZoomChanged\"); \n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,s.jsx)(n.code,{children:"ZoomChanged"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,s.jsx)(n.h2,{id:"extentchanged",children:"ExtentChanged"}),"\n",(0,s.jsx)(n.h3,{id:"description-3",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ExtentChanged"})," event is triggered when the extent (viewable area) of the map is changed using the ",(0,s.jsx)(n.code,{children:"Maptaskr for Power Pages"})," App. This event provides information about the previous and new extents."]}),"\n",(0,s.jsx)(n.h3,{id:"usage-3",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["To listen for the ",(0,s.jsx)(n.code,{children:"ExtentChanged"})," event, you can use the ",(0,s.jsx)(n.code,{children:"on"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,s.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'window[\'maptaskrPCF\'].on("ExtentChanged", function(previousExtent, newExtent) {\n\n    console.log("previousExtent: " + previousExtent);\n\n    console.log(" newExtent: " + newExtent);\n\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,s.jsx)(n.code,{children:"ExtentChanged"})," event. The provided call-back function is executed when the event occurs, logging the previous and new extents to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"previousExtent"})," (string): An object representing the previous extent."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"newExtent"})," (string): An object representing the new extent."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"response-example-1",children:"Response Example"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"previousExtent"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"[16829447.323061984,-4008072.879304091,16835786.819095384,-4003663.41823489]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"newExtent"})," returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"[17020622.764176447,-3197224.0595355905,17032536.673651483,-3188937.293563126]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"removing-event-listeners-3",children:"Removing Event Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the event listener for the ",(0,s.jsx)(n.code,{children:"ExtentChanged"})," event, you can use the ",(0,s.jsx)(n.code,{children:"off"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,s.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window['maptaskrPCF'].off(\" ExtentChanged\"); \n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,s.jsx)(n.code,{children:"ExtentChanged"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,s.jsx)(n.h2,{id:"mapdownloaded",children:"MapDownloaded"}),"\n",(0,s.jsx)(n.h3,{id:"description-4",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"MapDownloaded"})," event is triggered when a map is downloaded or exported using the ",(0,s.jsx)(n.code,{children:"Maptaskr for Power Pages"})," App. This event provides the base64 encoded file rendered. This event also provides the filetype of the Base64 file either in ",(0,s.jsx)(n.code,{children:"PDF"})," or ",(0,s.jsx)(n.code,{children:"PNG"})," format (based on configured properties)"]}),"\n",(0,s.jsx)(n.h3,{id:"usage-4",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["To listen for the ",(0,s.jsx)(n.code,{children:"MapDownloaded"})," event, you can use the ",(0,s.jsx)(n.code,{children:"on"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,s.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'window[\'maptaskrPCF\'].on("MapDownloaded", function(filetype, base64File) { \n\n    console.log("filetype: " + filetype);\n\n    console.log(" base64File: " + base64File);\n\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,s.jsx)(n.code,{children:"MapDownloaded"})," event. When the event occurs, the provided call-back function is executed, logging information file type and the base64 file itself to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"important",children:"IMPORTANT"}),"\n",(0,s.jsxs)(n.p,{children:["Registering this event will prevent the standard ",(0,s.jsx)(n.code,{children:"file download"})," and will require you to handle the process after the base64 file is generated. This is to prevent duplicate downloads should you wish to modify the image / pdf before presenting it to the user."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"filetype"})," (string): The file type of the downloaded map (e.g., ",(0,s.jsx)(n.code,{children:"PDF"}),", ",(0,s.jsx)(n.code,{children:"PNG"})," )."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"base64File"})," (string): The base64-encoded content of the downloaded map."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removing-event-listeners-4",children:"Removing Event Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the event listener for the ",(0,s.jsx)(n.code,{children:"MapDownloaded"})," event, you can use the ",(0,s.jsx)(n.code,{children:"off"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,s.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window['maptaskrPCF'].off(\"MapDownloaded\"); \n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,s.jsx)(n.code,{children:"MapDownloaded"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]}),"\n",(0,s.jsx)(n.h2,{id:"shapeintersectionsdetected",children:"ShapeIntersectionsDetected"}),"\n",(0,s.jsx)(n.h3,{id:"description-5",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ShapeIntersectionsDetected"})," event is triggered when intersections are detected between shapes within the map application using the ",(0,s.jsx)(n.code,{children:"Maptaskr for Power Pages"})," App. This event provides information about the shapes that intersect."]}),"\n",(0,s.jsx)(n.h3,{id:"usage-5",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["To listen for the ",(0,s.jsx)(n.code,{children:"ShapeIntersectionsDetected"})," event, you can use the ",(0,s.jsx)(n.code,{children:"on"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This allows you to register an event listener that executes a callback function when the event is triggered."]}),"\n",(0,s.jsx)(n.h4,{id:"example-10",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'window[\'maptaskrPCF\'].on("ShapeIntersectionsDetected", function(intersectedShapes) {\n\n    console.log("intersectedShapes: " + intersectedShapes);\n\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, we have registered an event listener for the ",(0,s.jsx)(n.code,{children:"ShapeIntersectionsDetected"})," event. The provided callback function is executed when the event occurs and logs the intersected shapes to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-5",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"intersectedShapes"})," (string): Information about the shapes that intersect."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removing-event-listeners-5",children:"Removing Event Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["To remove the event listener for the ",(0,s.jsx)(n.code,{children:"ShapeIntersectionsDetected"})," event, you can use the ",(0,s.jsx)(n.code,{children:"off"})," method of the ",(0,s.jsx)(n.code,{children:"window['maptaskrPCF']"})," object. This is useful when you no longer want to listen to this specific event."]}),"\n",(0,s.jsx)(n.h4,{id:"example-11",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"window['maptaskrPCF'].off(\" ShapeIntersectionsDetected\"); \n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,s.jsx)(n.code,{children:"ShapeIntersectionsDetected"})," is removed, ensuring that the associated callback function no longer executes when the event is triggered."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);