"use strict";(self.webpackChunkmaptaskr_docs_copy=self.webpackChunkmaptaskr_docs_copy||[]).push([[4158],{61726:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(74848),a=s(28453);const r={},i="Base Map Events",o={id:"dynamics-365/registerable-events/base-map-events",title:"Base Map Events",description:"BaseMapChanged",source:"@site/docs/dynamics-365/registerable-events/base-map-events.md",sourceDirName:"dynamics-365/registerable-events",slug:"/dynamics-365/registerable-events/base-map-events",permalink:"/docs/dynamics-365/registerable-events/base-map-events",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"maptaskrSidebar",previous:{title:"Measurement Events",permalink:"/docs/dynamics-365/registerable-events/measurement-drawing-events"},next:{title:"Annotation Drawing Events",permalink:"/docs/dynamics-365/registerable-events/annotation-drawing-events"}},c={},d=[{value:"BaseMapChanged",id:"basemapchanged",level:2},{value:"Description",id:"description",level:3},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:4},{value:"Parameters",id:"parameters",level:3},{value:"Removing Event Listeners",id:"removing-event-listeners",level:3},{value:"Example",id:"example-1",level:4}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"base-map-events",children:"Base Map Events"}),"\n",(0,t.jsx)(n.h2,{id:"basemapchanged",children:"BaseMapChanged"}),"\n",(0,t.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"BaseMapChanged"})," event is triggered when a user changes the base map type on a ",(0,t.jsx)(n.code,{children:"Dashboard"})," or ",(0,t.jsx)(n.code,{children:"Record Level"})," Maptaskr Map. This event provides information about the new base map type and its associated URL."]}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To listen for the ",(0,t.jsx)(n.code,{children:"BaseMapChanged"})," event, you can use the ",(0,t.jsx)(n.code,{children:"on"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This allows you to register an event listener that executes a call-back function when the event is triggered."]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'window.top[\'maptaskrCORE\'][controlId].on("BaseMapChanged", function(baseMapType, url) {\n    console.log("baseMapType: " + baseMapType);\n    console.log("url: " + url);\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, we've registered an event listener for the ",(0,t.jsx)(n.code,{children:"BaseMapChanged"})," event. When the event occurs, the provided call-back function is executed, logging the new base map type and its associated URL to the console."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"baseMapType"})," (string): The type or category of the new base map."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"url"})," (string): The URL or source of the new base map."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"removing-event-listeners",children:"Removing Event Listeners"}),"\n",(0,t.jsxs)(n.p,{children:["To remove the event listener for the ",(0,t.jsx)(n.code,{children:"BaseMapChanged"})," event, you can use the ",(0,t.jsx)(n.code,{children:"off"})," method of the ",(0,t.jsx)(n.code,{children:"window.top['maptaskrCORE']"})," object. This is useful when you no longer want to listen for this specific event."]}),"\n",(0,t.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"window.top['maptaskrCORE'][controlId].off(\"BaseMapChanged\");\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, the event listener for ",(0,t.jsx)(n.code,{children:"BaseMapChanged"})," is removed, ensuring that the associated call-back function no longer executes when the event is triggered."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(96540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);