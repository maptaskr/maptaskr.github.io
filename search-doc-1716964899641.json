{"searchDocs":[{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"","version":null},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"","version":null},{"title":"ArcGIS GIS Layer","type":0,"sectionRef":"#","url":"/docs/dynamics-365/arcgis-configuration/arcgis-gis-layer","content":"","keywords":"","version":"Next"},{"title":"Adding GIS Service Layers​","type":1,"pageTitle":"ArcGIS GIS Layer","url":"/docs/dynamics-365/arcgis-configuration/arcgis-gis-layer#adding-gis-service-layers","content":" Layers are managed via the Layers panel, which is accessible via the top navigation.  Figure 15: Corporate Layers.​    Corporate layers are arranged by the administrator to provide global access to all licensed Maptaskr users.  ","version":"Next","tagName":"h2"},{"title":"Add an ArcGIS Service Layer​","type":1,"pageTitle":"ArcGIS GIS Layer","url":"/docs/dynamics-365/arcgis-configuration/arcgis-gis-layer#add-an-arcgis-service-layer","content":" To add a layer, click Add Corporate Layer and you see the Add Layer modal dialog.  Figure 16: Add Corporate Layer.​    Click on the Service tab to show the settings to configure a layer service.  Figure 17: Add Service Layer.​    To add a layer from an ArcGIS service, set the Service Type drop down to ArcGIS, and this will reconfigure the configuration screen, and prompt (ArcGIS, etc):  FIELD\tDESCRIPTIONLayer name\tLayer name will be the display name for the layer in your layer menu. Service type Service type is used to determine where this layer is coming from. If you select &quot;ArcGIS&quot; you will be prompted to select the Auth Type for the layer. If your ArcGIS layer is secured using authentication, then we highly recommend arranging for the designated Maptaskr Administrator to configure this as a Corporate Layer. If the layer uses Authentication that is already configured choose the relevant option from the dropdown. If your ArcGIS layer is unauthenticated, don't select anything here. Layer URL\tLayer URL is the URL to retrieve the Layer from. Item ID\tProvides the ability to enable Layer specific attributes, like what attributes can be visible are controlled with item it. See ArcGIS Developer glossary – Item ID for details. Additional Parameters\tProvides the ability to append additional query parameters to every request for this layer. These need to be configured in standard query string format. E.g. key1=value1&amp;key2=value2. Auth Types\tSets the authentication type to use for this layer – Auth Application – If needing to provide application-level authentication to access the layer. Will need to have an Auth Application preconfigured. See section ArcGIS Auth Applications for details on how to configure this. Auth User - If needing to provide user-level authentication to access the layer. Static Token Auth – Allows you to specify a per-layer static token to authenticate with. For more details see Layer Authentication - Static Token Auth. Selecting the Static Token Auth type will enable a Static Token field which will need to be configured for use. Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage. Security Group\tBy adding a security group to a layer, user can set permission for the layer to be viewed if the end user is a part of certain team or has a specific role. Metadata Style\tMetadata style refers to how the attribute data is displayed when clicking on an interactive feature. Enable in Portal\tSets the layer to be available to the Maptaskr for Power Apps Portal solution (Licensed separately). Is Authenticated\tSets the layer to be authenticated in portal solution. See portal documentation for more info. This property requires Enabled in Portal to be enabled. Enable Export\tSets the layer to enable export. When this is enabled, users will be able to export data from the attributes table for this layer. Add as a Data Source\tSets the layer to be able to be utilised for more in-depth integrations at a record level via the use of relationships. Add as Default Layer\tSets the layers as a default layer that loads on default. Add as Custom Basemap\tSets the layer to be made available as a basemap available to users. Add as Default Basemap\tWill set the layer to be the default Maptaskr basemap layer. Add as Custom Search Endpoint\tEnable the ability to utilise the service endpoint as a custom address search service provider. Enable feature interaction\tAllows clicking on features to display attribute data (if applicable to the layer) Enable symbology\tTells the Maptaskr control to respect the symbology given by a layer (if applicable)  Once all mandatory and appropriate fields have been configured for the layer in question, click Upload to add the layer to the list of layers available to the appropriate Maptaskr users. These layers can be turned on to provide overlays on the Maptaskr map.  Figure 18: Example ArcGIS Layer Configured.​    ","version":"Next","tagName":"h2"},{"title":"Layer Authentication - Static Token Auth​","type":1,"pageTitle":"ArcGIS GIS Layer","url":"/docs/dynamics-365/arcgis-configuration/arcgis-gis-layer#layer-authentication---static-token-auth","content":" ArcGIS layers can also be configured to use a static token on a per layer scope. This allows you to have a specific token for each layer and gives you the flexibility to implement your own flows that regularly refresh these tokens. When used in combination with the token refresh interval it is possible to have rolling tokens for additional security.  To configure a static token head into the D365 solution and edit or create an ArcGIS layer via the dashboard map.  Figure 19: Configuring Static Tokens.​    You will need to set Static Token Auth from the Auth Types dropdown. This will enable the Static Token field. Now you can enter your static token. When the portal control finds a layer with Static Token Auth enabled it will append this static token to every request for this layer.  Tip: You can implement secure server-to-server authentication by setting up a process for programmatically getting and setting this token based on the security needs of your organisation. Some customers utilise an integration service such as Power Automate or Logic App, which polls the token periodically and updates the corresponding Maptaskr layer configuration entry.  Note: If a layer is configured for Static Token Auth it will attempt to load the static token and use it for all queries regardless of the Is Authenticated field being enabled. ","version":"Next","tagName":"h3"},{"title":"Data Source Configuration","type":0,"sectionRef":"#","url":"/docs/dynamics-365/arcgis-configuration/data-source-configuration","content":"","keywords":"","version":"Next"},{"title":"Configuring Record Level ArcGIS Integration​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/arcgis-configuration/data-source-configuration#configuring-record-level-arcgis-integration","content":" Record level ArcGIS integration is configured within the entities Data Source configuration.  Prerequisite: Layers to be used in this section need to be preconfigured as per section ArcGIS GIS Layer.  Go to Data Sources on the left navigation pane and edit one of the entries available to be configured. Figure 20: Configuring Data Sources.​ Once in the Data Source configuration screen for that entity, scroll down to the additional settings tabs and click on the GIS tab to gain access to ArcGIS configuration area. Figure 21: Record Level ArcGIS Configuration Screen.​ In the dropdown select the layer which is to be integrated with. These layers are made available on this screen if the Add as a Data Source setting is set as per section ArcGIS GIS Layer. Figure 22: Select ArcGIS Layer for Record Level Integration.​  Once the layer is selected the following options are available to be configured for the general integration of that layer with the entity of choice. Multiple ArcGIS integrations can be added by simply clicking on the button. Various options for configuration are available as per the figure below.  Figure 23: ArcGIS Layer for Record Level Integration Configuration.​    The following table give an overview of each of the configuration options.  FIELD\tDESCRIPTIONPrimary\tIndicates that this ArcGIS integration is the primary integration for this entity data source mapping. Only configurable if there are multiple layer integrations configured. Editable\tSet the ability edit the ArcGIS data from within the Maptaskr interface. This option is only available if the ArcGIS layer service is setup to be editable. Show Only Filtered Features\tSet the maps to only show ArcGIS features that meet the filtering criteria and are related to the record in some manner. Highlight Filtered Feature\tSets the related ArcGIS features to be highlighted amongst all other feature that are present on the layer. See Figure 24. Load Infobox\tSets the Infobox to load if a user clicks on any of the related features displayed on the map. See Figure 25. Zoom\tZooms to show all the related features. Visibility\tSets whether this integration shows on the map or not. Filter Fields\tSets the field(s) that are to be used to filter ArcGIS features with the record entities. Mapping Fields\tSets the field(s) that are to be used to relate ArcGIS features with the record entities - I.e., configuring the write back of fields into ArcGIS, the mapping enables the admin to choose the fields from D365 to map to ArcGIS.  Figure 24: Record Level ArcGIS Integration - Highlight Related Features.​    Figure 25: Record Level ArcGIS Integration - Show Filtered and Highlight Related Features.​   ","version":"Next","tagName":"h2"},{"title":"General Information & Prerequisites","type":0,"sectionRef":"#","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites","content":"","keywords":"","version":"Next"},{"title":"Licensing & Capabilities​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#licensing--capabilities","content":" To leverage the Enterprise GIS integration capabilities provided by Maptaskr you will have needed to purchase the following edition licencing –  Maptaskr Enterprise for Dynamics 365. Maptaskr Enterprise for Power Apps Premium.  This edition provides access to the Enterprise GIS integration capabilities –  Integration into ESRI ArcGIS (See ArcGIS Version Support for version supportability). Connectivity and integration with multiple Esri ArcGIS instances, including support for online and on-premises at the same time (AGOL, ArcGIS Server/Enterprise). Consume and visualise GIS data from these Enterprise GIS systems at both a high-level layer and filtered down to a related record level to display specific geometries as required.  ","version":"Next","tagName":"h2"},{"title":"Esri ArcGIS Supportability​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#esri-arcgis-supportability","content":" ","version":"Next","tagName":"h2"},{"title":"ArcGIS Version Support​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#arcgis-version-support","content":" Esri ArcGIS Version\tVersion\tSupportEsri ArcGIS Online (AGOL)\tCurrent\tSupported Esri ArcGIS Server\t10.3 - 10.6.1\tSupported Esri ArcGIS Enterprise\tPre 10.3 10.3 and above\tNot Supported Supported  ","version":"Next","tagName":"h3"},{"title":"ArcGIS Layer Service Support​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#arcgis-layer-service-support","content":" Web Service\tLayer Type\tSupportFeature Service\tFeature Layer Streaming Feature Layer Spatiotemporal Feature Layer Feature Collections\tSupported Not yet supported Not yet supported Not yet supported Map Service\tTile Layer Map Image Layer\tSupported Not yet supported Vector Tile Service\tVector Tile Layer\tSupported Image Service\tImagery Layer Elevation Layer\tSupported Not yet supported Stream Service\tFeature Layer\tNot yet supported Cached Stream Service\tScene Layer\tNot yet supported  ","version":"Next","tagName":"h3"},{"title":"Supported ArcGIS Authentication​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#supported-arcgis-authentication","content":" Authentication Type\tSupport\tConfiguration DetailsBasic Authentication\tSupported OAuth Authentication (Recommended)\tSupported\tSee section Esri ArcGIS Configuration for details    ","version":"Next","tagName":"h3"},{"title":"Prerequisites​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#prerequisites","content":" ","version":"Next","tagName":"h2"},{"title":"Base Product Installation and Configuration​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#base-product-installation-and-configuration","content":" To leverage the Enterprise features of Maptaskr Enterprise, the solution needs to be installed and configured appropriately on your target environment. Either of the following solutions needs to be installed and configured on the related platform environment –  Maptaskr Enterprise for Dynamics 365, or Maptaskr Enterprise for Power Apps Premium.  See the Maptaskr Installation and Configuration Guide for details on how to achieve this base product installation and configuration. These guides can be found as links on the details tab of each of the AppSource product pages –  Maptaskr for Dynamics 365 AppSource Details Maptaskr for Power Apps AppSource Details  ","version":"Next","tagName":"h3"},{"title":"Esri ArcGIS Configuration​","type":1,"pageTitle":"General Information & Prerequisites","url":"/docs/dynamics-365/arcgis-configuration/general-information-prerequisites#esri-arcgis-configuration","content":" To connect your Maptaskr solution with the GIS data you are wishing to, this data must exist within a supported Esri ArcGIS instance and have –  the relevant supported layers configured and ready for integration. the appropriate supported authentication mechanisms applied, and for integration to any on-prem ArcGIS instances – open network connectivity between the ArcGIS instance in question to the platform housing your Maptaskr installation. ","version":"Next","tagName":"h3"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/dynamics-365/arcgis-configuration/overview","content":"","keywords":"","version":"Next"},{"title":"The Power of Enterprise GIS​","type":1,"pageTitle":"Overview","url":"/docs/dynamics-365/arcgis-configuration/overview#the-power-of-enterprise-gis","content":" Maptaskr provides the only solution of its nature to provide enterprise grade integration into the most established and widely used Enterprise GIS solution on the planet.  Integrate with ArcGIS Online or On-Premises. Seamlessly visualize layers of valuable geospatial data to augment mapping and business data. Provide Users with Enterprise GIS data in a centralized, easy to consume manner for any business need. Able to integrate with other most common OGC APIs.   ","version":"Next","tagName":"h2"},{"title":"Enterprise GIS Configuration","type":0,"sectionRef":"#","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration","content":"","keywords":"","version":"Next"},{"title":"Layer Proxy​","type":1,"pageTitle":"Enterprise GIS Configuration","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration#layer-proxy","content":" This proxy layer setting is to be utilised for accessing non Esri ArcGIS layer web services i.e., WMS/WFS/WMTS.A proxy is only required if the services attempted to be accessed require a proxy to route requests to the configured layers.  Add Proxy URL to enable layer communication over a proxy server.  Figure 4: Layer Settings.​    Field\tDescriptionProxy URL\tThe URL of the proxy to be used by Maptaskr to access the configured layers. Default Opacity Level\tDefault opacity configuration for the layers. Enable Sub-Layer Selection\tTurns on all the sub layers upon turning on the layer. Enable Layer Search\tEnables the ability to perform layer searching via Maptaskr.  ","version":"Next","tagName":"h2"},{"title":"Layer Security​","type":1,"pageTitle":"Enterprise GIS Configuration","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration#layer-security","content":" This layer security selection is to be utilised for accessing non Esri ArcGIS layer web services i.e. WMS/WFS/WMTS. An entry here is only requires if the services attmpted to be accessed requires authentication using key value pair credentials.  Figure 5: Layer Security.​    To add an authentication entry for WMS/WFS?WMTS layers click Add New, enter the required key value pair, and click Save.  Figure 6: Create New Layer Security Item.​    Figure 7: New Layer Security Item.​    This Layer Security will then be available to users when configuring WMS/WFS/WMTS layers when the Key/value pair Security Layer type is selected.  Figure 8: Security Layer Selection.​    ","version":"Next","tagName":"h2"},{"title":"Esri ArcGIS Configuration​","type":1,"pageTitle":"Enterprise GIS Configuration","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration#esri-arcgis-configuration","content":" The following section provide an overview of how to configure integration with the desired Esri ArcGIS instance. Please see section 2 General Information &amp; for details on supported ArcGIS versions, and prerequisites that are required to be in place before Maptaskr configuration can occur.  Reminder: This capability is only available with the Maptaskr Enterprise edition.  ","version":"Next","tagName":"h2"},{"title":"ArcGIS Auth Applications​","type":1,"pageTitle":"Enterprise GIS Configuration","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration#arcgis-auth-applications","content":" This section allows admins to setup multiple authentication configuration items that can be applied to the relevant ArcGIS layer services wanting to be accessed. Maptaskr supports Basic and OAuth authentication methods.  Figure 9: ArcGIS Auth Applications.​    To create a new authentication item, click Add New and enter in the relevant authentication details required for your integration. The following sections will go through the various configuration permutations available to match your integration needs.  Basic Auth​  Note: Maptaskr highly recommends the use of OAuth where possible, however where this is not possible, Basic Auth is available for use.  Basic Authentication is primarily used for on-premises versions of ArcGIS Server. A service end point is required to be configured to connect via this authentication manner.  Figure 10: Basic Auth Setup.​    Set the Type as Basic Auth and then enter in the appropriate details as per the table below.  Field\tDescriptionApplication Name\tUser specified name used to reference the authentication setting when configuring layer services within Maptaskr. Username\tThe username to use for accessing the layer service. Password\tThe corresponding password for the above username. End Point\tThe service endpoint configured on the Esri ArcGIS instance that Maptaskr needs to request authentication from.  OAuth​  OAuth can be used to authentication against both on-premises versions of ArcGIS, as well as ArcGIS Online (AGOL). This is the recommended authentication approach, as it provides a more secure integration mechanism.  Figure 11: OAuth Setup.​    Set the Type as OAuth and then enter in the appropriate details as per the table below.  FIELD\tDESCRIPTIONApplication Name\tUser specified name used to reference the authentication setting when configuring layer services within Maptaskr. Client ID/Secret\tSets the OAuth configuration to utilise a Client ID &amp; Secret combination that needs to be configured within the respective ArcGIS instance. Typical setup for ArcGIS Online integration. Username/Password\tSets the OAuth configuration to utilise a Username &amp; Password combination that needs to be configured within the respective ArcGIS instance. Typical setup for ArcGIS on-prem (Enterprise/Server) integration. Though this can also be used for ArcGIS Online. This is configured via the following options - Online – Connecting to an online service Enterprise – Connecting to an on-prem service (ArcGIS Enterprise/ Server) Using this authentication method will require you to set the Enterprise End Point. See section ArcGIS User Login for details. Client ID\tThe client ID to use for accessing the service. Only available if OAuth Type set to Client ID/Secret. Secret\tThe secret to use for accessing the service. Only available if OAuth Type set to Client ID/Secret. Username\tThe username to use for accessing the service. Only available if OAuth Type set to Username/Secret. Password\tThe password to use for accessing the service. Only available if OAuth Type set to Username/Secret.  ","version":"Next","tagName":"h3"},{"title":"ArcGIS User Login​","type":1,"pageTitle":"Enterprise GIS Configuration","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration#arcgis-user-login","content":" In order for Maptaskr to authenticate to an on-premise instance of ArcGIS Enterprise, an Enterprise End Point is required.  Figure 12: ArcGIS User Login.​    The Enterprise End Point referred to in this configuration setting is the URL where the token generation service can be accessed, as outlined in ArcGIS Server documentation &gt; Acquire ArcGIS Server tokens.  Using Landgate’s SLIP services as a publicly available example, if you go to https://services.slip.wa.gov.au/public/tokens/generateToken you will get to the token service as shown below.  Figure 13: Example ArcGIS Token Service.​    Note: Accessibility to the endpoint is required from your D365 host IP range for your Maptaskr to be able to acquire the necessary token for authentication.  The Application ID is not a required field but can be used as an additional layer of security, if filled in, the Application ID is passed with every call to the REST endpoint in addition to the Token.  The above configuration will then enable you to access layers within the Maptaskr for D365.  ","version":"Next","tagName":"h3"},{"title":"Additional Parameters​","type":1,"pageTitle":"Enterprise GIS Configuration","url":"/docs/dynamics-365/arcgis-configuration/enterprise-gis-configuration#additional-parameters","content":" ArcGIS layers can additionally be configured to include additional parameters in EVERY request to the Layer URL. For example, this can be useful if you have any security layers the request needs to pass through before going out to the Layer URL.  To configure Additional Parameters head into the D365 solution and edit or create an ArcGIS layer on the dashboard.  Figure 14: Configuring Additional Parameters.​    In the Additional Parameters field, enter a query string for key/value pairs. These will be appended to every request for the layer.  IMPORTANT! Make sure you use the correct query string structure, or your layer may not function correctly. ","version":"Next","tagName":"h3"},{"title":"Advanced Configuration and Capability","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability","content":"","keywords":"","version":"Next"},{"title":"Field Service Company Locations​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#field-service-company-locations","content":" In the Maptaskr Configuration section (see section Display Settings) you will find a checkbox labelled: Enable Company Location.  Figure 166: Enable Company Location Checkbox.​    Selecting this checkbox will cause the Maptaskr Map to look for a Lambpet record associated with the users Site.  ","version":"Next","tagName":"h2"},{"title":"Configuring a Site Location​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#configuring-a-site-location","content":" Open the field service app. Figure 167: Field Service Model-Driven App.​ Change area to Settings. Figure 168: Selection of Settings Configuration Area.​ Select Users. Figure 169: Selection of Users Page.​ Open the target user, and select Summary tab. Figure 170: Field Service User Record - Summary Page.​ Select the site or create a new one. Figure 171: Selection of Existing Site or Creation of a New Site.​ Create a new site, name it, and save the record. Figure 172: Creating a Site Record.​ Copy out the site id from the URL as we will need this shortly. Figure 173: Copying out the Site Record ID.​ Head back to your user and select the test site as the user’s Site. Figure 174: Selecting the Site on a User.​ Save and close the user record. Figure 175: Saving the User Record.​ Now open to the table Maptaskr Lambpets. This can be achieved by heading to make.powerapps.com and selecting the table from the Tables section. Figure 176: Navigation to make.powerapps.com.​ Figure 177: Accessing Dataverse Tables.​ Figure 178: Finding the Maptaskr Lambpet Table.​ Click Edit on the table data. Figure 179: Editing Table Data.​ Show the columns Latitude, Longitude, and Parent Entity Id. Figure 180: Selecting the Required Columns.​ Then add the Name Test Site Location, Latitude (in 4326), Longitude (in 4326) and the ID of the site copied from step 7. e.g. Figure 181: Adding the Site Location.​ Test this configuration by navigating to the Maptaskr Dashboard Map. Figure 182: Testing the Site Location.​ The map should navigate to the defined Site location. Figure 183: Resulting Default Location.​  ","version":"Next","tagName":"h3"},{"title":"Custom CSS & JavaScript​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#custom-css--javascript","content":" The Maptaskr controls provided in the D365 an PA solutions will be added to the dashboard, or record level forms as Web Resources. As such, customising the map control can be difficult. To allow solution implementation partners and technical product owners to customise the Maptaskr Control, Maptaskr has provided a mechanism to extend both the styling and the functionality provided by the map control.  Some use cases for the use of the Custom.JS and Custom.CSS files are:  Hiding buttons, tabs, or UI elements you do not wish your staff to use. E.g. You wish for all staff to only have access to upload shape files, and do not wish to have them draw either annotations or shapes. Restyling the colours and layout of the control to better match your company brand. E.g. You wish to restyle all colours of the solution to match your company primary colour. Extending the functionality of the control to integrate with external systems, or to apply business logic to the actions performed by users of the map control. E.g. Instead of saving shapes to the Dataverse, you wish to upload all shapes drawn to an external GIS system. Adding validation logic to the submission of the annotations and shapes on a form to ensure that the data is valid prior to saving to the Dataverse. E.g. Prior to allowing the users to upload a shape, you wish to compare the shape boundaries, and ensure that all drawn or uploaded shapes reside inside the boundaries of the selected record.  To extend the Custom.JS and Custom.CSS files, you will need to create a solution layer that sits on top of the Maptaskr Solution.  ","version":"Next","tagName":"h2"},{"title":"Creating Your Own Custom.JS and Custom.CSS​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#creating-your-own-customjs-and-customcss","content":" Custom.JS Source Code​  /* place your custom JS Code here. */ const onValidateFailErrorMessage = 'Please upload a file or draw a shape'; //error message to display when the map validation errors const onUploadFailErrorMessage = 'Something has gone wrong during submission, please check your connection and try again.'; const onIntersectionMessage = 'Intersections / Exclusions have been found, please check your shapes and try again.'; async function clientValidationFunction(executionContext, controlId) { //user defined validation function, can use the following for getting the list of shapes, annotations and uploaded files. //if the user needs to fix the shapes, throw an error. console.log(&quot;Validating shapes with:&quot;); console.log(executionContext); console.log(controlId); let maptaskrControl = globalThis &amp;&amp; globalThis.top &amp;&amp; globalThis.top.maptaskrCORE &amp;&amp; globalThis.top.maptaskrCORE[controlId]; if (!maptaskrControl) { console.error(&quot;Maptaskr Control not found&quot;); return; } //let shapes = _getShapes(); //let annotation = _getAnnotation(); //let uploads = _getUploadedFiles(); //testing shape intersections and determine what to do with them const shapeIntersections = await maptaskrControl.getShapeIntersections(); if (shapeIntersections &amp;&amp; shapeIntersections.length &gt; 0){ if (shapeIntersections.some(res =&gt; res.intersectionType == 'Warning')) { //decide what to do with warnings //if you want them resolved, throw an error here.. //throw new Error(onIntersectionMessage); } if (shapeIntersections.some(res =&gt; res.intersectionType == 'Error')) { //decide what to do with warnings //if you want them resolved, throw an error here.. throw new Error(onIntersectionMessage); } if (shapeIntersections.some(res =&gt; res.intersectionType == 'Exclusion')) { //decide what to do with warnings //if you want them resolved, throw an error here.. throw new Error(onIntersectionMessage); } } //you can also test to make sure your shapes are in the correct position, orintation, contained within eachother, any geometric tests here. //shapes will come in the format: // { // &quot;type&quot;: &quot;FeatureCollection&quot;, // &quot;features&quot;: [ // { // &quot;type&quot;: &quot;Feature&quot;, // &quot;geometry&quot;: { // &quot;type&quot;: &quot;Polygon&quot;, // &quot;coordinates&quot;: [ // [ // [ // 12899598.276481498, // -3758060.96802893 // ], // ... // ] // ] // }, // &quot;properties&quot;: { // &quot;uploadDocType&quot;: &quot;Envelope&quot;, // &quot;markerType&quot;: &quot;MARKER_SHAPE&quot; // } // } // ], // &quot;DocumentType&quot;: &quot;Envelope&quot;, // &quot;annotationId&quot;: &quot;1ffb72d6-c7c3-ed11-83fd-002248e1bcf1&quot;, // &quot;longlat&quot;: [ // 12899440.776481498, // -3758143.46802893 // ], // &quot;styleProperty&quot;: { // &quot;geometry_&quot;: null, // &quot;fill_&quot;: { // &quot;color_&quot;: &quot;rgba(149,255,0,0.1)&quot; // }, // ... // } // } //if you require a specific subset of objects, please look into the shapes, annotations, or uploads to ensure specific number of shapes or named shapes are included. } if (globalThis &amp;&amp; globalThis.top) globalThis.top.maptaskrReady = function(pageContext, controlId) { console.log(&quot;Maptaskr Map ID: &quot; + controlId + &quot; has Loaded&quot;); let maptaskrControl = globalThis &amp;&amp; globalThis.top &amp;&amp; globalThis.top.maptaskrCORE &amp;&amp; globalThis.top.maptaskrCORE[controlId]; if (maptaskrControl) { /* Use the following console logs to uniquely identify your map */ // console.log(pageContext); // console.log(maptaskrControl.registeredLocation); // console.log(maptaskrControl.webresourceLocation); /* register the correct client validation function here */ maptaskrControl.clientValidationFunction = clientValidationFunction; /* put your setup methods here */ /* e.g. maptaskrControl.disableSaving = true; - this will disable the inbuilt save methods, you an use maptaskrControl.saveShapes() to save your own shapes.*/ /* put your event registrations here. */ /* e.g. maptaskrControl.on(&quot;FeaturesSelected&quot;, ...) */ } };   Custom.CSS Source Code​  /* place your custom CSS Code here. */ /* Here you can override the Maptaskr classes e.g. .maptaskr .btn-primary { background-color: #ff00ff !important; border-color: #440044 !important; } */   Navigate to make.powerapps.com. Figure 184: Navigating to make.powerapps.com.​ Create a new Solution. Figure 185: Creating a New Unmanaged Solution.​ Select a publisher or create a new one. Figure 186: Specifying the Publisher.​ Under the new solution, add an existing resource, and under More select a Web Resource. Figure 187: Adding the Web Resources.​ Add the Custom.js and Custom.Css files to your solution, ready to download and replace. Figure 188: Adding the Custom Resources.​ Open the Custom.js record, and then expand the Advanced Options to download the current custom.js file for editing. Figure 189: Downloading the Existing Files from the URL.​ Open the Custom.js and Custom.css in your favourite code editor. Figure 190: Code Editing Custom.JS.​ The comments here should help you get started with editing these functions. For example, scrolling down to the bottom of the custom.js file, you can add a console log to the loading of the map. Figure 191: Editing the Maptaskr Ready Function.​ Uncommenting the 3 lines highlighted below should display some information about the current context. Figure 192: Altering Custom.JS.​ globalThis.top.maptaskrReady = function(pageContext, controlId) { console.log(&quot;Maptaskr Map ID: &quot; + controlId + &quot; has Loaded&quot;); let maptaskrControl = globalThis &amp;&amp; globalThis.top &amp;&amp; globalThis.top.maptaskrCORE &amp;&amp; globalThis.top.maptaskrCORE[controlId]; if (maptaskrControl) { /* Use the following console logs to uniquely identify your map */ console.log(pageContext); console.log(maptaskrControl.registeredLocation); console.log(maptaskrControl.webresourceLocation); /* register the correct client validation function here */ maptaskrControl.clientValidationFunction = clientValidationFunction; /* put your setup methods here */ /* e.g. maptaskrControl.disableSaving = true; - this will disable the inbuilt save methods, you an use maptaskrControl.saveShapes() to save your own shapes.*/ /* put your event registrations here. */ /* e.g. maptaskrControl.on(&quot;FeaturesSelected&quot;, ...) */ } }; Once you have saved your changes, upload the Custom.js file to the resource. Figure 193: Uploading Your New Custom.JS.​ Then save and publish your changes. This should override the existing custom.js with your custom one. Figure 194: Checking the Solution Layers.​ To test the result of this, Load up a Maptaskr Map in a record form. Figure 195: Loading the Maptaskr App.​ Navigate to the Accounts section. Figure 196: Navigating to a Form.​ Create a new Account. Figure 197: Creating a New Record.​ Open the Developer Tools by pressing F12 (Chrome, Firefox and Edge). Select the Console Tab (and clear any existing messages). Figure 198: Viewing the Console Log.​ Then open the Maptaskr tab on the Account form. Figure 199: Loading the Map.​ Note the addition of the Page Context, and the web URLs of the current page and the iframe loading the shapeeditor.html Figure 200: Successful Modification.​  For more information on what functionality is available to you to alter please refer to the document Maptaskr for D365 - Registerable Events and Functions  ","version":"Next","tagName":"h3"},{"title":"Pre-Selected, Exclusion, and Intersection Layer Configuration​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#pre-selected-exclusion-and-intersection-layer-configuration","content":" When configuring the Maptaskr control, there are parameters that require the population of a Layer Name / Sub-layer Name. These values can be easily copied from the Map UI, when selecting layer attributes.  To view the value, navigate to a dashboard level map, and select the layer you wish to add to the configuration. Select the layer options and then choose either the All Attributes or Attributes in View option as per the figure below  Figure 201: View Layer Attributes.​    Once the attribute table loads, you will find the layer unique identifier string under the layer title.  Figure 202: Layer Attribute Table.​    Copy the unique identifier string (not including the ID: text) and paste it into your configuration.  ","version":"Next","tagName":"h2"},{"title":"Intersection Detection​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#intersection-detection","content":" This powerful feature introduces a new level of precision and efficiency in handling geographic data, providing users with the ability to detect intersections within their mapped shapes and layers.  Exclusionary Selected Layers: Administrators can define an ArcGIS Feature Server layer to be loaded and enabled as default. The features provided by the layer are loaded onto the map and will prevent the user from uploading a shape that intersects with the layer’s features. Intersection Selected Layers: Users can define specific layers to act as intersect zones when working with submitted shapes on the map. This capability is highly versatile, allowing users to set up preselected layers for intersection detection. The layers chosen for intersection detection must be ArcGIS Feature Server layers. After a shape has been drawn or uploaded, users can trigger the intersect detection process with a simple validation button. This feature MUST be used in conjunction with the Intersection Warning and Error Buffers. Intersection Warning / Error Buffers: For each layer defined as an Intersection, a Warning and Error Buffer must be defined. These are defined in Metres and will be used to present the user with Warning and Error messages. Custom.js: As part of the Warning and Intersection logic, Maptaskr has preconfigured the Custom.js to allow users to submit shapes within the warning buffers, but to deny submission when a shape comes within the error buffer. This can be changed by modifying the Custom.js as per section Custom CSS &amp; JavaScript  ","version":"Next","tagName":"h2"},{"title":"Registerable Events and Functions​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/dynamics-365/installation-guide/advanced-configuration-and-capability#registerable-events-and-functions","content":" These features empower developers to integrate event registration and call on functions directly from the applications being built.  Registerable Events: Developers can integrate event registration directly into their dashboard and record level maps, allowing for the programmatic detection of select user driven actions or outcomes as they happen. Data Accessor Functions: Developers can call select functions that provide direct access to specific map data, enabling developers to create custom interactions, analyse data, and trigger actions-based business rules and requirements.  These features not only allow for the enhancing of user experience, but also opens exciting opportunities for developers to create dynamic and user-centric mapping applications. It's a powerful tool for organisations looking to foster user engagement, facilitate event coordination, and programmatically detect and respond to events as they unfold on the map.  For a comprehensive list of registrable events and extensible functions, please refer to Maptaskr for D365 - Registerable Events and Functions. ","version":"Next","tagName":"h2"},{"title":"Configuration","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/configuration","content":"","keywords":"","version":"Next"},{"title":"Registration​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#registration","content":" If your environment is a new installation of Maptaskr, the solution must be activated. To do so, you will need to go through a simple registration process.  After opening the Maptaskr App, Navigate to the 'Configuration` tab under Settings from the left navigation bar. Figure 25: Configuration.​ Fill in the Registration details, read and accept the Terms of Service and click the Register Trial button. You will receive an email which contains the license key for your installation of Maptaskr along with other useful information. Figure 26: Registration form.​ Figure 27: Registration email confirmation with license key (sample).​ Copy the license key and paste it into the License Key field that appears after registration. Click Activate to activate your Maptaskr solution. Figure 28: Maptaskr license key activation.​ Once the license key is accepted and activated, the registration process has been completed, and the license details will be displayed. Note: Initial activation will always activate a short-term trial of Maptaskr. Paid licenses will be applied as appropriate by the Maptaskr team. Figure 29: Activated Maptaskr Solution example.​  ","version":"Next","tagName":"h2"},{"title":"User Security Roles and Licenses​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#user-security-roles-and-licenses","content":" For users to view and interact with Maptaskr maps, they must firstly be assigned an appropriate license.  Licenses can be assigned at a User or Team level as best suits your needs.  Figure 30: User License management.​    Before assigning a license to a user, you must ensure that the user has access to the environment and can access the tables and applications.  Both assigning Security Roles and User Licenses is covered in the following sections.  ","version":"Next","tagName":"h2"},{"title":"Adding Maptaskr Security Roles to Users​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#adding-maptaskr-security-roles-to-users","content":" Adding the Maptaskr Security roles are a pre-requisite for both administration or general users to access and utilise Maptaskr functions. This is achieved using the native platform security roles assignment.  From your Power Platform Admin Portal https://admin.powerplatform.microsoft.com/, navigate to the 'Environments` tab from the left navigation bar. To the right of the page is an Access panel which contains all the access controls areas which can be used for administrating user roles and security. Figure 31: Launch environment landing page.​ Click on See all under the Users heading within the Access panel. You will be navigated to the Manage User screen where you can search for the user(s) you wish to assign Maptaskr security roles to.  Once you have found the user click on the Click the menu option next to the users name and select Manage security roles`.  Figure 32: Manage security roles.​    Within the panel that appear to the right, your will see a list of all the available security roles that can be assigned to users. Scrolling through the list you will come across the following Maptaskr roles.  Figure 33: Maptaskr Security Roles.​    The following table provides a detailed overview of each role and how they should be applied to your user base.  Security Role\tDescriptionBasic User\tOut of the box basic user role to provide general access. Required for all general users. Maptaskr Admin\tAdmin role for users who are tasked with administering Maptaskr for the platform. (Licensed allocation required) Note: Users that need the ability to create global Maptaskr settings, require the Maptaskr Admin role assigned. Maptaskr User\tUser role for licensed Maptaskr users. (Licensed allocation required) Maptaskr User - Read Only (non Maptaskr)\tUser role for unlicensed Maptaskr users, recommended permission for supporting the Maptaskr for Power Pages anonymous users.  ","version":"Next","tagName":"h3"},{"title":"Assigning Licenses to Users​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#assigning-licenses-to-users","content":" Once users are assigned the appropriate security roles (See 2.2.1 Adding Maptaskr Security Roles to Users) a Maptaskr license can be applied to users who require access Maptaskr maps.  To assign a license head to Users section of the Configuration area within the Maptaskr App. Licenses can be added to an individually named user or to a Team which has been preconfigured within the core platform.  Note: Assignment of licenses to either individual users or teams of users will consume the number of licenses allocated to an environment. If a team has more users than available licenses, only the top alphabetically ordered users in that team will receive licenses, until they are exhausted.  Figure 34: Configuration of Users.​    Assigning Individual User Licenses​  Click on Assign license button to input user/team and search for the name of user/team. Figure 35: Selecting license type as User.​ When adding a user, you need to select type User, select permission (optional) and lastly search the name of the user. Once you have found the User, select the users name, and click Assign` to complete the process of assigning a license to a User. Figure 36: Assigning a user license.​  Assigning Team Licenses​  When adding a team, you need to select type Team and search the name of the team.  Figure 37: Adding a new team.​    Once you have found the Team, select the teams name, and click Assign` to complete the process of assigning a license to a Team.  Figure 38: Added Users and Teams.​    ","version":"Next","tagName":"h3"},{"title":"Managing Mapping Service Providers​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#managing-mapping-service-providers","content":" Maptaskr can be configured to use different map service providers to provide various mapping capabilities depending on your organisation`s requirements.  Figure 39: Managing Mapping Services.​    Once a provider has been added and configured with the appropriate API Keys or ClientID and Secrets the provider can be used for the following services.  Base Map – Selection of the provider that will be used for the basemap of all Maptaskr maps. This provider is also used for Routing, as well as Points of Interest (POIs). Satellite Map – Selection of the provider that will be used for the satellite base map. Geocoding – Selection of the provider that will be used for geocoding and reverse geocoding addresses (If BING or ARCGIS providers are used for the basemap, it is recommended that the same provider be used for Geocoding as the Routing services provided by these services may not work as expected with an alternative Geocoder). Search – Selection of the provider that will be used for address searching throughout Maptaskr (Similar to Geocoding, it is recommended to use the same provider as the basemap if possible). Additionally a Custom Search provider can be used here. For more information on how to configure Custom Search see Custom Search Providers.  The below table provides an overview of the supported Services and which service Maptaskr currently can be configured to utilise.  Note: To configure Maptaskr to utilise any of the Mapping Service providers listed below, appropriate service plans and are required to be acquired which may incur a cost depending on the service. The details of these service plans are then be used when configuring the providers in Maptaskr.  Service\tBase Map (inc. Routing &amp; POIs)\tSatellite Map\tGeocoding\tSearchAzureMaps\t* Bing Esri HereMaps OpenStreet\t*   *Excludes Routing &amp; POI's  ","version":"Next","tagName":"h2"},{"title":"Adding a Service Provider​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#adding-a-service-provider","content":" To configure a new Service Provider:  Navigate to Manage Providers tab from the configuration tab to add or view Map providers the user wishes to view on Maptaskr and click Add Provider. Figure 40: Add Provider.​ A Create New modal will appear in which you can select the Provider type you wish to add. Create new provider of choice from the selection.  Note: Each Service Provider configuration will need to be accompanied by a set of credentials/details which differ from service to service. These are acquired when a service plan is purchased/created from the appropriate provider.  The following examples will show the creating of a Bing and ArcGIS Service provider configurations only.  Adding a Bing Service Provider​  From the Create New modal select Bing as the Provider. Then select the basemap style type you wish to apply and enter in the Bing Maps key associated with the service plan you wish to use. Figure 41: Create New Bing Provider.​ Click Save and once completed the new service provider will be listed as an available provider to use for configuring the mapping services. You can also edit and delete the configuration from this screen by selecting the options available. Figure 42: Bing Provider Created.​  Adding an ArcGIS Service Provider​  From the Create New modal select ArcGIS as the Provider. Then enter in the 'Client IDandArcGIS Client Secret` associated with the service plan you wish to use. Figure 43: Create New ArcGIS Provider.​ Click Save and once completed the new service provider will be listed as an available provider to use for configuring the mapping services. You can also edit and delete the configuration from this screen by selecting the options available. Figure 44: ArcGIS Provider added.​  ","version":"Next","tagName":"h3"},{"title":"Configuring Services​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#configuring-services","content":" Once a Service Provider has been added, the mapping services utilised by Maptaskr can be configured. To set any of the Service:  Select the drop down for the respective Service you wish to configure and select the service you wish to set it to use. Make sure you click Update to save your configuration choice.  Figure 45: Mapping Services set to Bing.​    ","version":"Next","tagName":"h3"},{"title":"Custom Search Providers​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#custom-search-providers","content":" In addition to the standard Service providers used for address search, an additional search control can be added to the Maptaskr Dashboard to allow for location searching on an ArcGIS feature service layer.  On the dashboard map, edit a feature layer you wish to allow searching on. Once the Add as Custom Search Endpoint is selected, save and navigate to the configuration tab. Select the Manage Providers tab. Down in the Services section, select the Custom Search provider. Here you can now select the fallback provider to match your original search provider. And you can now add your newly configured layer as a search endpoint. Once you have selected the layer and sub layer, you need to select the input and output fields. Input Fields: are used to search, and will be used to find the keywords provided by the user. Output Fields: used to display the selected item prior to navigation. Should be a Unique ID, and a Name Field so the user can identify the search result. Once selected, click the Add button, and the Update button to save. The layer can then be searched using the newly visible Custom Attribute search box. Results will be listed, and when clicked, navigated to.  ","version":"Next","tagName":"h2"},{"title":"Map Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#map-settings","content":" The Map Settings section of the Maptaskr App Configuration area is where admins can configure various global map setting related to map behaviour and available end user features.  Figure 46: Map Settings.​    Within this section admins can configure the following areas of Maptaskr.  Display settings,Feature settings,Style settings,Infobox settings,Power BI settings,Aerial integration.  ","version":"Next","tagName":"h2"},{"title":"Display Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#display-settings","content":" Figure 47: Display Settings.​  The Display Settings configuration area enables admins to configure which core Maptaskr map displayed to all user globally across the platform. This includes the ability to defaults for when the maps first loads, as well as constraints on what a user can see and interact with visually on the map. The table below provides an overview of each of the options available in this configuration section.  Setting\tType\tDescriptionDefault view\tDropdown\tSelect a default view of Map or Satellite when the map is loaded. Unit of distance\tDropdown\tSelect distance type to view when the map is loaded. Unit of area\tDropdown\tSelect distance type to view when the map is loaded. Confined Boundary - Minimum Longitude &amp; Latitude\tTextbox\tSpecifies minimum and maximum coordinate for the confined default location for Maptaskr to centre on at load as per the example image. e.g Default location - Latitude &amp; Longitude\tTextbox\tSpecifies the default location for Maptaskr to centre on at load. Latitude – coordinates on map Longitude - coordinates on map e.g. Default zoom\tDropdown\tDefault zoom level. Min zoom\tDropdown\tMinimum zoom level available to end users when zooming out of the map. If set to —select— will be set to the minimum value available. Max zoom\tDropdown\tMaximum zoom level available to end users when zooming out of the map. If set to —select— will be set to the maximum value available. Enable company location\tCheckbox\tSelect to enable the default location to load from your site or company on the map (for more information see Field Service Company Locations) Enable spider visualization\tCheckbox\tSelect to enable multiple pins for each record in spider shape on the map (this setting is tied to the Cluster level setting) Note: Spider Visualisations will only appear should a user reach a maximum zoom level, but still have clustered points on the map. Display pin`s label\tCheckbox\tSelect to enable Pin label is when displayed on the map. Display pin`s label on hover\tCheckbox\tSelect to enable Pin label when mouse is hovered over the pin (record). Load custom icon\tCheckbox\tSelect to enable custom icons for pins (Default option is the colour picker) – Refer to the section 5 Icons in this document. e.g. Enable map view settings\tCheckbox\tEnables the Map View feature at the record level map. Enable map export\tDropdown\tEnables the ability for user to download the current viewable map view. Enable extent\tCheckbox\tEnables the extent controls from the map. Select map export type\tDropdown\tDetermines the file type of the download of the map download feature. Can either be PDF or Image (PNG) Display legend as\tDropdown\tSelect the display legend as dropdown to toggle between right slider view or in panel view. e.g. Default search zoom\tDropdown\tSets the default zoom level when a search is performed.  ","version":"Next","tagName":"h3"},{"title":"Feature Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#feature-settings","content":" Figure 48: Feature Settings.​    The Feature Settings configuration area enables admins to configure which core Maptaskr features are available to end users at the top dashboard map level as seen in main left side panel as per the figure below.  Figure 49: Main left hand panel features.​    The following table gives an overview of the configuration items found in the Feature Settings area.  Setting\tType\tDescriptionEnable route tab\tCheckbox\tActivates/deactivates the routes tab on the main panel navigation. Enable calendar tab\tCheckbox\tActivates/deactivates the calendar tab on the main panel navigation. Enable annotation tab\tCheckbox\tActivates/deactivates the annotation tab on the main panel navigation. Enable layers tab\tCheckbox\tActivates/deactivates the layers tab on the main panel navigation. Enable bookmark tab\tCheckbox\tActivates/deactivates the bookmark tab on the main panel navigation. Enable related entity field\tCheckbox\tSelect to enable related entity fields in the data source query builder. This allows you to filter on related data source fields (so long as the related items are also configured in Maptaskr see section Data Source Configuration for more details) Enable territory creation\tCheckbox\tEnables the Create Territory option within the right click context menu from the map. Users are to convert drawn shapes into territories. Keep routing log\tCheckbox\tThis option allows user to store routing activity if enabled. Enable search layers\tCheckbox\tSelect enable search layers to view its functionality on the dashboard.   ","version":"Next","tagName":"h3"},{"title":"Search Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#search-settings","content":" Figure 50: Search settings.​    The Search Settings configuration area enables admins to configure the core Maptaskr search features are available to end users at the top dashboard map level as seen in main left side panel as per the figure below.  Figure 51: Search panel.​    The following table gives an overview of the configuration items found in the Search Settings area.  Setting\tType\tDescriptionDefault location within\tCheckbox\tUsed to set a default distance value when searching by Address. Cluster level\tTextbox\tSet the size (in number of pixel) on the screen that search results will be clustered. Any point that is cluster level pixels from another point will be merged into a single grouped cluster. The clustered points will be the diameter of the cluster level and clicking on this cluster will zoom into the map displaying the points contained within the cluster. Colors are predefined as per the following ranges – Green: 1-9 records Yellow 10-99 records Red 100+ records Default tab selection\tDropbox\tSet the default tab to be selected when the map loads. Load default query\tCheckbox\tSelect to enable default query choice for saved global queries. If there is a Search Query that is set as a Default Query, this search will execute on map load. Enable quick search\tCheckbox\tEnable quick search functionality. Enable region\tCheckbox\tEnable to display search by region choice in the search panel on the map. Enable territory\tCheckbox\tEnable to display search by Territory option. Note: This option is only available in the Maptaskr for D365 version. Enable draw\tCheckbox\tEnable to display search by Drawing option in the search panel on the map. Enable POI Select to display POI list on the search panel and POI result on the map. Note: POIs are configured in the POIS configuration areas of Configuration. Enable annotation API request Enable to show associated record annotations on the dashboard level map when records are displayed.   ","version":"Next","tagName":"h3"},{"title":"Style Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#style-settings","content":" The style of some of elements users utilise within Maptaskr can be configure to whatever is found usable for the specific installation. This is a global setting that will apply to all element of the particular nature. By default, the settings produce the outcome as seen in the figure below.  Figure 52: Default Style Settings.​    To set other Style Settings simply enter in the HEX colour code value you wish to use for the various options as described in the table below.  Setting\tDescriptionAnnotation stroke colour &amp; Annotation fill colour\tSets the respective stroke and fill to be used for annotations – in HEX colour format. Tip**:** For fill, it is advised to add opacity, which can be added by adding an alpha value to the code. E.g., #7ffaa633 will have an opacity of 25%. Region stroke colour &amp; Region fills colour\tSets the respective stroke and fill to be used for search regions – in HEX colour format. Tip: For fill, it is advised to add opacity, which can be added by adding an alpha value to the code. E.g., #7ffaa633 will have an opacity of 25%. Text stroke colour &amp; Text fill colour\tSets the respective stroke and fill to be used for textual annotation – in HEX colour format. Text Size\tSets the size of the annotation text.   An example of Style Settings and their outcome can be seen in the figure below.  Figure 53: Style Settings example.​    As an example, the above settings give the below outcome when seen on the map.  Figure 54: Style Settings examples outcome.​    ","version":"Next","tagName":"h3"},{"title":"Infobox Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#infobox-settings","content":" The Infobox settings area provide configuration for to enable the display style for Appointments when displayed. The style includes the ability to include more properties in addition to the title.  Figure 55: Infobox Settings.​    When enabled, additional appointment properties are displayed from the Appointment data source. From the Appointment Tab Property Tab, admins can configure the appointment properties displayed in this view.:  Figure 56: Data Source configuration - Appointment Tab Property.​    Figure 57: Appointment style and property configuration applied to Infobox.​    ","version":"Next","tagName":"h3"},{"title":"Power BI Settings​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#power-bi-settings","content":" The Power BI settings are a deprecated feature, that has remained to ensure backwards compatibility. This feature is being phased out and is not recommended to be used.  Figure 58: Power BI Settings.​    Alternatively, Maptaskr recommends the use of the InfoBox Actions to open the PowerBI Report in a new tab. These actions can be configured via the Datasource Configuration. For more information see Infobox Actions.  ","version":"Next","tagName":"h3"},{"title":"Aerial Integration​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#aerial-integration","content":" If you have a supported aerial imagery provider subscription, this can be configured to be available to end users to access as appropriate. To enable Aerial imagery, simply enable enter an API Key into the corresponding text box.  Figure 59: Aerial Integration example - Nearmaps.​    Once configured, the aerial provider will be made available under the Layers panel for activation and end user usage. Users will be able to select the point in time imagery as available by the service provider and location shown on the map.  Figure 60: Nearmaps enabled with historical data available.​    ","version":"Next","tagName":"h3"},{"title":"Data Tab Action​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#data-tab-action","content":" The Data Tab is the panel that appears at the bottom of the map whenever there are records displayed. This panel provides a list view of the individual records so that users can search, filter and interactive with individual or groups of records.  Figure 61: Data Tab with results.​    When items are selected the Choose Action dropdown will become active and user can then select an action to perform on the selected records.  Figure 62: Data Tab actions.​    The actions that are available in this dropdown are configured in the Data Tab Action configuration section within the Configuration area.  Figure 63: Data Tab actions configuration.​  The flowing table provides an overview of each of the actions available.  Action\tDESCRIPTIONAdd to Marketing List\tAdds the selected records to a marketing list for marketing, sales, communications activities. Marketing lists can be created as either static or dynamic depending on the user preference. Add to Route\tAllow the ability for selected items to be added to a new Enabling this feature will allow adding selected records in the data tab to a new route for navigation and route creation purposes. Change Owner\tProvides the ability for users to bulk update owners of records selected. Useful when reassigning accounts or work-related records between users. Create Activities\tProvides the ability to create an activity related to the selected record(s). Activities can be an appointment of service activity. Execute Workflow\tEnabling this feature will retrieve a list of all Process Workflows available in the environment. When interacting with the data tab, a user can select one or more records and choose this action to display a list of available Workflows for the given entity and execute them. Note: This will only display Workflows that have been enabled and configured against the given data source entity. Export to Excel\tEnabling this feature will allow a user to select records in the data tab and output the configured data tab fields to a CSV file. For Data tab field configuration please refer to Data Tab Fields. Note: You can only select one Export to Excel action at a time. Export to Excel with Geometry\tEnabling this feature will allow a user to select records in the data tab and output the configured data tab fields as well as the geometry (Latitude and Longitude) to an CSV file. For Data tab field configuration please refer to Data Tab Fields. Note: You can only select one Export to Excel action at a time. Send Email\tEnabling this feature will allow a user to select records in the data tab and open a new Email modal dialog record with the recipients pre-populated. Work Order\tFor use with Field Services. If the records listed in the data tab are Field Service assets, a new work order modal dialog record with the assets pre-populated. Note: Action can only be chosen for individual Field Service Asset items in the Data tab list.  ","version":"Next","tagName":"h2"},{"title":"GIS​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#gis","content":" Maptaskr provides the ability to configure advanced GIS integration via the GIS section of the Configuration area.  Note: The first 2 sections of the GIS screen are available even with the standard edition licensing of Maptaskr. The remaining configuration is only available with the Enterprise version of Maptaskr for D365.  Figure 64: GIS Configuration Screen.​    ","version":"Next","tagName":"h2"},{"title":"Layer Settings (Proxy)​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#layer-settings-proxy","content":" This proxy layer setting is to be utilised for accessing non Esri ArcGIS layer web services i.e., WMS/WFS/WMTS. A proxy is only required if the services attempted to be accessed require a proxy to route requests to the configured layers.  Add Proxy URL to enable layer communication over a proxy server.  Figure 65: Layer Settings.​    Field\tDescriptionProxy URL\tThe URL of the proxy to be used by Maptaskr to access the configured layers. Default Opacity Level\tDefault opacity configuration for the layers Enable Sub-Layer Selection\tTurns on all the sub layers upon turning on the layer  ","version":"Next","tagName":"h2"},{"title":"Layer Security​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#layer-security","content":" This layer security section is to be utilised for accessing non Esri ArcGIS layer web services i.e., WMS/WFS/WMTS. An entry here is only required if the services attempted to be accessed requires authentication using key value pair credentials.  Figure 66: Layer Security.​    To add an authentication entry for WMS/WFS/WMTS layers click Add New, enter the required key value pair, and click Save.  Figure 67: Create new authentication item.​    Figure 68: New Layer Security item.​    This Layer Security will then be available to users when configuring WMS/WFS/WMTS layers when the Key/value pair Security Layer type is selected.  Figure 69: Layer Security example.​    ","version":"Next","tagName":"h2"},{"title":"ESRI ArcGIS Configuration​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#esri-arcgis-configuration","content":" Note: ArcGIS Service integrations are only available with the Enterprise version of Maptaskr for D365.  For details on supported ArcGIS versions, and prerequisites that are required to be in place before Maptaskr configuration can occur please refer to the Maptaskr ArcGIS Configuration Guide or contact Maptaskr Support (support@maptaskr.com).  ","version":"Next","tagName":"h2"},{"title":"POI (Points of Interest)​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#poi-points-of-interest","content":" Figure 70: Points of Interest.​    Maptaskr can be configure the use of Points of Interest (POIs) on map. POIs are currently available to be activated with the following Base Map Service providers (see section Managing Mapping Service providers for more details) –  BingEsriHereMaps  If one of the above providers is configured, then the Enable POI option will be made available as described in section Search settings.  Once the Enable POI is active the POIs section of the Configuration area.  Figure 71: POI's configuration section.​    ","version":"Next","tagName":"h2"},{"title":"Custom POI's​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#custom-pois","content":" Figure 72: Custom POI's.​    Admins can click on Add New in Custom POI section and a Create New form will appear. Fill in the details (Name, Entity, View and Icon) to load the POI in the list and in the search panel.  Figure 73: Create New Custom POI's.​    Once saved, the Custom POI will appear on the search panel and click update for the providers POI to appear on the search panel.  Figure 74: Custom POI list.​    ","version":"Next","tagName":"h3"},{"title":"Provider POI's​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/installation-guide/configuration#provider-pois","content":" Provider POIs are available for various categories. Admins can select with category is applicable for their users and toggle on or off any providers POIs from the given list to allow users to utilise them for the map.  Figure 75: Providers POI Categories.​    Once categories are enabled by an admin, they will appear available for end user to access via the Search panel as per Figure 74: Custom POI list.  Figure 76: Providers POI list.​   ","version":"Next","tagName":"h3"},{"title":"Custom Entities Configuration","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/custom-entities-configuration","content":"","keywords":"","version":"Next"},{"title":"Mapping Custom Entities to Maptaskr​","type":1,"pageTitle":"Custom Entities Configuration","url":"/docs/dynamics-365/installation-guide/custom-entities-configuration#mapping-custom-entities-to-maptaskr","content":" Navigate to the data sources tab under Settings from the left navigation bar. Figure 122: Maptaskr Settings Menu.​ To add a new entity, click on +New in the ribbon to add a custom entity. Figure 123: Ribbon Panel.​ A new Maptaskr data source form will appear. Figure 123: Data Source Form.​ Fill-in the required field mappings. Figure 125: Data Source Form Filled With Custom Entity Details.​ Click on Save &amp; Close and the custom entity will be mapped to the data source.   ","version":"Next","tagName":"h2"},{"title":"Adding Maptaskr to a Custom Entity Form​","type":1,"pageTitle":"Custom Entities Configuration","url":"/docs/dynamics-365/installation-guide/custom-entities-configuration#adding-maptaskr-to-a-custom-entity-form","content":" Navigate to the advanced setting page. Figure 126: Advanced Settings Page.​ Click on the drop down and navigate to solutions page. Figure 127: Solutions in Advanced Settings.​ Create a new custom solution and add the custom entity to it. Figure 128: Add the New Custom Entity.​ Navigate to main form, from the entity in the left navigation panel and click on the form that has form type set to Main. Figure 129: Active Forms List.​ Figure 130: Main Form.​ Navigate to Insert tab in the ribbon, click on the One Column tab to insert it on the form. Figure 131: Insert Column.​ Figure 132: Tab Added in Form.​ Double Click on the tab to rename it. Figure 133: Tab Properties.​ Select the section tab under the Maptaskr tab. Figure 134: Section.​ Click on the Web Resource component on the Ribbon. Figure 135: Web Resource.​ Update the web resource properties. In the general tab, on the Web resource section, set the Web resource field to: maptaskr_/app/shapeeditor.html. In the Field Name and Properties section, set the Name to: maptaskr_shapeeditor and the Label to maptaskr_shapeeditor. In the Visibility section click the checkbox Enable for Mobile: Yes. Figure 136: Web Resource Properties.​ Update the number of Rows in the Formatting tab (will be shown on the map, for best user experience use between 12-20) Figure 137: Formatting - Web Resource Properties.​ Click OK to save the web resource properties. Navigate to HOME in the ribbon and click on the Form Properties. Figure 138: Form Properties.​ In the Events tabs, in the Event list section under the Form Libraries subsection, click on Add. Figure 139: Form Properties.​ Search for the look up record maptaskr_/app/assets/lib/js/form_datasource_autocomplete.js and click on Add. Figure 140: Library Properties.​ In the Events tabs, in the Event list section under the Event Handlers subsection, click on Add and set the function to initShapeEntity for the above Maptaskr library. In the parameters section click check box Pass execution context as first parameter to Yes. Figure 141: Handler Properties.​ Figure 142: Final Form Properties.​ Click on OK to add the form property changes. Finally, click on Save and then click on Publish the changes. Figure 143: Save and Publish Maptaskr Form.​ The custom entity form now should include Maptaskr tab under the custom entity.  ","version":"Next","tagName":"h2"},{"title":"Adding a Dashboard Level Map to a Model-Driven App​","type":1,"pageTitle":"Custom Entities Configuration","url":"/docs/dynamics-365/installation-guide/custom-entities-configuration#adding-a-dashboard-level-map-to-a-model-driven-app","content":" A dashboard level map can also be added as a navigation item within a model-driven app.  Log into to make.powerapps.com, select the environment you are targeting and edit the App you wish to add the map to. Click the + New top left to add page Figure 144: Add New Page to Model-Driven App.​ Select Web Resource Figure 145: Selecting Web Resource as the Content of the Page.​ Set the Title you wish to use for the navigation of the Dashboard page. Figure 146: Changing the Title of the Page.​ Set the icon in the right panel. Figure 147: Changing the Icon of the Page.​ Figure 148: Selecting the Icon for the Page.​ Move the page as required in the navigation bar. Figure 149: Moving Page in Navigation Bar.​ Save and Publish the model-driven app. Your Dashboard will be saved as a Web resource. Figure 150: Saved Maptaskr Dashboard.​ ","version":"Next","tagName":"h2"},{"title":"Geocoding","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/geocoding","content":"","keywords":"","version":"Next"},{"title":"Activating Maptaskr Geocoder Workflows​","type":1,"pageTitle":"Geocoding","url":"/docs/dynamics-365/installation-guide/geocoding#activating-maptaskr-geocoder-workflows","content":" In order to activate Maptaskr Geocoder Workflows, got to Advanced Settings &gt; Process Center &gt; Processes Figure 152: Advanced Settings Process Center Menu.​ Once at the Processes list screen, switch the to All Processes, and search for Maptaskr in the search box. Figure 153: All Processes View.​ Figure 154: Search for Maptaskr Workflows.​ Select the Maptaskr Geocoder Workflows you wish to activate and click Activate on the ribbon menu. You will be prompted for confirmation, click Activate to continue. Figure 155: Select and Activate Maptaskr Geocoder Workflows.​ Figure 156: Confirm Activation.​ Once activation is complete you will see the status of the Workflows change from Draft to Activated. The workflows will now run whenever the configured trigger settings are met. Figure 157: Maptaskr Geocoders Activated.​ Figure 158: Maptaskr Geocoder Configuration Example.​ To test that the workflow has been activated successfully, you will now see the Maptaskr Geocoder Workflow appear as an option in the Flow menu options section on any of the configured entities. Figure 159: Maptaskr Geocoder Option Selectable.​  ","version":"Next","tagName":"h2"},{"title":"Manually Running Maptaskr Geocoder Workflows​","type":1,"pageTitle":"Geocoding","url":"/docs/dynamics-365/installation-guide/geocoding#manually-running-maptaskr-geocoder-workflows","content":" Occasionally there may be the need to run the geocoding workflows on a record, or group of records, manually. This can be done for any of the configured entities as per the following steps.  To run geocoding on existing addresses, navigate to the Entity, select one or more records, click on More Commands and Run Workflow. Figure 160: Geocoding - Run Workflow.​ Select the Maptaskr Geocoder workflow and click on the Add button to the run the geocoding on the records. Figure 161: Geocoding Workflow.​  ","version":"Next","tagName":"h2"},{"title":"Configuring Geocoding Workflow for Custom Entities​","type":1,"pageTitle":"Geocoding","url":"/docs/dynamics-365/installation-guide/geocoding#configuring-geocoding-workflow-for-custom-entities","content":" Maptaskr provides a geocoding flow that can be used to geocode records within additional/custom entities. Follow the below steps to configure this flow for Custom Entities:  Create a new Workflow Process:  Navigate to → Settings → Processes and click on the new button or by creating a new empty Solution and then navigating to Processes. Enter the process name, select category as Workflow, and select the Entity you wish to design workflow and click OK. Figure 162: Create Process.​  Set the Properties:  Set the Scope as an organization and in Start when: select Record is created and Record fields change. For the Record fields change choice, select all the address fields that require geocoding when any of the address fields are changed: Click on Add Step and select the Maptaskr.Plugins (1.0.0.0) → Maptaskr.Plugins.GecodeActivity Figure 163: Select Process.​ Set the address parameter by clicking on Set Properties for the workflow and save and close the window. Figure 164: Select Properties.​ Click on Add Step and add Update Record. As per the entity that the workflow is being configured, click on Set Properties. Set the Latitude and Longitude to the output parameters returned by the workflow, save and close the window. Figure 165: Set Outputs.​  Once the workflow is activated, the geocoding workflow will trigger on creation and update of address fields. ","version":"Next","tagName":"h2"},{"title":"GIS Layers","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/gis-layers","content":"","keywords":"","version":"Next"},{"title":"Add a File Layer​","type":1,"pageTitle":"GIS Layers","url":"/docs/dynamics-365/installation-guide/gis-layers#add-a-file-layer","content":" Click on the File tab to show the settings to configure a layer service.  Figure 78: Add File Layer.​    Once all mandatory and appropriate fields have been configured for the layer in question, click Upload to add the layer to the list of layers available to the appropriate Maptaskr users. These layers can be turned on to provide overlays on the Maptaskr map.  The following table provides a detail overview of the fields associated with adding a file layer to Maptaskr.  FIELDS\tDESCRIPTIONLayer file\tUser can select to upload a layer directly from a file (.zip Shapefile, KML, GeoJSON, TopoJSON, GPX or CSV) or from a service such as WFS Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage. Security group\tBy adding a security group to a layer, user can set permission for the layer to be viewed if the end user is a part of certain team or has a specific role. Sort Order\tSpecific the order in which this layer will display in the Layers list. Enable feature interaction\tFeature interaction allows clicking on features to display attribute data (if applicable to the layer) Enable symbology\tEnable Symbology respects the symbology given by a layer (if applicable) Add as a Basemap for Offline map\tEnable this choice to set up the relationship between configured data sources. E.g., Accounts with Appointments  ","version":"Next","tagName":"h2"},{"title":"Add a Service Layer​","type":1,"pageTitle":"GIS Layers","url":"/docs/dynamics-365/installation-guide/gis-layers#add-a-service-layer","content":" Click on the File tab to show the settings to configure a layer service.  Figure 79: Add a Service Layer.​    Once all mandatory and appropriate fields have been configured for the layer in question, click Upload to add the layer to the list of layers available to the appropriate Maptaskr users. These layers can be turned on to provide overlays on the Maptaskr map.  The following table provides a detail overview of the fields associated with adding a file layer to Maptaskr.  FIELDS\tDESCRIPTIONLayer name\tLayer Name will be the display name for the layer in your layer menu Service type Service Type is to determine where this layer is coming from. If you select one of the available options, you will be prompted to select the Auth Type for the layer. If your layer is secured using authentication, then we highly recommend arranging for the designated Maptaskr Administrator to configure this as a Corporate Layer. If the layer uses Authentication that is already configured choose the relevant option from the dropdown. If your layer is unauthenticated, don't select anything here. Layer URL\tLayer URL is the URL to retrieve the Layer from Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage. Sort Order\tSpecific the order in which this layer will display in the Layers list. Security group\tBy adding a security group to a layer, user can set permission for the layer to be viewed if the end user is a part of certain team or has a specific role. Add as a custom base map\tWill allow you to change the Maptaskr base map to load this layer instead (only available to admin users) Add as a default base map\tWill change the Maptaskr Base map to load this layer instead (only available to admin users) Enable Feature Interaction\tAllows clicking on features to display attribute data (if applicable to the layer) Enable Symbology\tRespects the symbology given by a layer (if applicable)  ","version":"Next","tagName":"h2"},{"title":"Add an ArcGIS Service Layer​","type":1,"pageTitle":"GIS Layers","url":"/docs/dynamics-365/installation-guide/gis-layers#add-an-arcgis-service-layer","content":" Note: ArcGIS Service integrations are only available with the Enterprise version of Maptaskr for D365.  For details on supported ArcGIS versions, and prerequisites that are required to be in place before Maptaskr configuration can occur please refer to the Maptaskr ArcGIS Configuration Guide or contact Maptaskr Support (support@maptaskr.com).  ","version":"Next","tagName":"h2"},{"title":"Add a Data Source Layer​","type":1,"pageTitle":"GIS Layers","url":"/docs/dynamics-365/installation-guide/gis-layers#add-a-data-source-layer","content":" User can configure any data source entity as a layer by filling in the form below.  Click on the Data Source tab to show the settings to configure a layer service.  Once all mandatory and appropriate fields have been configured for the layer in question, click Upload to add the layer to the list of layers available to the appropriate Maptaskr users. These layers can be turned on to provide overlays on the Maptaskr map.  Figure 80: Data source as a layer.​    The following table provides a detail overview of the fields associated with adding a file layer to Maptaskr.  FIELDS\tDESCRIPTIONLayer name\tWill be the display name for the layer in your layer menu Entity\tWill allow to select data source entity View\tWill set the view of data source accordingly Icon\tWill add custom icon from the icon library Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage. Security group\tBy adding a security group to a layer, user can set permission for the layer to be viewed if the end user is a part of certain team or has a specific role. Sort Order\tSpecific the order in which this layer will display in the Layers list. ","version":"Next","tagName":"h2"},{"title":"Icons","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/icons","content":"","keywords":"","version":"Next"},{"title":"Push Pins​","type":1,"pageTitle":"Icons","url":"/docs/dynamics-365/installation-guide/icons#push-pins","content":" Maptaskr by default includes a colour picker when searching/displaying results on the map.  Figure 113: Colour Picker.​    This can be changed from Maptaskr Configuration. Navigate to Map Settings → Display Settings and enable Load Custom Icon. When enabled the colour picker is replaced with default push pins included in the Icons library.  Figure 114: Push Pin.​    ","version":"Next","tagName":"h2"},{"title":"Custom Icons​","type":1,"pageTitle":"Icons","url":"/docs/dynamics-365/installation-guide/icons#custom-icons","content":" To add custom icons to the collection –  Navigate to the Icons tab under Settings in the left navigation bar. Figure 115: Icons.​ Click on new in the ribbon to add a new icon. Figure 116: Icon Record View.​ Enter the required details for inserting the icon E.g., Name, Icon Type and Owner. Figure 117: Populating Icon Record Form.​ Save the icon details. Select the Icon Size. Figure 118: Selecting Icon Size.​ Click on the choose file button and upload an image standing for the icon type. Figure 119: Selecting Icon Image File.​ Figure 120: Completed Icon Record Form.​  Push Pin:  Push Pins are available to allocate to an entity during a data source search.  Entity Properties:  Entity Property icons are a deprecated feature, that has remained to ensure backwards compatibility. This feature is being phased out and is not recommended to be used.  Object Library:  Icons with type set as object library are available under Annotations panel in object library.  Figure 121: Object Library.​   ","version":"Next","tagName":"h2"},{"title":"Data Source Configuration","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/data-source-configuration","content":"","keywords":"","version":"Next"},{"title":"Create a new Data Source​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#create-a-new-data-source","content":" Navigate to the data sources tab under Settings from the left navigation bar. Figure 81: Maptaskr Settings menu.​ On the data source tab to add a new entity, click on new and it shall redirect to next step. Figure 82: Maptaskr Settings menu.​ Enter the following required data to create the entity. Figure 83: New Data Source Form.​  The following table provides an overview of the data source list attributes.  FIELDS\tDESCRIPTIONEntity Name\tThe internal name of the entity. Display Name\tThe display name for the data source Title Field Name\tThe Title field displayed in the Infobox. Figure 84: Title field name. Has address\tThe choice to decide whether the entity has address attributes. If the entity does not have address fields, select No. Related Entity with address\tIf Has address is set to No, a related entity with address must be selected. For example, you want to search appointments based on contact's location, set the Has Address to No and select Contact in the Related Entity with Address. Latitude Field Name\tThe internal latitude field name. Longitude Field Name\tThe internal longitude field name. Is Address Required?\tSet to Yes for entities that have full address attributes that can be mapped. For custom entities that do not have address attributes, the field can be set to no. Address Composite Field Name\tInternal composite address field. Street1 Field Name\tInternal address 1 field (will be automatically mapped for core entities) Street2 Field Name\tInternal address 2 field (will be automatically mapped for core entities) Street3 Field Name\tInternal address 3 field (will be automatically mapped for core entities) City Field Name\tInternal City field (will be automatically mapped for core entities) State Field Name\tInternal State field (will be automatically mapped for core entities) Postcode Field Name\tInternal postcode field (will be automatically mapped for core entities) Country Field Name\tInternal Country field (will be automatically mapped for core entities) Email Field Name\tInternal email field Phone No. Field Name\tInternal phone number field Relationship Color\tInternal multiselect colour field that maps internal colour option set for all the child records of the entity Custom Icon\tUpload image to set it up as default throughout the system. Figure 85: Custom icon Enabled\tWhether the data source is enabled within Maptaskr search. Figure 86: Enabled. Allow Relationship\tEnable this choice to set up the relationship between configured data sources. E.g., Accounts with Appointments Allow Invalid Address\tEnable to include results that do not have valid address attributes (latitude &amp; longitude). Invalid results are included in the data tab results Allow Routing\tEnables the Route button in the D365 ribbon for the table records, and table list views. Show Phone Number in Infobox\tEnable to include the phone number (if exists) below the main header in the Infobox Show Notes\tEnable to include Notes (if exists) as a tab within the Infobox  ","version":"Next","tagName":"h2"},{"title":"Configuring a Data Source​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#configuring-a-data-source","content":" Once a Datasource has been added as per the above instructions, an additional configuration area will become available when you edit the entry.  Figure 87: Edit a Data Source configuration.​    At the bottom of the Datasource listing, you will find several tabs which provide additional advanced configuration capability. The following sections will describe each of these configuration sections in detail.  Figure 88: Data Source advanced configuration.​    ","version":"Next","tagName":"h2"},{"title":"Dashboard Infobox Tabs​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#dashboard-infobox-tabs","content":" Provided the Allow Relationship setting is enabled on a related entity, this section enables the ability to list related records as a tab on the Dashboard search result Infobox.  Figure 89: Data Source Relationship List.​    Figure 90: Related Appointment tab in Account Infobox.​    ","version":"Next","tagName":"h3"},{"title":"Views​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#views","content":" The views tab is used to configure the views that are available for users, this includes setting the view for specific security groups. This can also be accessed as a list from the query builder on the search panel.  Figure 91: Views.​    ","version":"Next","tagName":"h3"},{"title":"Infobox Actions​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#infobox-actions","content":" Data source results returned via search, or related records displayed on record level maps can include specific actions that the user can take as icons on the popup info box.  Figure 92: Example Infobox Actions.​    Figure 93: Infobox Actions.​    Infobox actions can be configured to display different actions based on where the Infobox is displayed. The actions are separated by the following categories -  Dashboard ActionsRecord Level: Related Entity ActionsRecord Level: Related GIS Layer Actions  Dashboard Actions​  Figure 94: Dashboard Actions.​    Dashboard Action configuration is used to determine what actions to show when interacting with the Infobox of a search result record on the Dashboard.  Figure 95: Example Dashboard Actions.​    Dashboard Actions can be added or updated according to the options outlined in the table below.  For the out of the box tables, i.e. Account &amp; Contact, Maptaskr will setup some default actions available on installation.  Figure 96: Create new Dashboard Action form.​    Setting\tType\tDescriptionTitle\tText\tSet the Name of the action to display in the Infobox. Action Name\tDropdown\tSelect the action type you wish to trigger with this action. Can be one of the following options. Note: Open Form or URL will show a Related Entity Name or URL field which allows admin to add in either a related entity associated with a form, or a URL. Related Entity Name or URL (Only if adding Open Form or URL Action)\tText\tEnter the name of the related entity or Enter the HTTPS URL you wish to launch. URL entries can also be dynamic in nature, i.e. they can be set to dynamically include a record specific field using the {field} syntax. For example - https://exampleurl.com?ID={applicationid} where applicationid is a field on the table being configured. You can apply however many dynamics parameters to your URL as required. Note: HTTPS Must be used as only secure links are supported. Icon Class\tDropdown\tSets the icon to be used when showing the action within the Action tab of the Infobox. Sort Order\tInteger\tSets the order in which actions are displayed when showing the action within the Action tab of the Infobox. Is Active?\tCheckbox\tSets whether the action is available to end users or not. Is Quick Form\tCheckbox\tSet whether any action launches a quick form. Note: Only applicable when loading related entity quick create forms that have an associated quick form.  Record Level: Related Entity Actions​  Figure 97: Record Level Related Entity Actions.​    Record Level Related Entity Action configuration is used to determine what actions to show when interacting with the Infobox of a related record being shown at on the record level map.  Figure 98: Example Record Level Related Entity Actions.​    Record Level Related Entity Actions can be added or updated according to the options outlined in the table below.  Figure 99: Create new Record Level Related Entity Action form.​    Setting\tType\tDescriptionTitle\tText\tSet the Name of the action to display in the Infobox. Action Name\tDropdown\tSelect the action type you wish to trigger with this action. Can be one of the following options. Note: Open URL will show a URL field which allows admin to add in a URL. URL (Only if adding Open URL Action)\tText\tEnter the HTTPS URL you wish to launch. URL entries can also be dynamic in nature, i.e. they can be set to dynamically include a record specific field using the {field} syntax. For example - https://exampleurl.com?ID={applicationid} where applicationid is a field on the table being configured. You can apply however many dynamics parameters to your URL as required. Note: HTTPS Must be used as only secure links are supported. Related Entity Name\tText Lookup Field Name\tText Icon Class\tDropdown\tSets the icon to be used when showing the action within the Action tab of the Infobox. Sort Order\tInteger\tSets the order in which actions are displayed when showing the action within the Action tab of the Infobox. Is Active?\tCheckbox\tSets whether the action is available to end users or not.  Record Level: Related GIS Layer Actions​  Related GIS Layer Actions enable to configuration of user actions on layer features. This allows the population of fields or a record according to user interaction and selection i.e. add an Asset to a Work Order.  Figure 100: Related GIS Layer Action example.​    Record Level Related GIS Layer Actions can be added or updated according to the options outlined in the table below  Setting\tType\tDescriptionTitle\tText\tSet the Name of the action to display in the Infobox. Action Name\tDropdown\tSelect the action type you wish to trigger with this action. Can be one of the following options. GIS Layer Name\tDropdown\tSelect the GIS layer that you want to configure a Related GIS Layer Action for. Note: Layer must be configured to an Esri ArcGIS layer and be set to Enable in Datasource. GIS Layer Attribute Name The internal name of the attribute you wish to utilise with the action. Typically, a unique identifier to be used as a look up. Related Entity Name\tText\tThe internal name of the related entity you wish to map the action to. Related Entity Field Name\tText\tThe internal name of the field within the entity you wish to match with the Attribute. Lookup Field Name\tText\tThe internal name of the field within the entity you wish to match with the Attribute. Sort Order\tInteger\tSets the order in which actions are displayed when showing the action within the Action tab of the Infobox. Icon Class\tDropdown\tSets the icon to be used when showing the action within the Action tab of the Infobox. Is Active?\tCheckbox\tSets whether the action is available to end users or not.  ","version":"Next","tagName":"h3"},{"title":"Entity Properties​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#entity-properties","content":" Entity properties are the fields visible in the detail tab in the Infobox. New properties can be added that are specific to the entity and can be for specific security groups. User can have this eniity editable or locked as well as change the display name.  Figure 101: Data Source - Entity Properties.​    Figure 102: Data Source - Entity Properties example.​    Properties can be added as required to each Datasource as per the following Add Property form.  Figure 103: Add Property form.​    Setting\tType\tDescriptionHide row if NULL or EMPTY\tCheckbox\tSets whether to hide the Property in the event it is NULL or empty. Editable?\tCheckbox\tSets whether to hide the Property able to be edited by an end user via the side panel. Entity Property\tText\tSet the Entity property you wish you map to this property. Custom Display Name\tText Security Group\tMulti-Select\tBy adding a security group to a layer, user can set permission for the layer to be viewed if the end user is a part of certain team or has a specific role. Order Regex Query Regex Replacement   ","version":"Next","tagName":"h3"},{"title":"Data Tab Fields​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#data-tab-fields","content":" Data Tab includes fields visible in the data tab section within Maptaskr. New properties can be added that are specific to the entity and can be for specific security groups.  Figure 104: Data Tab Fields example.​    Figure 105: Data Tab Fields.​    The figure below shows the options available for setting which fields get displayed on the Data Tab.  Figure 106: Add Data Tab Field form.​    Setting\tType\tDescriptionSelect Field\tCheckbox\tSets whether to hide the Property in the event it is NULL or empty. Custom Display Name\tCheckbox\tSets whether to hide the Property able to be edited by an end user via the side panel. Security Group\tMulti-Select\tSet the Entity property you wish you map to this property. Order Allow bulk update\tDropdown\tDetermine if you wish to allow users to bulk update this displayed field.   ","version":"Next","tagName":"h2"},{"title":"Infobox Tab Order​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#infobox-tab-order","content":" Allows the user to configure the order of the visible tabs in the Infobox and can be rearranged using the number system shown in the figure below.  Figure 107: Infobox Tab order example.​    Figure 108: Infobox Tab order settings example.​    ","version":"Next","tagName":"h2"},{"title":"GIS​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#gis","content":" Note: ArcGIS Service integrations are only available with the Enterprise version of Maptaskr for D365.  For details on supported ArcGIS versions, and prerequisites that are required to be in place before Maptaskr configuration can occur please refer to the Maptaskr ArcGIS Configuration Guide or contact Maptaskr Support (support@maptaskr.com).  ","version":"Next","tagName":"h2"},{"title":"Record Level Relationships​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#record-level-relationships","content":" Allows the user to configure a relationship between two data sources which allows the user to view related records on the record level map. These related records can then display an Infobox when clicked allow the user to perform tasks on the related data source. The following example show an Account record (red pin) also configured to display related Contacts (blue pins).  Figure 109: Record Level Relationships example.​    Figure 110: Record Level Relationships example.​    Setting\tType\tDescriptionRelated Entity\tDropdown\tAllows you to select any of the entities available to set as a related record to display on the record level map. Highlight\tCheckbox\tSets whether you wish related records get highlighted when first loaded. Disable Location\tCheckbox\tSets whether the records are displayed on the map on load. Create Related Records\tCheckbox\tSets the ability for creation of this type of record from the right click context menu. Save Related Records\tCheckbox\tDetermine if you wish to allow users to bulk update this displayed field.   ","version":"Next","tagName":"h2"},{"title":"ShapeEditor Settings​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#shapeeditor-settings","content":" User can perform the following tasks or access the features if enabled from the list below from the Data Source configuration page.  Figure 111: ShapeEditor Settings.​    These settings apply to the record level map.  Figure 112: Record Level map example.​    SHAPEEDITOR SETTINGS\tDESCRIPTIONEnable Upload\tSelect this option to enable or disable upload (Shapefile(.zip), KML, GeoJson) feature from annotations tab in the record level Enable Draw\tSelect this option to enable or disable Draw option from annotations panel in the record level Enable Data Tab\tSelect this option to enable or disable data panel from the record level Enable Point Draw\tSelect this option to enable or disable Point Draw option from annotations panel in the record level Enable Polygon Draw\tSelect this option to enable or disable Polygon Draw option from annotations panel in the record level Enable POI\tSelect this option to enable or disable POI (Point of interest) in the record level Enable Reset button\tSelect this option to enable or disable reset button option from annotations tab in the record level Enable Pin\tSelect this option to enable or disable Pin (pushpin/object library) option from annotations tab in the record level Enable Layers\tSelect this option to enable or disable layers panel in the record level Enable Default layers\tSelect this option to enable or disable default layer visible on the record level Enable Line Draw\tSelect this option to enable or disable Line Draw option from annotations panel in the record level Enable Circle Draw\tSelect this option to enable or disable Circle Draw option from annotations panel in the record level Enable Route Path\tThis is a deprecated feature, and is in the process of being removed. Enable Infobox\tEnables the Infobox for the record map elements. Hide Measurements\tSelect to hide any measurements that might be usually seen on the map, such as area and length. Read Only Filter\tRecord level map becomes read-only when this field is set appropriately. E.g., status eq 'approved'  ","version":"Next","tagName":"h2"},{"title":"ShapeEditor Advanced Options​","type":1,"pageTitle":"Data Source Configuration","url":"/docs/dynamics-365/installation-guide/data-source-configuration#shapeeditor-advanced-options","content":" An overview of each of the available settings and description of what they entail is found in the below table.  Setting\tDescription\tTypeAllowed Shapefile Projections\tAllowed Shapefile Projections, please provide in latest WKID format (e.g. 7844) and comma separated to allow multiple projections.\tFree text – CSV format of WKID projections to be allowed. In the following format. wkidformat, wkidformat, … e.g. 7844, … Where 7844 is the code for GDA2020. See https://epsg.io/ for more projections listing. Names of Uploads\tEnables the predefined setting of the shape names.\tFree text – CSV format. e.g. Permit Boundary, Footprint, … Note: Names for the shapes will be loaded from the name CSV and if there are not enough names, the control will use the name Shape X where X is the shape number. Line Color of Uploads\tEnables the predefined setting of the shape stroke color. Maps directly to the shape names that are preconfigured.\tFree text – CSV format of HEX colors to be used. e.g. #A020F0, #B0B0F0, … Note: Alpha Hex can also be used: e.g. #A020F0**88** Line Style of Uploads\tEnables the predefined setting of the stroke line to be dashed or solid for shapes. Maps directly to the shape names that are preconfigured.\tFree text – CSV format of Boolean values to determine if lines will be dashed or not. True indicating lines will be dashed. False indicating lines will be solid. e.g. true, false, true Fill Color of Uploads\tEnables the predefined setting of the shape fill color. Please note that this automatically applies an opacity of 10%. If no fill is required, then simply leave this field blank. Maps directly to the shape names that are preconfigured.\tFree text – CSV format of HEX colors to be used. e.g. #A020F0, #B0B0F0, … Note: Alpha Hex can also be used: #A020F0**88** Pre-Selected Layers\tAllows the setting of preselected layers to activate by default when the map first loads on the page.\tFree text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format, see Pre-Selected, Exclusion, and Intersection Layer Configuration Snap Selected Layers\tAllows the setting of preselected layers to activate snap to when drawing on the map. Note: Required to be an ArcGIS Feature Server service layer.\tFree text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format, see Pre-Selected, Exclusion, and Intersection Layer Configuration Trace Selected Layers\tAllows the setting of preselected layers to activate tracing when drawing on the map. Note: Required to be an ArcGIS Feature Server service layer.\tFree text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format, see Pre-Selected, Exclusion, and Intersection Layer Configuration Exclusionary Selected Layers\tAllows the setting of preselected layers to act as exclusion zones when drawing/uploading shapes on the map. Note: Required to be an ArcGIS Feature Server service layer.\tFree text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration _And Intersection Detection Intersection Layers\tAllows the setting of preselected layers to act as intersect zones when drawing/uploading shapes on the map. Note: Required to be an ArcGIS Feature Server service layer. Once a shape has either been drawn or uploaded, a validation button appears which they can use to trigger intersect detection. Free text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration _And Intersection Detection Warning Buffers\tSets the warning buffer, in meters, for intersection layers configured in the section above. Users will be given a warning if any shape drawn or uploaded encroaches within the defined buffer. Free text – CSV format. e.g. 1000, 500, … Note: Maps to layers in order set for Intersection Selected Layers property. In meters (m). For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration _And Intersection Detection Error Buffers\tSets the error buffer in meters, for intersection layers configured in the section above. Users will be given an error if any shape drawn or uploaded encroaches within the buffer set. Free text – CSV format. e.g. 1000, 500, … Note: Maps directly to the layer names that are preconfigured in the Intersection Layers. In meters (m). For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration _And Intersection Detection Number of Concurrent Intersection Calls\tSets the maximum number of concurrent intersect detection calls the map will be able to make. If more are required, these will be batched accordingly. E.g. If there are 2 shapes and 5 intersection layers, 10 intersection calls will be made.\tFree text Default – 20 ","version":"Next","tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/installation","content":"","keywords":"","version":"Next"},{"title":"Installation Via AppSource Marketplace​","type":1,"pageTitle":"Installation","url":"/docs/dynamics-365/installation-guide/installation#installation-via-appsource-marketplace","content":" The primary way to install Maptaskr is via the Microsoft Business Application Marketplace - AppSource.  The following versions of Maptaskr can be installed to your environment  Maptaskr for Power Apps Premium &amp;Maptaskr for Dynamics 365  Figure 1: Maptaskr versions available via AppSource Marketplace.​    Note Installing Maptaskr from AppSource is currently only available for new installations. If you are a current Maptaskr customer or have previously installed Maptaskr into your target environment, you will receive available updates directly from the Maptaskr Team. Alternatively, please reach out to the Maptaskr Team support@maptaskr.com to request access to updates.  For the purposes of this instruction manual, we will be using our Maptaskr for Dynamics 365 offering as the example solution as the installation and configuration of Maptaskr for Power Apps will be identical unless explicitly stated.  To install either of the Maptaskr solutions to your environment -  Navigate to the Maptaskr solution offering on AppSource ensuring you are logged in with the appropriate Microsoft account you wish to use for installation purposes. Click on Free trial to commence with the install if the user is logged in. Figure 2: AppSource Installation.​ You will be taken to the Power Platform admin center and authenticated with you user account as appropriate. Select the Power Platform or D365 environment where you wish Maptaskr to be installed. Note: You must have an environment already provisioned and ready to select for Maptaskr installation. Figure 3: Select an environment to install Maptaskr.​ The installation process will take from 20mins – 30mins. Keep this screen open and periodically refresh to check for status updates. Figure 4: Maptaskr installing.​ Once the solution has finished installation, the status will update to Installed. At this stage you can navigate to the environment in which you choose to install Maptaskr, and in the Apps you will now see the Maptaskr app available in the Published Apps section click on Maptaskr for Dynamics or Maptaskr for Power Apps to use Maptaskr app. Figure 5: Maptaskr is installed and published.​  ","version":"Next","tagName":"h2"},{"title":"Manual Installation​","type":1,"pageTitle":"Installation","url":"/docs/dynamics-365/installation-guide/installation#manual-installation","content":" In the case where you have a Maptaskr solution file which needs to be installed manually, there are two (2) methods for installation –  Installation via Power Apps Admin PortalInstallation via Classic Admin Portal  Maptaskr solution files comprise of a .zip package file with the following naming convention – {ProductType}_{ReleaseType}_{Version}_Managed.zip  e.g., D365_RC_2.1.5.39_Managed.zip  {ProductType} – will either be D365 or PA for Dynamics 365 or Power Apps Premium  {ReleaseType} – will be BETA (fresh off the press – no regression testing conducted), RC (release candidate – regression testing underway) or be absent, meaning it is an app source release and has completed regression testing.  {Version} – the version number will take the form W.X.Y.Z where W is the Major build, X is the Minor build, Y is the Patch, and Z is the Build number. The following sections provide an overview of how to manually deploy the Maptaskr solution file via the available methods, you need choose only one (1) method for installation.  ","version":"Next","tagName":"h2"},{"title":"Installation Via Power Apps Admin​","type":1,"pageTitle":"Installation","url":"/docs/dynamics-365/installation-guide/installation#installation-via-power-apps-admin","content":" To install Maptaskr via the Power Apps Admin Portal, navigate to https://make.powerapps.com/ and select the environment you wish to install or upgrade Maptaskr into.  Figure 6: Select Environment for Installation.​    Once you have selected the correct environment, navigate to the Solution menu item in the left navigation and click on Import solution button. Figure 7: PowerApps method installation.​ Once the Import a solution panel appears, click on Browse and select solution file you wish to import for installation. Figure 8: Import a solution - select the solution file.​ Click Next to import the solution. Figure 9: Import a solution - solution file selected.​ Once the file is processed, click Import to commence installation of the solution. Figure 10: Import a solution.​ As installation occurs, you will be prompted with a notification to track the import progress. Figure 11: PowerApps method installation.​ Once the solution has finished installation, the status will update to Installed. At this stage you can navigate to the environment in which you choose to install Maptaskr, and in the Apps you will now see the Maptaskr app available in the Published Apps section click on Maptaskr to use Maptaskr app. Figure 12: Maptaskr is installed and published.​  ","version":"Next","tagName":"h3"},{"title":"Installation Via Classic Admin Portal​","type":1,"pageTitle":"Installation","url":"/docs/dynamics-365/installation-guide/installation#installation-via-classic-admin-portal","content":" To install Maptaskr via the Classic Admin Portal, navigate to https://admin.powerplatform.microsoft.com/environments, login with an appropriate account and select the environment you wish to install or upgrade Maptaskr into.  Once in the environment summary page click Open to navigate to the environments landing page. Figure 13: Launch environment landing page.​ Once there, from the cog main navigation item in the top right, select Advanced Settings. Figure 14: Select Advanced Settings.​ From the Settings top navigation mega menu, navigate to Solutions. Figure 15: Settings to Solutions.​ Once at the Solutions settings screen, click Import. Figure 16: Classic method installation.​ Choose the solution file you wish to install and then click 'Next` to progress. Figure 17: Choose solution file.​ Validate the solution details. Click Next Figure 18: Validate solution file.​ If you are re-installing (upgrading) in an environment that already has Maptaskr installed, you will be prompted select upgrade method. Ensure Maintain customizations (recommended) is selected and click Import. Figure 19: Upgrade method.​ An Import customizations pop-up page will track the progress of the package installation. Figure 20: Import progress.​ Once Installation is completed, refresh your page, and Maptaskr will be installed. Figure 21: Maptaskr installed.​ ","version":"Next","tagName":"h3"},{"title":"Offline Mode","type":0,"sectionRef":"#","url":"/docs/dynamics-365/installation-guide/offline-mode","content":"Offline Mode For details on Maptaskr Offline capability configuration, and prerequisites that are required to be in place before Maptaskr Offline can be used please refer to the Maptaskr for D365 – Offline Capability document or contact Maptaskr Support (support@maptaskr.com).","keywords":"","version":"Next"},{"title":"Introducing Maptaskr for Dynamics 365","type":0,"sectionRef":"#","url":"/docs/dynamics-365/introducing-maptaskr-for-dynamics-365","content":"Introducing Maptaskr for Dynamics 365 Discover New Insights using your Location DataWith Maptaskr, you can now manage your customers effectively, by searching, visualising, perform analysis and plan strategies with the power of Geospatial and Location Intelligence Communicate with your CustomersEasily search for and communicate with your customers, leads or contact - either it being announcements or planned outages in specific areas, business needs or based on external data can be challenging. Visualize and add bulk customers to Marketing Lists. Combine Dynamics 365 and ESRI ArcGIS (Enterprise)Put your Dynamics 365 data in context with ArcGIS, by easily sharing your ArcGIS data securely with Dynamics users. Enabling field staff to interact and take actions by providing them with relevant business-critical data. Enable AnalyticsOverlay freely available government and agency data like transport, health, demographic, weather forecasts and real-time data. Perform analysis to see how your customers are affected by the services provided by the government and agencies. Incorporate aerial imagery (Nearmap &amp; MetroMap) for accurate ground intelligence, before your staff visit job sites. Accounts Near Me + Route PlanningAccounts Near Me (Radius Search) lets you see all your customers, leads, prospect near you in real-time. This allows you to quickly get an overview and start planning your trip or day. Select the customers you wish to see and let optimize your route. Sales TerritoriesTake Dynamics 365 Sales Territories to the next level by enabling Geographies, assign postcodes, import or draw custom boundaries.","keywords":"","version":"Next"},{"title":"Configuration","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-capability/configuration","content":"","keywords":"","version":"Next"},{"title":"Microsoft Offline Configuration​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/offline-capability/configuration#microsoft-offline-configuration","content":" The configuration on the Microsoft platform should be adjusted based on the specific mobile app being used, as guided by the corresponding online instructions. –  Dynamics 365 mobile app​  Configure mobile offline synchronization for your mobile app  Dynamics 365 Field Services mobile app​  Configure offline capabilities in the Field Service (Dynamics 365) mobile app  Note: Any records and their relationships that an organisation wishes to have available in offline mode, are required to be configured as per the Microsoft instructions above. If these entities are not configured to sync, they will not be available when the app goes offline.  ","version":"Next","tagName":"h2"},{"title":"Maptaskr entities required to be configured​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/offline-capability/configuration#maptaskr-entities-required-to-be-configured","content":" There are several Maptaskr specific entities that are required to be configured to be available offline. These are –  Maptaskr BookmarkMaptaskr ConfigurationMaptaskr Data sourceMaptaskr IconMaptaskr Infobox ActionMaptaskr LambpetMaptaskr LayerMaptaskr MapviewNoteUser  Note: The filter settings for Maptaskr entities can be set to “All rows”, the other entities can be configured as per requirements.  ","version":"Next","tagName":"h3"},{"title":"Maptaskr Offline Configuration​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/offline-capability/configuration#maptaskr-offline-configuration","content":" ","version":"Next","tagName":"h2"},{"title":"Offline file layer configuration​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/offline-capability/configuration#offline-file-layer-configuration","content":" In addition to configuring the syncing of entities to support offline, Maptaskr requires the configuration of an offline file layer which will be used when the app is in offline mode. Organisations can set a predefined file layer that is synced with users’ devices. This enables users to continue having a visual map view of where they are located – even when offline.  To prepare a file layer for offline use, the Maptaskr Administrator needs to add a Corporate Layer using the Add Corporate Layer feature in Maptaskr.  Note: The file is required to be either one of the following formats – Shapefile, KML, GeoJSON, TopoJson, GPX or CSV.  The file is uploaded via the Add Layer option as seen in the figure below.  Figure 2: Add file layer as Basemap for Offline Map​    ","version":"Next","tagName":"h3"},{"title":"Different offline file layers based on user's business unit.​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/offline-capability/configuration#different-offline-file-layers-based-on-users-business-unit","content":" Organisations also can upload multiple offline file layers to cater for users in varying business units. This is achieved by uploading multiple offline file layers and configuring the Security Group option to the appropriate group or team as configured in the platform.  Figure 3: Configuring offline file layer for users in different locations.​    ","version":"Next","tagName":"h3"},{"title":"Getting Maptaskr working Offline​","type":1,"pageTitle":"Configuration","url":"/docs/dynamics-365/offline-capability/configuration#getting-maptaskr-working-offline","content":" Note: Maptaskr does NOT support Offline Mode or Offline First Mode, rather it supports lost network connectivity (Offline), i.e. when the device drops out of range from network connectivity. Thus ensure the Work in offline mode on devices is toggled off.  Figure 4: Work in offline mode - toggled off.​    Field Service Mobile​  For offline to work as expected in the Field Service Mobile, ensure the following is toggled to YES on their field service for mobile app.  Figure 5: Choose the offline mode toggle to Yes.​    To access this setting -  Head to make.powerapps.com. Figure 6: Accessing make.powerapps.com.​ Create an unmanaged solution for Field Service customisation. Figure 7: Creating an Unmanaged Solution.​ Add the existing field service mobile app. Figure 8: Add the existing field service mobile app.​ Edit the Field Service Mobile App. Figure 9: Edit the Field Service Mobile app.​ Go to the settings of the App. Figure 10: Accessing the App settings.​ Under upcoming features, enable the field Choose the offline mode to apply to your app toggle to Yes Figure 11: Enabling the Upcoming Offline Mode.​  Please note that with more recent releases of Dynamics 365 and Power Apps there are additional settings that may impede with disabling offline-first mode.  To ensure your model-driven app remains offline-first please check the following -  Go to the settings of the app. Figure 12: Accessing the App settings.​ Click on Features and scroll down to find Enable offline classic. Make sure to toggle it to Yes Figure 13: Ensuring Offline Classic mode is turned on.​ Save &amp; Publish the app. ","version":"Next","tagName":"h3"},{"title":"Functional Overview","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-capability/functional-overview","content":"","keywords":"","version":"Next"},{"title":"Working in Offline Mode​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-capability/functional-overview#working-in-offline-mode","content":" Since Maptaskr natively leverages the mobile offline capabilities provided by the Microsoft platform it lives within, it is important for users to understand how offline works in the specific app that is being used, including the base functionality that is available to a user. An overview of this functionality can be found in the following the online Microsoft guide –  Work offline on your mobile device  ","version":"Next","tagName":"h2"},{"title":"Maptaskr Functional Offline Capabilities​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-capability/functional-overview#maptaskr-functional-offline-capabilities","content":" Beyond the baseline functionality provided by the Microsoft app, users can create, display and interact with business records straight from a map even when offline. New records automatically are tagged with geospatial coordinates, leveraging native GPS capabilities of the user’s device (so long as the user’s device has a valid location/GPS signal). Below is a list of the Maptaskr capabilities available to user in offline mode.  ","version":"Next","tagName":"h2"},{"title":"Offline File Layer​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-capability/functional-overview#offline-file-layer","content":" Users will be presented with the appropriate offline file layer as configured for their location. Multiple offline file layers can be loaded and configured for offline usage. A single layer will be loaded for users based on business unit. This enables users to continue having a visual map view of where they are located – even when offline and interact with record within the map viewer.  ","version":"Next","tagName":"h3"},{"title":"Creating and interacting with business records​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-capability/functional-overview#creating-and-interacting-with-business-records","content":" Once users load the Maptaskr map viewer in offline mode they will be able to perform the follow functions -  View and interact with records – this includes any related geospatial features (polygons, point, custom icons etc.) as well as related records (if configured).Create, update, delete records as required.Annotate on the map – i.e. utilised the drawing tools (pins, lines, polygons, text).Bookmark locations for easy navigation.  ","version":"Next","tagName":"h3"},{"title":"Data Persistence​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-capability/functional-overview#data-persistence","content":" Any data created, modified, or deleted via the Maptaskr functionality whilst offline will persist on the mobile device and sync back to the platform once the device is back online utilising the native capabilities of the Microsoft app and underlying platform. ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-capability/introduction","content":"Introduction As a Microsoft First Party ISV solution, Maptaskr natively leverages the mobile offline capabilities provided by the Microsoft platform it lives within. Maps can work with synced data in offline mode even when you don't have internet access. The mobile app provides offline experience that lets you work with the same Maptaskr functionality —via the same map viewer— so users always stay productive. Once back online, changes made via the map are synchronized with your apps in the Microsoft Dataverse environment. Maptaskr maps work seamlessly within Power Apps mobile and Dynamics 365 for phones and tablets app and required the same baseline offline configuration applied at the platform level. Figure 1: Maptaskr on mobile devices.​ Some of the key features provided by Maptaskr to support mobile offline include – Offline File Layer - Offline file layers can be used to provide lightweight mobile device friendly “basemap”. Data interaction - Ability to create and interact with business records via the record level map viewer. Data persistence – Updates and additions captured via the map viewer are securely stored on the device and synced back once connectivity is re-established.","keywords":"","version":"Next"},{"title":"Features Not Available Offline","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-user-guide/features-not-available-offline","content":"","keywords":"","version":"Next"},{"title":"Features That Require Online Services​","type":1,"pageTitle":"Features Not Available Offline","url":"/docs/dynamics-365/offline-user-guide/features-not-available-offline#features-that-require-online-services","content":" Certain features provided by Maptaskr are reliant on online services and thus require an internet connection for users to utilise. Whilst offline, these features are not available to users. These features will automatically become available again once the device returns to being online.  Basemaps (Offline file layers are available ONLY)  A specific offline compatible file layer will be shown whilst offline and will be configured by your organisation and the exact features displayed on the offline map (e.g road names, boundary lines, geo-features) will be subject to the specific offline map file that has been uploaded by your organisation.  Layers Figure 22: Layers.​  Layers require internet connectivity and will only be available when the app is online.  Search Box (Searching) Figure 23: Search Box.​  Search requires internet connectivity to the search services and will only be available when the app is online.  ","version":"Next","tagName":"h2"},{"title":"Features Not Available Due to Microsoft App Restrictions​","type":1,"pageTitle":"Features Not Available Offline","url":"/docs/dynamics-365/offline-user-guide/features-not-available-offline#features-not-available-due-to-microsoft-app-restrictions","content":" Due to the Microsoft Apps currently only allowing record level records to be loaded while offline, the Maptaskr global map search from the site map is not available offline.  Figure 24: Maptaskr global dashboard map.​   ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-user-guide/introduction","content":"Introduction As a Microsoft First Party solution, Maptaskr leverages the natively mobile offline capabilities provided by the Microsoft platform it lives within. Maps work with synced data in offline mode even when you don't have internet access. The mobile app provides offline experience that lets users work with offline enabled Maptaskr functionality —via the same map viewer— so users can stay productive. Once back online, changes made via the map are synchronized with your Microsoft Dataverse environment. Maptaskr works within Power Apps mobile and Dynamics 365 for phones and tablets app and require the same baseline offline configuration applied at the platform level. Figure 1: Maptaskr on mobile devices.​ Some of the key features provided by Maptaskr to support mobile offline include – Offline File Layer - Offline file layers can be used to provide lightweight mobile device friendly “basemap”.Data interaction - Ability to create and interact with business records via the record level map viewer.Data persistence – Updates and additions captured via the map viewer are securely stored on the device and synced back once connectivity is re-established.","keywords":"","version":"Next"},{"title":"Functional Overview","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-user-guide/functional-overview","content":"","keywords":"","version":"Next"},{"title":"How to interact with Maptaskr in Offline Mode​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#how-to-interact-with-maptaskr-in-offline-mode","content":" Beyond the baseline functionality provided by the Microsoft app, users can create, display, and interact with business records straight from a map even when offline. New records automatically are tagged with geospatial coordinates, leveraging native GPS capabilities of the user’s device (so long as the user’s device has a valid location/GPS signal). Below is a list of the Maptaskr capabilities available to user in offline mode.  For all the features shown in this section please ensure pre-requisites in section Pre-requisites have been met and a general offline capabilities are understood.  ","version":"Next","tagName":"h2"},{"title":"Viewing a Record​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#viewing-a-record","content":" Navigate to Accounts. Figure 5: Navigate to Accounts.​ Navigate to record that is available offline on the device. Figure 6: Select Record.​ Click on the Maptaskr tab to view the map for that record. Figure 7: View Record.​ Note: An offline configured file layer will be displayed according to the user’s mobile offline profile settings.  The map will show different items based on its content:  Record location ‘dots’ will be shown on the map (if record has a saved location). Related record ‘dots’ will be shown on the map (if configured). Any map polygons or other shapes that have been saved to the map. Figure 8: Record details displaying on maps - Pins and Polygons.​  ","version":"Next","tagName":"h2"},{"title":"Creating a new record in Offline Mode​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#creating-a-new-record-in-offline-mode","content":" Navigate to Accounts Figure 9: Navigation panel.​ Click on the plus sign to create a new record. Figure 10: New record.​ Enter the required fields and click save. Figure 11: Enter details and save.​  ","version":"Next","tagName":"h2"},{"title":"Setting a record location​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#setting-a-record-location","content":" Tap and hold on the location in the map to update the location of the record, a context menu will appear. Figure 12: Context menu.​ Select Set Location and the map will drop a pin, then click Save to save the location fo the record. Figure 13: Dropping a location pin and saving the location.​  ","version":"Next","tagName":"h3"},{"title":"Bookmarks​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#bookmarks","content":" Bookmarks are a very easy way to save a particular location on a map for future re-visit. In particular, handy if the user frequently searches within an area.  Bookmarks are personal and cannot be viewed by any other user. When a bookmark is created, it saves the extent of the area and zoom level.  To bookmark a location, click on the icon in the ribbon highlighted below. Fill in the text box name of the location. Click the save button to save the bookmark. A message alert will pop-up if the location was saved. Figure 14: Creating a bookmark.​ Figure 15: Saving a bookmark.​ Click Search to navigate to a saved bookmark. Figure 16: Saved bookmark.​ Users can also edit/delete the saved bookmark. Click on the three dots to access the edit and delete options. Figure 17: Bookmark tools.​ Click on a bookmarked location to jump to that location on the offline base map.  Note: You will not be able to search for a location using the address search feature whilst offline. See Features Not Available Offline for more details.  ","version":"Next","tagName":"h2"},{"title":"Annotating a Map (Drawing Shapes)​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#annotating-a-map-drawing-shapes","content":" Tap on the Pencil icon to add annotations to the map. Tap on Draw. Select from choices of point, line, polygon, circle, or text to draw on map. Tap on the Pencil icon to view the map. Draw the polygon or drop a pin and tap save. Figure 18: Drawing on a map.​  ","version":"Next","tagName":"h2"},{"title":"Zoom​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#zoom","content":" The two icons highlighted below control the zoom level. The + icon will zoom in and the - icon will zoom out.  Figure 19: Zoom Plus (+) and Minus (-).​    ","version":"Next","tagName":"h2"},{"title":"Extent Controls​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#extent-controls","content":" The three highlighted icons below control extent navigation. Extent is simply the visible area + zoom level.  Every time you pan the map or zoom in/out the extent and zoom is stored and can be navigated using the controls.  In a top-down order the controls do the following:  Return to default extent Go back to previous extent Go to next extent  Figure 20: Extent Controls.​    ","version":"Next","tagName":"h2"},{"title":"Track Location​","type":1,"pageTitle":"Functional Overview","url":"/docs/dynamics-365/offline-user-guide/functional-overview#track-location","content":" Clicking the highlighted button below turn on location tracking. As your device moves, the location pin on the map will refresh accordingly.  Figure 21: Track location.​   ","version":"Next","tagName":"h2"},{"title":"Offline Capability Overview","type":0,"sectionRef":"#","url":"/docs/dynamics-365/offline-user-guide/offline-capability-overview","content":"","keywords":"","version":"Next"},{"title":"Working in Offline Mode​","type":1,"pageTitle":"Offline Capability Overview","url":"/docs/dynamics-365/offline-user-guide/offline-capability-overview#working-in-offline-mode","content":" Since Maptaskr relies on the native mobile offline capabilities provided by the Microsoft platform it lives within, it is important for users to understand how offline works in the specific app that is being used, including the base functionality that is available to a user. An overview of this functionality can be found in the following the online Microsoft guide.  Work offline on your mobile device  ","version":"Next","tagName":"h2"},{"title":"Pre-Requisites​","type":1,"pageTitle":"Offline Capability Overview","url":"/docs/dynamics-365/offline-user-guide/offline-capability-overview#pre-requisites","content":" Maptaskr requires the following pre-requisites to function whilst users are offline.  User has enabled location sharing on the device. For iPhone: Go to settings -&gt; Privacy &amp; security -&gt; Location Services Figure 2: Turn on Location Services.​ Figure 3: Allow Dynamics 365 location access.​ Data is synced to the mobile device. Prior to going offline, data synchronisation is required to be completed on the mobile device. To ensure that this has occurred, users need to load the app whilst internet connectivity is available and allow for the data to synchronise to the device. To check whether data syncing is completed click on the Offline Status an ensure the Status is Ready once updates have finished downloading. (See figure below) Figure 4: Data Sync - Ensure Ready for Offline.​ ","version":"Next","tagName":"h2"},{"title":"Registerable Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events","content":"Registerable Events All Registerable events require the use of the Control ID (referenced from here on as controlId ) provided by the MapReady event. This uniquely identifies the map control, and allows you to register to one or many maps on the current form.","keywords":"","version":"Next"},{"title":"Base Map Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/base-map-events","content":"","keywords":"","version":"Next"},{"title":"BaseMapChanged​","type":1,"pageTitle":"Base Map Events","url":"/docs/dynamics-365/registerable-events/base-map-events#basemapchanged","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Base Map Events","url":"/docs/dynamics-365/registerable-events/base-map-events#description","content":" The BaseMapChanged event is triggered when a user changes the base map type on a Dashboard or Record Level Maptaskr Map. This event provides information about the new base map type and its associated URL.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Base Map Events","url":"/docs/dynamics-365/registerable-events/base-map-events#usage","content":" To listen for the BaseMapChanged event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;BaseMapChanged&quot;, function(baseMapType, url) { console.log(&quot;baseMapType: &quot; + baseMapType); console.log(&quot;url: &quot; + url); });   In the example above, we've registered an event listener for the BaseMapChanged event. When the event occurs, the provided call-back function is executed, logging the new base map type and its associated URL to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Base Map Events","url":"/docs/dynamics-365/registerable-events/base-map-events#parameters","content":" baseMapType (string): The type or category of the new base map.url (string): The URL or source of the new base map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Base Map Events","url":"/docs/dynamics-365/registerable-events/base-map-events#removing-event-listeners","content":" To remove the event listener for the BaseMapChanged event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;BaseMapChanged&quot;);   In the example above, the event listener for BaseMapChanged is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Annotation Drawing Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events","content":"","keywords":"","version":"Next"},{"title":"AnnotationDrawingStarted​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#annotationdrawingstarted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#description","content":" The AnnotationDrawingStarted event is triggered when a user begins drawing an annotation on a Dashboard or Record Level Maptaskr Map. This event provides information about the annotation's shape name and starting latitude and longitude coordinates.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#usage","content":" To listen for the AnnotationDrawingStarted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AnnotationDrawingStarted&quot;, function(shapeName, startLat, startLng) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;startLat: &quot; + startLat); console.log(&quot;startLng: &quot; + startLng); });   In the example above, we've registered an event listener for the AnnotationDrawingStarted event. When the event occurs, the provided call-back function is executed, logging the annotation's shape name, starting latitude, and starting longitude to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#parameters","content":" shapeName (string): The type or category of the annotation being drawn.startLat (number): The latitude coordinate where the annotation drawing started.startLng (number): The longitude coordinate where the annotation drawing started.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#removing-event-listeners","content":" To remove the event listener for the AnnotationDrawingStarted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AnnotationDrawingStarted&quot;);   In the example above, the event listener for AnnotationDrawingStarted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingCompleted​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#annotationdrawingcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#description-1","content":" The AnnotationDrawingCompleted event is triggered when a user completes the drawing of an annotation on a Dashboard or Record Level Maptaskr Map. This event provides information about the annotation's shape name, finishing latitude, finishing longitude, polygon representation (if applicable) and text (if applicable).  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#usage-1","content":" To listen for the AnnotationDrawingCompleted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AnnotationDrawingCompleted&quot;, function(shapeName, finishLat, finishLong, polygon, text) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;finishLat: &quot; + finishLat); console.log(&quot;finishLong: &quot; + finishLong); console.log(&quot;polygon: &quot; + polygon); console.log(&quot;text: &quot; + text); });   In the example above, we've registered an event listener for the AnnotationDrawingCompleted event. When the event occurs, the provided call-back function is executed, logging the annotation's shape name, finishing latitude, finishing longitude, the polygon representation (if available) and text (if available) to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#parameters-1","content":" shapeName (string): The type or category of the completed annotation.finishLat (number): The latitude coordinate where the annotation drawing was completed.finishLong (number): The longitude coordinate where the annotation drawing was completed.Polygon (string): A polygon representation of the completed annotation area, if applicable.Text (string): The text content of the completed annotation if it was a text annotation. If the annotation wasn`t a text annotation, this will return as undefined.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#response-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;10833324.643667039,-5422575.956473999,12041155.960114244,-3916179.5955117554&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;10962250.458343988,-4377598.300671361,10833324.643667039,-5422575.956473999,11864731.16108263,-5388648.110506381,12041155.960114244,-4771161.313895731,11844374.453502059,-3916179.5955117554&quot;, &quot;type&quot;: &quot;LineString&quot; }, &quot;shapeSize&quot;: &quot;Length: 2735.42 km&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Length: 2735.42 km&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#removing-event-listeners-1","content":" To remove the event listener for the AnnotationDrawingCompleted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AnnotationDrawingCompleted&quot;);   In the example above, the event listener for AnnotationDrawingCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingCancelled​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#annotationdrawingcancelled","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#description-2","content":" The AnnotationDrawingCancelled event is triggered when a user cancels the drawing of an annotation on a Dashboard or Record Level Maptaskr Map. This event provides information about the annotation's shape name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#usage-2","content":" To listen for the AnnotationDrawingCancelled event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AnnotationDrawingCancelled&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the AnnotationDrawingCancelled event. When the event occurs, the provided call-back function is executed, logging the name of the cancelled annotation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#parameters-2","content":" shapeName (string): The type or category of the cancelled annotation.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#removing-event-listeners-2","content":" To remove the event listener for the AnnotationDrawingCancelled event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AnnotationDrawingCancelled&quot;);   In the example above, the event listener for AnnotationDrawingCancelled is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingModified​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#annotationdrawingmodified","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#description-3","content":" The AnnotationDrawingModified event is triggered when a previously drawn annotation is modified within a Dashboard or Record Level Maptaskr Map. This event provides information about the modified annotation's name and its updated polygon geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#usage-3","content":" To listen for the AnnotationDrawingModified event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AnnotationDrawingModified&quot;, function(shapeName, polygon, oldText, newText) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;polygon: &quot; + polygon); console.log(&quot;oldText: &quot; + oldText); console.log(&quot;newText: &quot; + newText); });   In the example above, we've registered an event listener for the AnnotationDrawingModified event. When the event occurs, the provided call-back function is executed, logging the name of the modified annotation and its updated polygon geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#parameters-3","content":" shapeName (string): The type or category of the modified annotation.polygon (string): The updated polygon geometry of the modified annotation.oldText (string): The old text value of the modified annotation if it was a text annotation. If the annotation wasnt an annotation text or the text wasnt modified, this will return as undefined.newText (string): The new text value of the modified annotation if it was a text annotation. If the annotation wasnt an annotation text or the text wasnt modified, this will return as undefined.  ","version":"Next","tagName":"h3"},{"title":"Reponse Example​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#reponse-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;10833324.643667039,-5565072.909537995,13167560.446239164,-4377598.300671361&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;10962250.458343988,-4377598.300671361,10833324.643667039,-5422575.956473999,11864731.16108263,-5388648.110506381,12041155.960114244,-4771161.313895731,13167560.446239164,-5565072.909537995&quot;, &quot;type&quot;: &quot;LineString&quot; }, &quot;shapeSize&quot;: &quot;Length: 3050.95 km&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Length: 3050.95 km&quot;, &quot;OldGeometry&quot;: [ [ 10962250.458343988, -4377598.300671361 ], [ 10833324.643667039, -5422575.956473999 ], [ 11864731.16108263, -5388648.110506381 ], [ 12041155.960114244, -4771161.313895731 ], [ 11844374.453502059, -3916179.5955117554 ] ], &quot;ExclusionIntersecting&quot;: false } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#removing-event-listeners-3","content":" To remove the event listener for the AnnotationDrawingModified event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AnnotationDrawingModified&quot;);   In the example above, the event listener for AnnotationDrawingModified is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingDeleted​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#annotationdrawingdeleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#description-4","content":" The AnnotationDrawingDeleted event is triggered when a user deletes a previously drawn annotation on a Dashboard or Record Level Maptaskr Map. This event provides information about the deleted annotation's shape name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#usage-4","content":" To listen for the AnnotationDrawingDeleted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AnnotationDrawingDeleted&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the AnnotationDrawingDeleted event. When the event occurs, the provided call-back function is executed, logging the name of the deleted annotation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#parameters-4","content":" shapeName (string): The type or category of the deleted annotation.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/dynamics-365/registerable-events/annotation-drawing-events#removing-event-listeners-4","content":" To remove the event listener for the AnnotationDrawingDeleted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AnnotationDrawingDeleted&quot;);   In the example above, the event listener for AnnotationDrawingDeleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"General Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/general-events","content":"","keywords":"","version":"Next"},{"title":"ErrorOccured​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#erroroccured","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#description","content":" The ErrorOccured event is triggered when an error occurs on a Dashboard or Record Level Maptaskr Map. This event provides information about the error message and error details.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#usage","content":" To listen for the ErrorOccured event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ErrorOccured&quot;, function(errMessage, errDetails) { console.log(&quot;errMessage: &quot; + errMessage); console.log(&quot;errDetails: &quot; + errDetails); });   In the example above, we've registered an event listener for the ErrorOccured event. When the event occurs, the provided call-back function is executed, logging the error message and error details to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#parameters","content":" errMessage (string): The error message.errDetails (object): Additional details about the error (may be undefined).  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#removing-event-listeners","content":" To remove the event listener for the ErrorOccured event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ErrorOccured&quot;);   In the example above, the event listener for ErrorOccured is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"WarningOccured​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#warningoccured","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#description-1","content":" The WarningOccured event is triggered when a warning message is generated on a Dashboard or Record Level Maptaskr Map. This event provides information about the warning message and warning details.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#usage-1","content":" To listen for the WarningOccured event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;WarningOccured&quot;, function(warningMessage, warningDetails) { console.log(&quot;warningMessage: &quot; + warningMessage); console.log(&quot;warningDetails: &quot; + warningDetails); });   In the example above, we've registered an event listener for the WarningOccured event. The provided call-back function is executed when the event occurs, logging the warning message and warning details to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#parameters-1","content":" warningMessage (string): The warning message.warningDetails (object): Additional details about the warning (may be undefined).  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"General Events","url":"/docs/dynamics-365/registerable-events/general-events#removing-event-listeners-1","content":" To remove the event listener for the WarningOccured event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;WarningOccured&quot;);   In the example above, the event listener for WarningOccured is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Data Accessor Functions","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/data-accessor-functions","content":"","keywords":"","version":"Next"},{"title":"List of Available Functions​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#list-of-available-functions","content":" ","version":"Next","tagName":"h2"},{"title":"Get Drawn Shapes​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-drawn-shapes","content":" Description​  The getDrawnShapes function allows you to retrieve a collection of shapes currently displayed on the map in Record Level ONLY.  Usage​  var drawnShapes = window.top['maptaskrCORE'][controlId].getDrawnShapes(); console.log('drawnShapes', drawnShapes);   Returns​  The array of shapes currently displayed on the map.  ","version":"Next","tagName":"h3"},{"title":"Get Uploaded Shapes​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-uploaded-shapes","content":" Description​  The getUploadedShapes function retrieves polygon areas from a specified file within the map in Record Level ONLY.  Usage​  var uploadedShapes = window.top['maptaskrCORE'][controlId].getUploadedShapes(); console.log('uploadedShapes', uploadedShapes);   Returns​  The polygon areas from all uploaded files.  ","version":"Next","tagName":"h3"},{"title":"Get Shape Count​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-shape-count","content":" Description​  The getShapeCount function returns the count of polygon areas within the map in Record Level ONLY.  Usage​  var shapeCount = window.top['maptaskrCORE'][controlId].getShapeCount(); console.log('shapeCount', shapeCount)   Returns​  The count of drawn and uploaded shapes within the map.  ","version":"Next","tagName":"h3"},{"title":"Get Annotation​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-annotation","content":" Description​  The getAnnotation function retrieves annotations from the map in Record Level ONLY.  Usage​  var annotations = window.top['maptaskrCORE'][controlId].getAnnotation(); console.log('annotations;, annotations);   Returns​  Annotations from the map application.  ","version":"Next","tagName":"h3"},{"title":"Get Lambpet Ids​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-lambpet-ids","content":" Description​  The getLambpetIds function retrieves the IDs of Lambpets within the map in Record Level ONLY.  Usage​  var lambpetIds = window.top['maptaskrCORE'][controlId].getLambpetIds(); console.log('annotations', annotations);   Returns​  The IDs of Lambpets within the map application.  ","version":"Next","tagName":"h3"},{"title":"Get Uploaded Files​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-uploaded-files","content":" Description​  The getUploadedFiles function retrieves a list of uploaded files within the map in Record Level ONLY.  Usage​  var uploadedFiles = window.top['maptaskrCORE'][controlId].getUploadedFiles(); console.log('uploadedFiles', uploadedFiles);   Returns​  A list of uploaded files within the map application.  ","version":"Next","tagName":"h3"},{"title":"Get Shape Intersections​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-shape-intersections","content":" Description​  The getShapesIntersections function allows you to check for intersections between shapes asynchronously in Record Level ONLY.  Usage​  var shapeIntersections = await window.top['maptaskrCORE'][controlId].getShapeIntersections(); console.log('shapeIntersections', shapeIntersections);   Returns​  A result indicating whether there are intersections between shapes.  ","version":"Next","tagName":"h3"},{"title":"Get Lat Long From Coordinate​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#get-lat-long-from-coordinate","content":" Description​  The getLatLongFromCoordinate function allows you to convert a X, Y coordinate point from the return values to a Long, Lat coordinate for use elsewhere.  Usage​  window.top['maptaskrCORE'][controlId].getLatLongFromCoordinate(coordinateX, coordinateY);   coordinateX (number): The Longitude of the coordinate (in EPSG 3857).coordinateY (number): The Latitude of the coordinate (in EPSG 3857).  Returns​  Function will return an object with Latitude and Longitude in WGS84 (EPSG 4326).  ","version":"Next","tagName":"h3"},{"title":"Navigate To Lat Long​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#navigate-to-lat-long","content":" Description​  The navigateToLatLong function allows you to programmatically position the map over a latitude and longitude with an optional Zoom level to set the zoom.  Usage​  window.top['maptaskrCORE'][controlId].navigateToLatLong(latitude, longitude, zoom);   latitude (number): The Latitude of the coordinate (in WGS84).longitude (number): The Longitude of the coordinate (in WGS84).zoom (number): (Optional) The zoom level to zoom to, Leave empty to retain current zoom.  Returns​  Function does not return any data. It will position the map over a given latitude and longitude coordinate.  ","version":"Next","tagName":"h3"},{"title":"Navigate To Extent​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#navigate-to-extent","content":" Description​  The navigateToExtent function allows you to programmatically position the map over a given extent with the optimal zoom to display the provided extent.  Usage​  window.top['maptaskrCORE'][controlId].navigateToExtent(minLatitude, minLongitude, maxLatitude, maxLonitude);   minLatitude (number): The Minimum Latitude of the extent (in WGS84).minLongitude (number): The Minimum Longitude of the extent (in WGS84).maxLatitude (number): The Maximum Latitude of the extent (in WGS84).maxLonitude (number): The Maximum Longitude of the extent (in WGS84).  Returns​  Function does not return any data. It will position a map over a given extent.  ","version":"Next","tagName":"h3"},{"title":"Download Map​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#download-map","content":" Description​  The downloadMap function allows you to invoke the download map functionality which renders out the elements of the map in the format configured.  Usage​  window.top['maptaskrCORE'][controlId].downloadMap();   Use this function in conjunction with the MapDownloaded event to capture the Base64 image and process it within your implementation.  Returns​  Returns a base64 image for you to process.  ","version":"Next","tagName":"h3"},{"title":"Show Warning Message​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#show-warning-message","content":" Description​  The showWarningMessage function displays a warning message within the map application for a specified duration.  Usage​  window.top['maptaskrCORE'][controlId].showWarningMessage(msg, timeout);   msg (string): The warning message to be displayed.timeout (number): The duration of the warning message to be displayed for.  Returns​  This function does not return any data. It renders a warning message element on the Maptaskr control.  ","version":"Next","tagName":"h3"},{"title":"Handle Loading Spinner​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#handle-loading-spinner","content":" Description​  The handleLoadingSpinner function toggles the display of a loading spinner within the map application and sets a loading message.  Usage​  window.top['maptaskrCORE'][controlId].handleLoadingSpinner(show, message);   Returns​  This function does not return any data. It renders a loading spinner element on top of the Maptaskr control, disabling any interaction until the spinner is removed.  ","version":"Next","tagName":"h3"},{"title":"Update Loading Spinner Message​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#update-loading-spinner-message","content":" Description​  The updateLoadingSpinnerMessage function updates the message displayed alongside the loading spinner within the map application.  Usage​  window.top['maptaskrCORE'][controlId].updateLoadingSpinnerMessage(message);   message (string): The new message to be displayed alongside the loading spinner.  Returns​  This function does not return any data. It renders the given text on the loading spinner element.  ","version":"Next","tagName":"h3"},{"title":"On Event​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#on-event","content":" Description​  The on function allows you to register event listeners for specific events within the map application.  Usage​  window.top['maptaskrCORE'][controlId].on(eventName, functionCallback)   eventName (string): The name of the event to listen for.functionCallback (function): The call-back function to be executed when the event is triggered.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Off Event​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#off-event","content":" Description​  The off function removes previously registered event listeners for specific events within the map application.  Usage​  window.top['maptaskrCORE'][controlId].off(eventName);   Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Fire Event​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#fire-event","content":" Description​  The fire function manually triggers a specified event within the map application, optionally passing additional data. For details on what parameters are required for specific events, please refer to the previous sections of this document.  Usage​  window.top['maptaskrCORE'][controlId].fire(eventName, param, param2, ...param5);   eventName (string): The name of the event to trigger.  param (unknown): The parameter that is required for the specified event  Returns​  This function does not inherently return any data, however the function that is manually triggered may return data. Please refer to the documentation for the given event.  ","version":"Next","tagName":"h3"},{"title":"Add Highlight​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#add-highlight","content":" Description​  The addHighlight function will generate a new polygon with your given colours to indicate a highlighted area based on a provided GeoJSON object.  Usage​  window.top['maptaskrCORE'][controlId].addHighlight(geoJSON, strokeColour, fillColour);   geoJSON (string): GeoJSON data (in EPSG: 3857 spatial reference) to pass to the function to render as a highlightstrokeColour (string): stroke colour for the given shape in hex format.fillColour (string): fill colour for the given shape in hex format.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Clear Highlights​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#clear-highlights","content":" Description​  The clearHighlights function will find all shapes generated via the addHighlight function and remove them from the map.  Usage​  window.top['maptaskrCORE'][controlId].clearHighlights();   Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Save Shapes​","type":1,"pageTitle":"Data Accessor Functions","url":"/docs/dynamics-365/registerable-events/data-accessor-functions#save-shapes","content":" Description​  The saveShapes function will save any changes made on the Maptaskr map to the dataverse tables.  Usage​  window.top['maptaskrCORE'][controlId].saveShapes()   NOTE: If you run this function yourself, you should ensure that all shapes are valid prior to saving (which can be completed by running getShapeIntersections()) and you would ideally make the Maptaskr control read only (see section window.top.maptaskrReady(pageContext, controlId)  Returns​ ","version":"Next","tagName":"h3"},{"title":"Global Function","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/global-function","content":"","keywords":"","version":"Next"},{"title":"Maptaskr Core Loaded​","type":1,"pageTitle":"Global Function","url":"/docs/dynamics-365/registerable-events/global-function#maptaskr-core-loaded","content":" ","version":"Next","tagName":"h2"},{"title":"window.top.maptaskrReady(pageContext, controlId)​","type":1,"pageTitle":"Global Function","url":"/docs/dynamics-365/registerable-events/global-function#windowtopmaptaskrreadypagecontext-controlid","content":" Description​  To allow you to get access to, and register events with the maptaskrCORE top window variable, we have added code to execute the window.top.maptaskrReady function to let you know the map has loaded, and is ready to have events registered.  This function will pass the pageContext (provided by D365) and a unique Control ID. This ID is the GUID of the maptaskr Instance, and can be used to reference future functions.  Usage​  You will find this function pre-defined in the Custom.js file in web resources. If you wish to alter this function, please make a new Solution Layer, and upload your own Custom.js file (you can clone the existing file to extend the functionality)  /* extract from custom.js */ if (window &amp;&amp; window.top) window.top.maptaskrReady = function(pageContext, controlId) { console.log(&quot;Maptaskr Map ID: &quot; + controlId + &quot; has Loaded&quot;); let maptaskrControl = window &amp;&amp; window.top &amp;&amp; window.top.maptaskrCORE &amp;&amp; window.top.maptaskrCORE[controlId]; if (maptaskrControl) { /* Use the following console logs to uniquely identify your map */ // console.log(pageContext); // console.log(maptaskrControl.registeredLocation); // console.log(maptaskrControl.webresourceLocation); /* register the correct client validation function here */ maptaskrControl.clientValidationFunction = clientValidationFunction; /* put your setup methods here */ /* e.g. maptaskrControl.disableSaving = true; */ /* this will disable the inbuilt save methods, */ /* you an use maptaskrControl.saveShapes() to save your own shapes.*/ /* put your event registrations here. */ /* e.g. maptaskrControl.on(&quot;FeaturesSelected&quot;, ...) */ } };   Once the map control is loaded, and the object available, you can register your events, or call the Data Accessor functions.  This function also provides examples of how to use the data accessor properties from the map control to uniquely identify the form your map is loaded on. This allows you to dynamically assign the client validation function (if required) and register to select events per map.  This function also provides you with access to some special accessor variables for changing the read only state of the map, providing a custom validation function for shapes on that map control, and properties to help you uniquely identify the map control should there be multiple controls on a single page.  Property\tDescriptionmaptaskrControl.registeredLocation\tThis variable will have the URL of the current page. This is useful for identifying which entity form you are loading the map on. maptaskrControl.webresourceLocation\tThis variable will have the URL of the WebResource loaded within the form. This is useful if you have any custom parameters on the web resource to identify this map. maptaskrControl.clientValidationFunction\tThis function is registered to allow you to customise the saving logic and validate the submitted shapes against custom business logic prior to saving to the Dataverse tables. maptaskrControl.disableSaving\tThis is a Boolean value you can set to disable saving for this map control. It will not affect the UI in any way, however saving and the saving notifications will be disabled. ","version":"Next","tagName":"h3"},{"title":"Registerable Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/introduction","content":"Registerable Events In an era of dynamic interactivity and user-driven experiences, Maptaskr for D365 takes a significant step forward with its range of Event Registration and Functions. This feature empowers D365 developers to integrate event registration and call on functions directly from the D365 applications. Registerable Events: D365 developers can integrate event registration directly into their D365 pages, allowing for the programmatic detection of select user driven actions or outcomes as they happen. Data Accessor Functions: D365 developers can call select functions that provide direct access to specific map data, enabling developers to create custom interactions, analyse data, and trigger actions-based business rules and requirements. These features not only allow for the enhancing of user experience, but also opens exciting opportunities for D365 developers to create dynamic and user-centric mapping applications. It's a powerful tool for organisations looking to foster user engagement, facilitate event coordination, and programmatically detect and respond to events as they unfold on the map. This document provides a comprehensive list of registerable events and extensible functions.","keywords":"","version":"Next"},{"title":"Layer List Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/layer-list-events","content":"","keywords":"","version":"Next"},{"title":"LayerSearchCompleted​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#layersearchcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#description","content":" The LayerSearchCompleted event is triggered when a user completes a search for layers on a Dashboard or Record Level Maptaskr Map. This event provides information about the search polygon, search term, and the resulting layers in JSON format.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#usage","content":" To listen for the LayerSearchCompleted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;LayerSearchCompleted&quot;, function(searchPolygon, searchTerm, resultingLayersJson) { console.log(&quot;searchPolygon: &quot; + searchPolygon); console.log(&quot;searchTerm: &quot; + searchTerm); console.log(&quot;resultingLayersJson: &quot; + resultingLayersJson); });   In the example above, we've registered an event listener for the LayerSearchCompleted event. When the event occurs, the provided call-back function is executed, logging the search polygon, search term, and the resulting layers in JSON format to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#parameters","content":" searchPolygon (string): The search polygon or area used for layer searching.searchTerm (string): The search term or criteria used for layer searching.resultingLayersJson (string): The resulting layers in JSON format that match the search criteria.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#response-example","content":" The resultingLayersJson returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;layers&quot;: [], &quot;groups&quot;: [], &quot;isFiltered&quot;: true, &quot;LayerId&quot;: &quot;acb612f0-bea7-eb11-9442-000d3acb7dc6-2&quot;, &quot;LayerName&quot;: &quot;MapServer RoadAssets_DataPortal&quot;, &quot;LayerHiddenName&quot;: &quot;https://mrgis.mainroads.wa.gov.au/arcgis/rest/services/OpenData/RoadAssets_DataPortal/MapServer&quot;, &quot;IsCorporate&quot;: true, &quot;layerGroupId&quot;: &quot;819aafa8-2a8e-ec11-8d20-002248159630&quot;, &quot;SecurityGroupId&quot;: [ &quot;all&quot; ], &quot;LayerType&quot;: 5, &quot;LayerUrl&quot;: &quot;https://mrgis.mainroads.wa.gov.au/arcgis/rest/services/OpenData/RoadAssets_DataPortal/MapServer&quot;, &quot;isService&quot;: true, &quot;IsVisible&quot;: true, &quot;IsSelected&quot;: false, &quot;sharedUserIds&quot;: [], &quot;hasAuthentication&quot;: false, &quot;layerUserName&quot;: &quot;&quot;, &quot;layerPassword&quot;: &quot;&quot;, &quot;metadataStyle&quot;: &quot;Table&quot;, &quot;arcGisAuthApplication&quot;: &quot;&quot;, &quot;securityLayerKey&quot;: &quot;&quot;, &quot;securityLayerValue&quot;: &quot;&quot;, &quot;securityLayerType&quot;: 0, &quot;arcGisLayerToken&quot;: &quot;&quot;, &quot;isForPortal&quot;: true, &quot;LayerUniqueIdentifier&quot;: &quot;acb612f0-bea7-eb11-9442-000d3acb7dc6-2&quot;, &quot;IsCollapsed&quot;: true, &quot;IsLayerFunctionality&quot;: false, &quot;filteredSubLayersId&quot;: [ 0, 6, 27 ] } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#removing-event-listeners","content":" To remove the event listener for the LayerSearchCompleted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;LayerSearchCompleted&quot;);   In the example above, the event listener for LayerSearchCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LayerSelected​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#layerselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#description-1","content":" The LayerSelected event is triggered when a user selects a layer or layer group on a Dashboard or Record Level Maptaskr Map. This event provides information about the selected layer group ID and layer ID.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#usage-1","content":" To listen for the LayerSelected event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;LayerSelected&quot;, function(layerGroupID, layerID, checked) { console.log(&quot;layerGroupID: &quot; + layerGroupID); console.log(&quot;layerID: &quot; + layerID); console.log(&quot;checked: &quot; + checked); });   In the example above, we've registered an event listener for the LayerSelected event. The provided call-back function is executed when the event occurs, logging the layer group ID and layer ID to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#parameters-1","content":" layerGroupID (string): The ID of the selected layer group.layerID (string): The ID of the selected layer within the group.checked (boolean): If the layer is checked or unchecked.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#removing-event-listeners-1","content":" To remove the event listener for the LayerSelected event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;LayerSelected&quot;);   In the example above, the event listener for LayerSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LayerFilterApplied​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#layerfilterapplied","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#description-2","content":" The LayerFilterApplied event is triggered when a user applies a filter to a layer on a Dashboard or Record Level Maptaskr Map. This event provides information about the filter parameters.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#usage-2","content":" To listen for the LayerFilterApplied event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;LayerFilterApplied&quot;, function(filterparams) { console.log(&quot;filterparams: &quot; + filterparams); });   In the example above, we've registered an event listener for the LayerFilterApplied event. The provided call-back function is executed when the event occurs, logging the filter parameters to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#parameters-2","content":" filterparams (string): The filter parameters applied to the layer.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#response-example-1","content":" The filterparams returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;LayerName&quot;: &quot;Bike Count Sites&quot;, &quot;LayerUniqueIdentifier&quot;: &quot;acb612f0-bea7-eb11-9442-000d3acb7dc6-2_670badf1-7131-4068-9437-a9f254cf2607&quot;, &quot;expressionItems&quot;: [ { &quot;operators&quot;: [ { &quot;name&quot;: &quot;Equals&quot;, &quot;value&quot;: &quot;eq&quot;, &quot;fetchOp&quot;: &quot;eq&quot;, &quot;fetchVal&quot;: &quot;&quot;, &quot;types&quot;: [ 6, 1, 3, 7 ], &quot;isCommon&quot;: false }, { &quot;name&quot;: &quot;Does Not Equal&quot;, &quot;value&quot;: &quot;ne&quot;, &quot;fetchOp&quot;: &quot;ne&quot;, &quot;fetchVal&quot;: &quot;&quot;, &quot;types&quot;: [ 6, 1, 3, 7 ], &quot;isCommon&quot;: false } ], &quot;fields&quot;: [ { &quot;displayName&quot;: &quot;OBJECTID&quot;, &quot;internalName&quot;: &quot;OBJECTID&quot;, &quot;fieldTypeName&quot;: &quot;decimal&quot;, &quot;fieldType&quot;: 6 }, ... ], &quot;valueList&quot;: [], &quot;dataType&quot;: 6, &quot;displayName&quot;: &quot;OBJECTID&quot;, &quot;operator&quot;: &quot;eq&quot;, &quot;value&quot;: &quot;1&quot;, &quot;fieldInfo&quot;: &quot;{\\&quot;displayName\\&quot;:\\&quot;OBJECTID\\&quot;,\\&quot;internalName\\&quot;:\\&quot;OBJECTID\\&quot;,\\&quot;fieldTypeName\\&quot;:\\&quot;decimal\\&quot;,\\&quot;fieldType\\&quot;:6}&quot; } ], &quot;FilterLayerOperator&quot;: &quot;Match All&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#removing-event-listeners-2","content":" To remove the event listener for the LayerFilterApplied event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;LayerFilterApplied&quot;);   In the example above, the event listener for LayerFilterApplied is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LayerAttributeRequested​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#layerattributerequested","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#description-3","content":" The LayerAttributeRequested event is triggered when a user requests attributes for a layer on a Dashboard or Record Level Maptaskr Map. This event provides information about the layer group ID, layer ID, and resulting attributes.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#usage-3","content":" To listen for the LayerAttributeRequested event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;LayerAttributeRequested&quot;, function(layerGroupdID, layerID, resultingAttributes) { console.log(&quot;layerGroupdID: &quot; + layerGroupdID); console.log(&quot;layerID: &quot; + layerID); console.log(&quot;resultingAttributes: &quot; + resultingAttributes); });   In the example above, we've registered an event listener for the LayerAttributeRequested event. When the event occurs, the provided call-back function is executed, logging the layer group ID, layer ID, and resulting attributes to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#parameters-3","content":" layerGroupdID (string): The ID of the layer group for which attributes were requested.layerID (string): The ID of the layer for which attributes were requested.resultingAttributes (string): The resulting attributes for the requested layer.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#response-example-2","content":" The resultingAttributes returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;OBJECTID&quot;: 88315, &quot;SITE_NO&quot;: &quot;6737&quot;, &quot;ROAD_NAME&quot;: &quot;Kwinana Fwy PSP&quot;, &quot;LOCATION_DESC&quot;: &quot;North Abutment of Narrows Bridge&quot;, &quot;DATE_COMMISSIONED&quot;: &quot;2008-11-01 09:00:00&quot;, &quot;TRAFFIC_YEAR&quot;: &quot;2023/24&quot;, &quot;PRIMARY_DIRECTION&quot;: &quot;To Perth&quot;, &quot;PRIMARY_DIRECTION_MON_SUN&quot;: 234, &quot;PRIMARY_DIRECTION_MON_FRI&quot;: 207, &quot;SECONDARY_DIRECTION&quot;: &quot;To Fremantle&quot;, &quot;SECONDARY_DIRECTION_MON_SUN&quot;: 257, &quot;SECONDARY_DIRECTION_MON_FRI&quot;: 213, &quot;COMBINED_DIRECTION_MON_SUN&quot;: 491, &quot;COMBINED_DIRECTION_MON_FRI&quot;: 420, &quot;LG_NO&quot;: &quot;124&quot;, &quot;LG_NAME&quot;: &quot;Perth (C)&quot;, &quot;RA_NO&quot;: 7, &quot;RA_NAME&quot;: &quot;Metropolitan&quot;, &quot;PRIMARY_DIRECTION_SAT_SUN&quot;: 300, &quot;SECONDARY_DIRECTION_SAT_SUN&quot;: 368, &quot;COMBINED_DIRECTION_SAT_SUN&quot;: 668, &quot;geom&quot;: { &quot;x&quot;: 115.8481209999099, &quot;y&quot;: -31.96117500052617 }, &quot;projection&quot;: &quot;4326&quot;, &quot;isSelected&quot;: false }, ... ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/dynamics-365/registerable-events/layer-list-events#removing-event-listeners-3","content":" To remove the event listener for the LayerAttributeRequested event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;LayerAttributeRequested&quot;);   In the example above, the event listener for LayerAttributeRequested is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Layer Attribute Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/layer-attribute-events","content":"","keywords":"","version":"Next"},{"title":"FeatureRowClicked​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#featurerowclicked","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description","content":" The FeatureRowClicked event is triggered when a user clicks on a feature row within a layer attribute table on a Dashboard or Record Level Maptaskr Map. This event provides information about the clicked feature's ID and geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage","content":" To listen for the FeatureRowClicked event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;FeatureRowClicked&quot;, function(id, geometry) { console.log(&quot;id: &quot; + id); console.log(&quot;geometry: &quot; + geometry); });   In the example above, we've registered an event listener for the FeatureRowClicked event. The provided call-back function is executed when the event occurs, logging the clicked feature's ID and geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters","content":" id (string): The ID of the clicked feature.geometry (string): The geometry information of the clicked feature.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#response-example","content":" The geometry returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;paths&quot;: [ [ [ 152.951965843402, -27.559003020827 ], [ 152.952433438347, -27.5590516415601 ] ] ] }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners","content":" To remove the event listener for the FeatureRowClicked event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;FeatureRowClicked&quot;);   In the example above, the event listener for FeatureRowClicked is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"FeatureRowsSelected​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#featurerowsselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description-1","content":" The FeatureRowsSelected event is triggered when a user selects one or more feature rows within a layer attribute table on a Dashboard or Record Level Maptaskr Map. This event provides information about the selected feature's ID.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage-1","content":" To listen for the FeatureRowsSelected event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;FeatureRowsSelected&quot;, function(id, checked) { console.log(&quot;id: &quot; + id); console.log(&quot;checked: &quot; + checked); });   In the example above, we've registered an event listener for the FeatureRowsSelected event. When the event occurs, the provided call-back function is executed, logging the ID of the selected feature to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters-1","content":" id (string): The ID of the selected feature.checked (boolean): If the feature is checked or unchecked.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners-1","content":" To remove the event listener for the FeatureRowsSelected event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;FeatureRowsSelected&quot;);   In the example above, the event listener for FeatureRowsSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"SelectedFeaturesHighlightedOnMap​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#selectedfeatureshighlightedonmap","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description-2","content":" The SelectedFeaturesHighlightedOnMap event is triggered when selected features are highlighted on a Dashboard or Record Level Maptaskr Map. This event provides information about the highlighted feature's ID and geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage-2","content":" To listen for the SelectedFeaturesHighlightedOnMap event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;SelectedFeaturesHighlightedOnMap&quot;, function(id, geometry) { console.log(&quot;id: &quot; + id); console.log(&quot;geometry: &quot; + geometry); });   In the example above, we've registered an event listener for the SelectedFeaturesHighlightedOnMap event. The provided call-back function is executed when the event occurs, logging the highlighted feature's ID and geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters-2","content":" id (string): The ID of the highlighted feature.geometry (string): The geometry information of the highlighted feature.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#response-example-1","content":" The geometry returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;extent&quot;: &quot;15248357.277396044,-3988917.2955298205,15352708.613343623,-3864670.5161639843&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;15248891.276102826,-3988614.090329052,15248892.277087683,-3988666.2742443234,15248887.379030092,-3988735.7194938106,15248882.594963657,-3988765.825602797,15248840.18312822,-3988859.223859193,15248773.836711707,-3988912.3446107856,15248747.89659868,-3988916.4934807913,15248728.863637427,-3988917.2955298205,15248693.572687175,-3988913.282809781,15248679.548212448,-3988909.80231469,15248676.32083777,-3988908.7329166974,15248592.3841606,-3988866.8507156074,15248515.016223941,-3988760.7410759795,15248490.639927128,-3988737.9944058843,15248432.753791915,-3988692.501200734,15248360.83961975,-3988658.914864661,15248357.277396044,-3988645.535311624,15248359.724643728,-3988638.175945241,15248375.64422147,-3988605.9289554274,15248387.556297543,-3988595.089214614,15248480.063684946,-3988539.0267035705,15248510.342586443,-3988510.3915596786,15248546.744950488,-3988436.7989730537,15248552.198714979,-3988345.948794903,15248555.650509752,-3988325.3416327126,15248557.096772576,-3988319.18795757,15248565.332633784,-3988309.4203045922,15248596.947369168,-3988307.279145076,15248626.114856865,-3988330.292298937,15248645.151380349,-3988438.672818123,15248648.713604053,-3988457.0028512,15248660.622117903,-3988490.1875876985,15248752.684227342,-3988649.013251296,15248778.175500179,-3988676.3095445973,15248808.789250702,-3988682.5995584377,15248818.585365893,-3988677.3789209705,15248820.811755707,-3988673.6336286957,15248826.710798163,-3988556.0177147784,15248831.277568955,-3988543.841315925,15248852.316062156,-3988522.033242089,15248875.805365272,-3988525.5111443945,15248885.487489304,-3988533.672460912,15248889.829839997,-3988551.871450244,15248891.276102826,-3988614.090329052&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;attributes&quot;: {} }]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners-2","content":" To remove the event listener for the SelectedFeaturesHighlightedOnMap event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;SelectedFeaturesHighlightedOnMap&quot;);   In the example above, the event listener for SelectedFeaturesHighlightedOnMap is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"FeaturesFilteredByPolygon​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#featuresfilteredbypolygon","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description-3","content":" The FeaturesFilteredByPolygon event is triggered when features are filtered by a polygon on a Dashboard or Record Level Maptaskr Map. This event provides information about the filter polygon and the resulting feature.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage-3","content":" To listen for the FeaturesFilteredByPolygon event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;FeaturesFilteredByPolygon&quot;, function(filterPolygon, resultFeature) { console.log(&quot;filterPolygon: &quot; + filterPolygon); console.log(&quot;resultFeature: &quot; + resultFeature); });   In the example above, we've registered an event listener for the FeaturesFilteredByPolygon event. The provided call-back function is executed when the event occurs, logging the filter polygon and the resulting feature to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters-3","content":" filterPolygon (string): The polygon used for filtering features.resultFeature (string): The resulting feature that matches the filter.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#response-example-2","content":" The filterPolygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;16285967.281465383,-4638658.698342794,17017218.747868977,-3812439.5090296417&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;16304960.826047294,-3964387.865684934,16285967.281465383,-4638658.698342794,16903257.48037751,-4610168.381469927,17017218.747868977,-3812439.5090296417,16304960.826047294,-3964387.865684934&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;attributes&quot;: {} }   The resultFeature returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;extent&quot;: &quot;16353033.976041937,-4258126.432256523,16584924.064146778,-4081936.6934020626&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;16584924.064146778,-4194215.8205637066,16353033.976041937,-4258126.432256523,16419414.757793356,-4081936.6934020626,16584924.064146778,-4194215.8205637066&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;attributes&quot;: {} }, { &quot;extent&quot;: &quot;16527052.31547921,-4545464.00191358,16672411.656706253,-4198235.886020177&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;16584867.943882221,-4198235.886020177,16672411.656706253,-4545464.00191358,16527052.31547921,-4478925.5687913485,16584867.943882221,-4198235.886020177&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;attributes&quot;: {} }, { &quot;extent&quot;: &quot;16604577.824962063,-4208878.32517417,16877565.654802185,-4017740.3699756954&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;16604577.824962063,-4193191.11802936,16798639.64578343,-4017740.3699756954,16877565.654802185,-4208878.32517417,16604577.824962063,-4193191.11802936&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;attributes&quot;: {} } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners-3","content":" To remove the event listener for the FeaturesFilteredByPolygon event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;FeaturesFilteredByPolygon&quot;);   ","version":"Next","tagName":"h3"},{"title":"FilterReset​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#filterreset","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description-4","content":" The FilterReset event is triggered when a filter is reset on a Dashboard or Record Level Maptaskr Map.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage-4","content":" To listen for the FilterReset event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;FilterReset&quot;, function() { // Your call-back logic here });   In the example above, we've registered an event listener for the FilterReset event. When the event occurs, the provided call-back function is executed.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters-4","content":" This event does not have any parameters.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners-4","content":" To remove the event listener for the FilterReset event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;FilterReset&quot;);   In the example above, the event listener for FilterReset is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"TableFilter​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#tablefilter","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description-5","content":" The TableFilter event is triggered when the layer attribute table is filtered using a keyword or search term on a Dashboard or Record Level Maptaskr Map. This event provides information about the applied filter keyword.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage-5","content":" To listen for the TableFilter event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;TableFilter&quot;, function(filterParams, filteredResults) { console.log(&quot;filterParams: &quot; + filterParams); console.log(&quot;filteredResults: &quot; + filteredResults); });   In the example above, we've registered an event listener for the TableFilter event. The provided call-back function is executed when the event occurs, logging the applied filter keyword to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters-5","content":" filterParams (string): The information about the filter parameters used.filteredResults (string): The results after applying the filter.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners-5","content":" To remove the event listener for the TableFilter event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;TableFilter&quot;);   In the example above, the event listener for TableFilter is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"SelectedFeaturesExportedToCSV​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#selectedfeaturesexportedtocsv","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#description-6","content":" The SelectedFeaturesExportedToCSV event is triggered selected attributes from the attribute table are exported to CSV on a Dashboard or Record Level Maptaskr Map. This event provides the JSON Objects that are output to the CSV file.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#usage-6","content":" To listen for the SelectedFeaturesExportedToCSV event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;SelectedFeaturesExportedToCSV&quot;, function(csvData) { console.log(&quot;csvObjects: &quot; + csvData); });   In the example above, we've registered an event listener for the TableFilter event. The provided call-back function is executed when the event occurs, logging the applied filter keyword to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#parameters-6","content":" csvData (string): A stringified JSON object containing the data to be exported.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/dynamics-365/registerable-events/layer-attribute-events#removing-event-listeners-6","content":" To remove the event listener for the SelectedFeaturesExportedToCSV event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;SelectedFeaturesExportedToCSV&quot;);   In the example above, the event listener for SelectedFeaturesExportedToCSV is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Map Interaction Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/map-interaction-events","content":"","keywords":"","version":"Next"},{"title":"FeaturesSelected​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#featuresselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#description","content":" The FeaturesSelected event is triggered when one or more features are selected on a Dashboard or Record Level Maptaskr Map. This event provides information about the selected features in an array.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#usage","content":" To listen for the FeaturesSelected event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;FeaturesSelected&quot;, function(featureArray) { console.log(&quot;featureArray: &quot; + featureArray); });   In the example above, we've registered an event listener for the FeaturesSelected event. The provided call-back function is executed when the event occurs, logging the selected features in an array to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#parameters","content":" featureArray (array): An array containing information about the selected features.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#response-example","content":" The featureArray returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;extent&quot;: &quot;16604577.824962063,-4208878.32517417,16877565.654802185,-4017740.3699756954&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;16604577.824962063,-4193191.11802936,16798639.64578343,-4017740.3699756954,16877565.654802185,-4208878.32517417,16604577.824962063,-4193191.11802936&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;attributes&quot;: { &quot;FID&quot;: 433, &quot;ST_PLY_PID&quot;: null, &quot;DT_CREATE&quot;: null, &quot;DT_RETIRE&quot;: null, &quot;STATE_PID&quot;: null, &quot;STATE_NAME&quot;: null, &quot;ST_ABBREV&quot;: null, &quot;Shape__Area&quot;: 25470103468.5586, &quot;Shape__Length&quot;: 741846.481025205, &quot;LayerName&quot;: &quot;new_gis_sa_test&quot; } } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#removing-event-listeners","content":" To remove the event listener for the FeaturesSelected event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;FeaturesSelected&quot;);   In the example above, the event listener for FeaturesSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"OnMapClicked​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#onmapclicked","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#description-1","content":" The OnMapClicked event is triggered when a user clicks on the Dashboard or Record Level Maptaskr Map. This event provides information about the clicked coordinates on the map.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#usage-1","content":" To listen for the OnMapClicked event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;OnMapClicked&quot;, function(coordinates) { console.log(&quot;coordinates: &quot; + coordinates); });   In the example above, we've registered an event listener for the OnMapClicked event. The provided call-back function is executed when the event occurs, logging the clicked coordinates on the map to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#parameters-1","content":" coordinates (object): An object containing information about the clicked coordinates on the map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#removing-event-listeners-1","content":" To remove the event listener for the OnMapClicked event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;OnMapClicked&quot;);   In the example above, the event listener for OnMapClicked is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ZoomChanged​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#zoomchanged","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#description-2","content":" The ZoomChanged event is triggered when the zoom level of the Dashboard or Record Level Maptaskr Map is changed. This event provides information about the previous and new zoom levels.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#usage-2","content":" To listen for the ZoomChanged event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ZoomChanged&quot;, function(previousZoom, newZoom) { console.log(&quot;previousZoom: &quot; + previousZoom); console.log(&quot;newZoom: &quot; + newZoom); });   In the example above, we've registered an event listener for the ZoomChanged event. The provided call-back function is executed when the event occurs, logging the previous and new zoom levels to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameter​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#parameter","content":" previousZoom (number): The previous zoom level.newZoom (number): The new zoom level.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#removing-event-listeners-2","content":" To remove the event listener for the ZoomChanged event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ZoomChanged&quot;);   In the example above, the event listener for ZoomChanged is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ExtentChanged​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#extentchanged","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#description-3","content":" The ExtentChanged event is triggered when the extent (viewable area) of the Dashboard or Record Level Maptaskr Map is changed. This event provides information about the previous and new extents.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#usage-3","content":" To listen for the ExtentChanged event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ExtentChanged&quot;, function(previousExtent, newExtent) { console.log(&quot;previousExtent: &quot; + previousExtent); console.log(&quot;newExtent: &quot; + newExtent); });   In the example above, we've registered an event listener for the ExtentChanged event. The provided call-back function is executed when the event occurs, logging the previous and new extents to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#parameters-2","content":" previousExtent (string): An object representing the previous extent.newExtent (string): An object representing the new extent.  ","version":"Next","tagName":"h3"},{"title":"Response​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#response","content":" The previousExtent returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [16829447.323061984,-4008072.879304091,16835786.819095384,-4003663.41823489]   The newExtent returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [17020622.764176447,-3197224.0595355905,17032536.673651483,-3188937.293563126]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#removing-event-listeners-3","content":" To remove the event listener for the ExtentChanged event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ExtentChanged&quot;);   In the example above, the event listener for ExtentChanged is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MapDownloaded​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#mapdownloaded","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#description-4","content":" The MapDownloaded event is triggered when a Dashboard or Record Level Maptaskr Map is downloaded or exported. This event provides the base64 encoded file rendered. This event also provides the filetype of the Base64 file either in PDF or PNG format (based on configured properties)  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#usage-4","content":" To listen for the MapDownloaded event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;MapDownloaded&quot;, function(filetype, base64File) { console.log(&quot;filetype: &quot; + filetype); console.log(&quot;base64File: &quot; + base64File); });   In the example above, we've registered an event listener for the MapDownloaded event. When the event occurs, the provided call-back function is executed, logging information file type and the base64 file itself to the console.  important Registering this event will prevent the standard file download and will require you to handler the process after the base64 file is generated. This is to prevent duplicate downloads should you wish to modify the image / pdf before presenting it to the user.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#parameters-3","content":" filetype (string): The file type of the downloaded map (e.g., &quot;PDF&quot;, &quot;PNG&quot;).base64File (string): The base64-encoded content of the downloaded map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#removing-event-listeners-4","content":" To remove the event listener for the MapDownloaded event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;MapDownloaded&quot;);   In the example above, the event listener for MapDownloaded is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeIntersectionsDetected​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#shapeintersectionsdetected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#description-5","content":" The ShapeIntersectionsDetected event is triggered when intersections are detected between shapes within the Dashboard or Record Level Maptaskr Map. This event provides information about the shapes that intersect.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#usage-5","content":" To listen for the ShapeIntersectionsDetected event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a callback function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeIntersectionsDetected&quot;, function(intersectedShapes) { console.log(&quot;intersectedShapes: &quot; + intersectedShapes); });   In the example above, we have registered an event listener for the ShapeIntersectionsDetected event. The provided callback function is executed when the event occurs and logs the intersected shapes to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#parameters-4","content":" intersectedShapes (string): Information about the shapes that intersect.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/dynamics-365/registerable-events/map-interaction-events#removing-event-listeners-5","content":" To remove the event listener for the ShapeIntersectionsDetected event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeIntersectionsDetected&quot;);   In the example above, the event listener for ShapeIntersectionsDetected is removed, ensuring that the associated callback function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Measurement Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events","content":"","keywords":"","version":"Next"},{"title":"MeasurementStarted​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#measurementstarted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#description","content":" The MeasurementStarted event is triggered when a user initiates a measurement on a Dashboard or Record Level Maptaskr Map. This event provides information about the measurement type and the starting latitude and longitude coordinates.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#usage","content":" To listen for the MeasurementStarted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;MeasurementStarted&quot;, function(measurementType, startLat, startLng) { console.log(&quot;measurementType: &quot; + measurementType); console.log(&quot;startLat: &quot; + startLat); console.log(&quot;startLng: &quot; + startLng); });   In the example above, we've registered an event listener for the MeasurementStarted event. When the event occurs, the provided call-back function is executed, logging the measurement type, starting latitude, and starting longitude to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#parameters","content":" measurementType (string): The type or category of the measurement being initiated.startLat (number): The latitude coordinate where the measurement started.startLng (number): The longitude coordinate where the measurement started.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#removing-event-listeners","content":" To remove the event listener for the MeasurementStarted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;MeasurementStarted&quot;);   In the example above, the event listener for MeasurementStarted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MeasurementCompleted​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#measurementcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#description-1","content":" The MeasurementCompleted event is triggered when a user completes a measurement on a Dashboard or Record Level Maptaskr Map. This event provides information about the measurement type, finishing latitude, finishing longitude, a polygon representation (if applicable), and any associated measurement text.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#usage-1","content":" To listen for the MeasurementCompleted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;MeasurementCompleted&quot;, function(measurementType, finishLat, finishLong, polygon, measurementText) { console.log(&quot;measurementType: &quot; + measurementType); console.log(&quot;finishLat: &quot; + finishLat); console.log(&quot;finishLong: &quot; + finishLong); console.log(&quot;polygon: &quot; + polygon); console.log(&quot;measurementText: &quot; + measurementText); });   In the example above, we've registered an event listener for the MeasurementCompleted event. When the event occurs, the provided call-back function is executed, logging the measurement type, finishing latitude, finishing longitude, polygon representation (if available), and measurement text to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#parameters-1","content":" measurementType (string): The type or category of the completed measurement.finishLat (number): The latitude coordinate where the measurement was completed.finishLong (number): The longitude coordinate where the measurement was completed.polygon (string): A polygon representation of the completed measurement area, if applicable.measurementText (string): The size of the shape associated with the measurement.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#response-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;10609400.86028076,-2857630.8013220704,11559380.547374066,-2036576.928905712&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;10616186.429474283,-2321570.835033704,10609400.86028076,-2857630.8013220704,11186174.241730267,-2769418.4018062633,11559380.547374066,-2036576.928905712,10616186.429474283,-2321570.835033704&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;shapeSize&quot;: &quot;Area: 383738727653.13 m²&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Area: 383738727653.13 m²&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#removing-event-listeners-1","content":" To remove the event listener for the MeasurementCompleted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;MeasurementCompleted&quot;);   In the example above, the event listener for MeasurementCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MeasurementCancelled​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#measurementcancelled","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#description-2","content":" The MeasurementCancelled event is triggered when a user cancels a measurement on a Dashboard or Record Level Maptaskr Map. This event provides information about the measurement type that was cancelled.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#usage-2","content":" To listen for the MeasurementCancelled event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;MeasurementCancelled&quot;, function(measurementType) { console.log(&quot;measurementType: &quot; + measurementType); });   In the example above, we've registered an event listener for the MeasurementCancelled event. When the event occurs, the provided call-back function is executed, logging the type of the cancelled measurement to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#parameters-2","content":" measurementType (string): The type or category of the cancelled measurement.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#removing-event-listeners-2","content":" To remove the event listener for the MeasurementCancelled event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;MeasurementCancelled&quot;);   In the example above, the event listener for MeasurementCancelled is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MeasurementsCleared​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#measurementscleared","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#description-3","content":" The MeasurementsCleared event is triggered when a user clears all measurements on a Dashboard or Record Level Maptaskr Map. This event indicates the completion of measurement deletion.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#usage-3","content":" To listen for the MeasurementsCleared event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;MeasurementsCleared&quot;, function() { console.log(&quot;Measurement Deletion Completed&quot;); });   In the example above, we've registered an event listener for the MeasurementsCleared event. When the event occurs, the provided call-back function is executed, indicating the completion of measurement deletion by logging a message to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#parameters-3","content":" None  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/dynamics-365/registerable-events/measurement-drawing-events#removing-event-listeners-3","content":" To remove the event listener for the MeasurementsCleared event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;MeasurementsCleared&quot;);   In the example above, the event listener for MeasurementsCleared is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Search Address Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/search-address-events","content":"","keywords":"","version":"Next"},{"title":"AddressSearched​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#addresssearched","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#description","content":" The AddressSearched event is triggered when a user initiates a search for a specific address on a Dashboard or Record Level Maptaskr Map. This event provides information about the searched text.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#usage","content":" To listen for the AddressSearched event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AddressSearched&quot;, function(text) { console.log(&quot;text: &quot; + text); });   In the example above, we've registered an event listener for the AddressSearched event. When the event occurs, the provided call-back function is executed, logging the searched text to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#parameters","content":" text (string): The text or address that was searched for on the map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#removing-event-listeners","content":" To remove the event listener for the AddressSearched event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AddressSearched&quot;);   In the example above, the event listener for AddressSearched is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AddressesFound​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#addressesfound","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#description-1","content":" The AddressesFound event is triggered when a user's address search, on a Dashboard or Record Level Maptaskr Map, returns one or more results. This event provides information about the search type, searched text, and the search results.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#usage-1","content":" To listen for the AddressesFound event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AddressesFound&quot;, function(type, text, results) { console.log(&quot;text: &quot; + text); console.log(&quot;results: &quot; + JSON.stringify(results)); });   In the example above, we've registered an event listener for the AddressesFound event. When the event occurs, the provided call-back function is executed, logging the search type, searched text, and the search results (in JSON format) to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#parameters-1","content":" type (string): The type or category of the address search (e.g., &quot;Geocoding&quot; or &quot;Reverse Geocoding&quot;).Text (string): The text or address that was searched for on the map.Results (object): The search results, typically in JSON format, providing details about the found addresses.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#response-example","content":" The Results returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  &quot;[{\\&quot;title\\&quot;:\\&quot;115 32, 92246, Lauka, Hiiumaa vald, Hiiu Maakond, EST\\&quot;},{\\&quot;title\\&quot;:\\&quot;115 32, 20139, Ukmergė, Ukmergės rajono savivaldybė, Vilniaus Apskritis, LTU\\&quot;},{\\&quot;title\\&quot;:\\&quot;115 32, 20140, Ukmergė, Ukmergės rajono savivaldybė, Vilniaus Apskritis, LTU\\&quot;},{\\&quot;title\\&quot;:\\&quot;Via 115 32, 73048, Nardò, Lecce, ITA\\&quot;},{\\&quot;title\\&quot;:\\&quot;Strada 115 32, 317235, Pecica, Arad, ROU\\&quot;},{\\&quot;title\\&quot;:\\&quot;Strada Provinciale 115 32, 73048, Nardò, Lecce, ITA\\&quot;}]&quot; &quot;[{\\&quot;title\\&quot;:\\&quot;-32.132166, 115.858761 (Malata Cres, Success, Perth, Western Australia, 6164)\\&quot;,\\&quot;geometry\\&quot;:[12897337.96901374,-3780672.0487148887]}]&quot;   ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#response-example-1","content":" To remove the event listener for the AddressesFound event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AddressesFound&quot;);   In the example above, the event listener for AddressesFound is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AddressSelected​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#addressselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#description-2","content":" The AddressSelected event is triggered when a user selects an address from search results on a Dashboard or Record Level Maptaskr Map. This event provides information about the selected address text and its associated location.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#usage-2","content":" To listen for the AddressSelected event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;AddressSelected&quot;, function(text, location) { console.log(&quot;text: &quot; + text); console.log(&quot;location: &quot; + location); });   In the example above, we've registered an event listener for the AddressSelected event. The provided call-back function is executed when the event occurs, logging the selected address text and its associated location to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#parameters-2","content":" text (string): The text or address that was selected from the search results.location (string): The location information associated with the selected address.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#response-example-2","content":" The location returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  {&quot;x&quot;:2757280.325069334,&quot;y&quot;:7410000.549894081} [12897337.96901374,-3780672.0487148887]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Search Address Events","url":"/docs/dynamics-365/registerable-events/search-address-events#removing-event-listeners-1","content":" To remove the event listener for the AddressSelected event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;AddressSelected&quot;);   In the example above, the event listener for AddressSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Downloads","type":0,"sectionRef":"#","url":"/docs/dynamics-365/releases/downloads","content":"","keywords":"","version":"Next"},{"title":"App Source Release​","type":1,"pageTitle":"Downloads","url":"/docs/dynamics-365/releases/downloads#app-source-release","content":" Dynamics 365 2.2.2.58  Power Apps 2.2.2.58 ","version":"Next","tagName":"h2"},{"title":"Shape Drawing Events","type":0,"sectionRef":"#","url":"/docs/dynamics-365/registerable-events/shape-drawing-events","content":"","keywords":"","version":"Next"},{"title":"ShapeDrawingStarted​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#shapedrawingstarted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#description","content":" The ShapeDrawingStarted event is triggered when a user begins drawing a shape on the Record level map ONLY. This event provides information about the shape being drawn, including its name, and starting latitude and longitude coordinates.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#usage","content":" You can listen for the ShapeDrawingStarted event by using the on method of the window.top['maptaskrCORE'][{controlid}] object. Once you've registered an event listener, it will execute a call-back function whenever the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeDrawingStarted&quot;, function(shapeName, startLat, startLng) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;startLat: &quot; + startLat); console.log(&quot;startLng: &quot; + startLng); });   In the example above, we have registered an event listener for the ShapeDrawingStarted event. When the event occurs, the provided call-back function is executed, logging the shape's name, starting latitude, and starting longitude to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#parameters","content":" shapeName (string): The name or identifier of the shape being drawn.startLat (number): The latitude coordinate where the shape drawing started.startLng (number): The longitude coordinate where the shape drawing started.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#removing-event-listeners","content":" You can remove the event listener for the ShapeDrawingStarted event using the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for the event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeDrawingStarted&quot;);   In the example above, the event listener for ShapeDrawingStarted is removed and will no longer execute the associated call-back function when the event occurs.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingCompleted​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#shapedrawingcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#description-1","content":" The ShapeDrawingCompleted event is triggered when a user finishes drawing a shape on the Record level map ONLY. This event provides information about the completed shape, including its name, finishing latitude, finishing longitude, and a polygon representation if applicable.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#usage-1","content":" To listen for the ShapeDrawingCompleted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeDrawingCompleted&quot;, function(shapeName, finishLat, finishLong, polygon) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;finishLat: &quot; + finishLat); console.log(&quot;finishLong: &quot; + finishLong); console.log(&quot;polygon: &quot; + polygon); });   In the example above, we've registered an event listener for the ShapeDrawingCompleted event. When the event occurs, the provided call-back function is executed, logging the shape's name, finishing latitude, finishing longitude, and the polygon representation (if available) to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#parameters-1","content":" shapeName (string): The name or identifier of the completed shape.finishLat (number): The latitude coordinate where the shape drawing was completed.finishLong (number): The longitude coordinate where the shape drawing was completed.polygon (object): A polygon representation of the completed shape, if applicable.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#response-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;13763753.343080917,-2640076.057267837,14225172.048240524,-1900449.0151737626&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;13790895.619855013,-1920805.7227543334,13763753.343080917,-2640076.057267837,14225172.048240524,-2592577.0729131717,14191244.202272907,-1900449.0151737626,13790895.619855013,-1920805.7227543334&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;shapeSize&quot;: &quot;Property Boundary Area: 268089470174.40 m²&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Property Boundary Area: 268089470174.40 m²&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Remove Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#remove-event-listeners","content":" To remove the event listener for the ShapeDrawingCompleted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeDrawingCompleted&quot;);   In the example above, the event listener for ShapeDrawingCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingCancelled​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#shapedrawingcancelled","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#description-2","content":" The ShapeDrawingCancelled event is triggered when a user cancels the drawing of a shape on the Record level map ONLY. This event provides information about the cancelled shape, including its name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#usage-2","content":" To listen for the ShapeDrawingCancelled event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeDrawingCancelled&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the ShapeDrawingCancelled event. When the event occurs, the provided call-back function is executed, logging the name of the cancelled shape to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#parameters-2","content":" shapeName (string): The name or identifier of the cancelled shape.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#removing-event-listeners-1","content":" To remove the event listener for the ShapeDrawingCancelled event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeDrawingCancelled&quot;);   In the example above, the event listener for ShapeDrawingCancelled is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingModified​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#shapedrawingmodified","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#description-3","content":" The ShapeDrawingModified event is triggered when a previously drawn shape is modified within the Record level map ONLY. This event provides information about the modified shape's name and its updated polygon geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#usage-3","content":" To listen for the ShapeDrawingModified event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeDrawingModified&quot;, function(shapeName, polygon) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;polygon: &quot; + polygon); });   In the example above, we've registered an event listener for the ShapeDrawingModified event. When the event occurs, the provided call-back function is executed, logging the name of the modified shape and its updated polygon geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#parameters-3","content":" shapeName (string): The name of the modified shape.polygon (string): The updated polygon geometry of the modified shape.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#response-example-1","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;13763753.343080917,-2640076.057267837,14253251.517202944,-1920805.7227543334&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;13790895.619855013,-1920805.7227543334,13763753.343080917,-2640076.057267837,14225172.048240524,-2592577.0729131717,14253251.517202944,-2070504.77487333,13790895.619855013,-1920805.7227543334&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;shapeSize&quot;: &quot;Property Boundary Area: 252970372397.52 m²&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Property Boundary Area: 252970372397.52 m²&quot;, &quot;UPLOAD_DOCUMENT_TYPE&quot;: &quot;Property Boundary&quot;, &quot;DYNAMIC_STOKE_COLOR&quot;: { &quot;strokeColour&quot;: &quot;#2ab01e12&quot;, &quot;fillColour&quot;: &quot;#2ab01e80&quot;, &quot;solidFill&quot;: true, &quot;dashedStroke&quot;: false }, &quot;OldGeometry&quot;: [ [ [ 13790895.619855013, -1920805.7227543334 ], [ 13763753.343080917, -2640076.057267837 ], [ 14225172.048240524, -2592577.0729131717 ], [ 14191244.202272907, -1900449.0151737626 ], [ 13790895.619855013, -1920805.7227543334 ] ] ] } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#removing-event-listeners-2","content":" To remove the event listener for the ShapeDrawingModified event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen to this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeDrawingModified&quot;);   In the example above, the event listener for ShapeDrawingModified is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingDeleted​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#shapedrawingdeleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#description-4","content":" The ShapeDrawingDeleted event is triggered when a user deletes a previously drawn shape on the Record level map ONLY. This event provides information about the deleted shape, including its name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#usage-4","content":" To listen for the ShapeDrawingDeleted event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeDrawingDeleted&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the ShapeDrawingDeleted event. When the event occurs, the provided call-back function is executed, logging the name of the deleted shape to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#parameters-4","content":" shapeName (string): The name or identifier of the deleted shape.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#removing-event-listeners-3","content":" To remove the event listener for the ShapeDrawingDeleted event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeDrawingDeleted&quot;);   In the example above, the event listener for ShapeDrawingDeleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingFileSelected​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#shapedrawingfileselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#description-5","content":" The ShapeDrawingFileSelected event is triggered when a user selects a file for shape drawing on the Record level map ONLY. This event provides information about the selected shape's name and the name of the selected file.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#usage-5","content":" To listen for the ShapeDrawingFileSelected event, you can use the on method of the window.top['maptaskrCORE'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window.top['maptaskrCORE'][controlId].on(&quot;ShapeDrawingFileSelected&quot;, function(shapeName, fileContent) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;fileContent: &quot; + fileContent); });   In the example above, we've registered an event listener for the ShapeDrawingFileSelected event. When the event occurs, the provided call-back function is executed, logging the name of the selected shape and the name of the selected file to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#parameters-5","content":" shapeName (string): The name or identifier of the selected shape.fileContent (string): The BASE64 representation of the uploaded file.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#response-example-2","content":" The fileContent returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;filename&quot;: &quot;Shape 1.zip&quot;, &quot;mimetype&quot;: &quot;application/x-zip-compressed&quot;, &quot;content&quot;: &quot;UEsDBBQAAAAAAANhO1VQPMKBDgUAAAAFAAAADwAAAFByb2plY3RBcmVhLmNwZ1VURi04UEsDBBQAAAAIAANhO1VXJsO7IcOFAAAAwqQCAAAPAAAAUHJvamVjdEFyZWEuZGJmY8Kuw6LClGZkYGBQZGwCURjDgMOHPwTDhnQGEcKsaMOyAT7Cjn7DiMOyXGjDssKOw47DjsOxw47Dvi7CrjB5DTR5w7/DuGAPw4cAw5d...&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/dynamics-365/registerable-events/shape-drawing-events#removing-event-listeners-4","content":" To remove the event listener for the ShapeDrawingFileSelected event, you can use the off method of the window.top['maptaskrCORE'] object. This is useful when you no longer want to listen for this specific event.  Example​  window.top['maptaskrCORE'][controlId].off(&quot;ShapeDrawingFileSelected&quot;);   In the example above, the event listener for ShapeDrawingFileSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Annotations","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/annotations","content":"Annotations This menu allows users to perform basic annotation functions on the map such as drawing shapes adding text and measuring distances or areas. Figure 47: Annotations Tab.​ Selecting Erase will turn on delete mode and clicking on a drawn object will remove it. Alternatively, you can select Reset to completely remove all drawn annotations. Point – creates a point as an object on mapLine - creates a line as an object on mapCircle – creates a circle as an object on mapText – creates a text as an object on map","keywords":"","version":"Next"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/introduction","content":"","keywords":"","version":"Next"},{"title":"Features​","type":1,"pageTitle":"Introduction","url":"/docs/dynamics-365/user-guide/introduction#features","content":" Maptaskr is feature rich and provides a broad range of capabilities to end users. From in-depth searching to routing, it enables users to perform their required function seamlessly from a unified interface.  The figure below provides an overview of some of the features available to Maptaskr users.  Figure 2: Maptaskr features at a glance.​    ","version":"Next","tagName":"h2"},{"title":"Mobility​","type":1,"pageTitle":"Introduction","url":"/docs/dynamics-365/user-guide/introduction#mobility","content":" As a Microsoft First Party solution, Maptaskr is able to provide all is features and capability in a mobile-friendly manner either via responsiveness within a mobile device browser, or within Microsoft compatible apps. Maptaskr works within Power Apps mobile and Dynamics 365 for phones and tablets app.  Figure 3: Maptaskr on mobile devices.​    ","version":"Next","tagName":"h2"},{"title":"Purpose​","type":1,"pageTitle":"Introduction","url":"/docs/dynamics-365/user-guide/introduction#purpose","content":" Maptaskr is an application that integrates spatial data from your enterprise and public domain web information, making them available via a web browser.  This guide gives a brief overview of Maptaskr and provides step-by-step guidance on how to make the most of your Maptaskr product.  Note: Please keep in mind that not all the features or functionality may be available to users in your organisation’s installation of Maptaskr, as they may not be configured of turned on by your organisation for use.  For Administration information, refer to the Maptaskr Installation and Configuration guide.  ","version":"Next","tagName":"h2"},{"title":"Intended Audience​","type":1,"pageTitle":"Introduction","url":"/docs/dynamics-365/user-guide/introduction#intended-audience","content":" This guide is intended for Maptaskr end users.  The Maptaskr user-interface is designed to be clear, concise, and easy-to-use. This guide it is provided to help you to get started, and as a quick reference guide to support you if you get stuck and get an understanding of some of the more advanced features.  Note: This guide does not provide guidance on the use and functionality of the general base platform Maptaskr is installed to work within i.e. Dynamics 365 or the Power Platform. This knowledge is assumed.  ","version":"Next","tagName":"h2"},{"title":"Supported Browsers and Devices​","type":1,"pageTitle":"Introduction","url":"/docs/dynamics-365/user-guide/introduction#supported-browsers-and-devices","content":" As a native Microsoft native software product, Maptaskr supports the same browsers and devices as determined by Microsoft – Dynamics CE Supported Browsers and Devices. ","version":"Next","tagName":"h2"},{"title":"Journey Planner","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/journey-planner","content":"","keywords":"","version":"Next"},{"title":"New Route​","type":1,"pageTitle":"Journey Planner","url":"/docs/dynamics-365/user-guide/journey-planner#new-route","content":" Right clicking on any point on the map and selecting Add as source or Add as destination  Figure 36: Add as Source or Destination Buttons.​    User can add records from the info box by clicking on the respective account on the map and selecting Add to Route. Address will get auto filled in the route tab.  Figure 37: Info Box Add to Route Button.​    Once a user has added all route destinations, click Find Route and this will show a route on the map and some general route information as shown below:  Figure 38: Create New Route.​    From here you can either add more locations to your route and/or save this route (if you plan to re-use this route frequently).  In the information section the Total Distance, Travel Time and Meeting Time is displayed. Below this information you can either go back to edit the route, reset the route completely or go straight into Google Maps for navigation.  On mobile devices this will launch your navigation appOn desktop devices this will open Google Maps and from there you can send these directions to your phone  Users can enable the Traffic tick-box to get an overlay view of the current traffic information. Optimizing a route will grab the destinations and pick out a more efficient route (Only available with Bing Maps).  Expanding the Options menu will allow users to configure your routing criteria:  Changing Units from Miles to KilometresAvoiding HighwaysAvoiding FerriesAvoiding Toll roads  Selecting the cog icon on the bottom left of the Route tab will show overall route settings. From here users can determine your start and end time, as well as meeting duration and padding time.  Meeting duration is applied to every destination you have in the route, and padding is applied between every visit.  ","version":"Next","tagName":"h2"},{"title":"Saved Routes​","type":1,"pageTitle":"Journey Planner","url":"/docs/dynamics-365/user-guide/journey-planner#saved-routes","content":" Saved Routes show and user saved any routes under My Routes, and any administrator configured routes under Global Routes.  Figure 39: View Saved Route.​    Saved Routes have 3 categories as shown in the above figure:  My RoutesGlobal RoutesShared Routes  ","version":"Next","tagName":"h2"},{"title":"My Routes​","type":1,"pageTitle":"Journey Planner","url":"/docs/dynamics-365/user-guide/journey-planner#my-routes","content":" Users saved routes appear here. User can also share a personal saved routes with other teams/users. user can do this by expanding saved routes tab, finding the relevant route and clicking on the three dot icon and choosing the highlighted icon below:  Figure 40: Share Route Button.​    This will open a share route form in which user can search the User to share saved query with.  Figure 41: Share Saved Route Form.​    ","version":"Next","tagName":"h3"},{"title":"Global Routes​","type":1,"pageTitle":"Journey Planner","url":"/docs/dynamics-365/user-guide/journey-planner#global-routes","content":" Users with elevated permissions can create Global Routes that will be visible for all users.  Figure 42: Save Route as Global Query.​    Figure 43: Global Routes.​    ","version":"Next","tagName":"h3"},{"title":"Shared Routes​","type":1,"pageTitle":"Journey Planner","url":"/docs/dynamics-365/user-guide/journey-planner#shared-routes","content":" When a user has shared a saved query to current User/Team it will be seen in this section.  Figure 44: Shared Routes.​   ","version":"Next","tagName":"h3"},{"title":"Layers","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/layers","content":"","keywords":"","version":"Next"},{"title":"My Layers​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#my-layers","content":" My Layers is a section for adding personal layers.  ","version":"Next","tagName":"h2"},{"title":"Add a File​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#add-a-file","content":" Figure 49: Add File Layer.​    To add a personal layer, click on Add Layer.  FIELDS\tDESCRIPTIONLayer file\tUser can select to upload a layer directly from a file (.zip Shapefile, KML, GeoJSON, TopoJSON, GPX or CSV) or from a service such as ArcGIS Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage. Security group\tBy adding a security group to a layer, user can set permission for the layer to be viewed if the end user is a part of certain team or has a specific role. Metadata style\tMetadata style refers to how the attribute data is displayed when clicking on an interactive feature. Enable feature interaction\tFeature interaction allows clicking on features to display attribute data (if applicable to the layer) Enable symbology\tEnable Symbology respects the symbology given by a layer (if applicable) Add as a Basemap for Offline map\tEnable this choice to set up the relationship between configured data sources. E.g., Accounts with Appointments  ","version":"Next","tagName":"h3"},{"title":"Add Service Layer​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#add-service-layer","content":" Figure 50: Add Service Layer.​    To add a layer from a service (ArcGIS, etc):  FIELDS\tDESCRIPTIONLayer name\tLayer Name will be the display name for the layer in your layer menu Service type Service Type is to determine where this layer is coming from If you select &quot;ArcGIS&quot; you will be prompted to select the Auth Type for the layer. If your ArcGIS layer is secured using authentication, then we highly recommend arranging for the designated Maptaskr Administrator to configure this as a Corporate Layer. If the layer uses Authentication that is already configured choose the relevant option from the dropdown. If your ArcGIS layer is unauthenticated, don't select anything here. Layer URL\tLayer URL is the URL to retrieve the Layer from Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage. Metadata style\tMetadata style refers to how the attribute data is displayed when clicking on an interactive feature. Add as a custom base map\tWill allow you to change the Maptaskr base map to load this layer instead (Only available to administrators) Add as a default base map\tWill change the Maptaskr Base map to load this layer instead (Only available to administrators) Enable feature interaction\tAllows clicking on features to display attribute data (if applicable to the layer) Enable symbology\trespects the symbology given by a layer (if applicable) Add as a Basemap for Offline map\tEnable this choice to set up the relationship between configured data sources. E.g., Accounts with Appointments  ","version":"Next","tagName":"h3"},{"title":"Add Data Source Layer​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#add-data-source-layer","content":" User can configure any data source entity as a layer by filling in the form below.  Figure 51: Add Data Source Layer.​    FIELDS\tDESCRIPTIONLayer name Will be the display name for the layer in your layer menu Entity Will allow to select data source entity View Will set the view of data source accordingly Icon\tWill add custom icon from the icon library Group\tBy adding a group to a layer, user can bundle other layers into an expandable group to reduce screen real estate usage.  ","version":"Next","tagName":"h3"},{"title":"Corporate Layer​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#corporate-layer","content":" Corporate layers are arranged by the administrator for global access to all licensed Maptaskr users.  ","version":"Next","tagName":"h3"},{"title":"Search Layer​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#search-layer","content":" Figure 52: Search Corporate Layers.​    To search a layer in a specific area, click on draw to create a polygon on map in the area user wants to search, it will filter all the layers within the drawn polygon.  To search a specific layer user can click on search and fill in the keyword in the text box, it will filter all the layers meeting the word criteria.  Figure 53: Search Corporate Layers by Keyword.​    User can reset the layers list by clicking on the rest button.  ","version":"Next","tagName":"h3"},{"title":"View Corporate Layer​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#view-corporate-layer","content":" To turn on a layer, select the tick box for the appropriate layer you want to turn on.  Figure 54: Toggle Layer on and off.​    Some layers are added as a large collection of layers as shown above, so selecting the tick box will expand a list of sub-layers. Selecting a sub-layer will load it onto the map.  Clicking on the three-dot icon of the sub-layer will display the following pop-up:  Figure 55: Layer Features.​    Zoom to extent - Allows users to zoom to the extent of this layer.Filter by attribute - Allows users to filter through a particular attribute of this layer.Attribute table - Loads an attribute table containing all attributes for every single feature in the layer:  Figure 56: Attribute Table.​    ","version":"Next","tagName":"h3"},{"title":"Attribute Table​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#attribute-table","content":" Within the attribute table you can perform a number of functions.  Search attributes by keywordSearch individual attribute columns by keywordSelect features on the map using a drawing tool to narrow down the tableSelect attributes using the checkbox to select/highlight features on the mapSelect individual attributes by clicking on the respective rowExport selected rows to an Excel spreadsheet  Search Attributes By Keyword​  Typing in a keyword in the highlighted search box will perform a filter on every single column available for the layer. The search box is reactive so there is no need to click enter or submit, the filtering will be done on-the-fly.  Figure 57: Search Attributes By Keyword.​    Search Individual Attribute Columns By Keyword​  Select the column you wish to filter and click on the dropdown icon to open a search box. This works the same as the search function in Search Attributes by Keyword except the filter will perform ONLY on the column selected.  Figure 58: Search Individual Attribute Columns by Keyword.​    Select Features On The Map Using A Drawing Tool​  Select the icon highlighted below to start the drawing tool. Proceed to draw a polygon around the features you wish to select (hold the Shift key to do a free-hand drawing).  Figure 59: Select Features on the Map Using a Drawing Tool to Narrow Down the Table.​    Once the polygon has closed, the features within the polygon will be selected and the table will narrow down results.  Select Attributes Using The Checkbox​  By selecting records and clicking “Plot on Map” button will zoom to the extent of the selected items and highlight the features as shown below:  Figure 60: Select Attributes Using the Checkbox to Narrow Down the Table.​    Select Individual Attributes By Clicking On The Respective Row​  Rather than using a checkbox, click on any attribute in one row to zoom directly to that feature. It will also select/highlight that feature.  Figure 61: Select Individual Attributes by Clicking on the Respective Row.​    Export Selected Rows To A CSV Spreadsheet​  By selecting records and then clicking &quot;Export to Excel&quot; button will download a spreadsheet containing all the attribute data for those selected features.  Figure 62: Export Selected Rows to a CSV Spreadsheet.​    ","version":"Next","tagName":"h3"},{"title":"Attribute Pop-Up​","type":1,"pageTitle":"Layers","url":"/docs/dynamics-365/user-guide/layers#attribute-pop-up","content":" Figure 63: Attribute Table.​   ","version":"Next","tagName":"h3"},{"title":"Maptaskr For Individual Records (Record Level)","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/maptaskr-for-individual-records","content":"","keywords":"","version":"Next"},{"title":"Search​","type":1,"pageTitle":"Maptaskr For Individual Records (Record Level)","url":"/docs/dynamics-365/user-guide/maptaskr-for-individual-records#search","content":" Clicking the icon highlighted below will open the search panel.  Figure 65: Search Icon.​    Within the search function you have the option to:  Search for an address.Search for an address using latitude and longitude.User also has access to bookmarks.  ","version":"Next","tagName":"h2"},{"title":"Annotation​","type":1,"pageTitle":"Maptaskr For Individual Records (Record Level)","url":"/docs/dynamics-365/user-guide/maptaskr-for-individual-records#annotation","content":" Clicking the icon highlighted below will open the annotation panel.  Upload .zip Shapefiles, KML, GeoJSON filesDrop pinsDraw annotations  Figure 66: Annotation Icon.​    ","version":"Next","tagName":"h2"},{"title":"Layers​","type":1,"pageTitle":"Maptaskr For Individual Records (Record Level)","url":"/docs/dynamics-365/user-guide/maptaskr-for-individual-records#layers","content":" Clicking the icon highlighted below will open the layers box.  Figure 67: Layers Icon.​    Please note this app does not allow for adding/creating layers. A user may only turn layers on/off.  ","version":"Next","tagName":"h2"},{"title":"Specific Record Level Map Controls​","type":1,"pageTitle":"Maptaskr For Individual Records (Record Level)","url":"/docs/dynamics-365/user-guide/maptaskr-for-individual-records#specific-record-level-map-controls","content":" ","version":"Next","tagName":"h2"},{"title":"Save Map View​","type":1,"pageTitle":"Maptaskr For Individual Records (Record Level)","url":"/docs/dynamics-365/user-guide/maptaskr-for-individual-records#save-map-view","content":" Clicking the highlighted button below will save a Map view.  This will take snapshot of all the elements that are currently turned on, the zoom level and current extent of the map and save it against a record (meaning this is unique to the record). When revisiting this record, the map will automatically load that Map view and go to the saved zoom level, extent and turn on the relevant layers.  Figure 68: Save Map View.​   ","version":"Next","tagName":"h3"},{"title":"Maptaskr Map Viewer (Dashboard Level)","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/maptaskr-map-viewer","content":"","keywords":"","version":"Next"},{"title":"Overview​","type":1,"pageTitle":"Maptaskr Map Viewer (Dashboard Level)","url":"/docs/dynamics-365/user-guide/maptaskr-map-viewer#overview","content":" This section provides an overview of each of the individual elements that make up the Maptaskr Map Viewer.  Figure 5: All dashboard elements numbered.​    Element #\tElement Name\tDescription1\tTop Navigation\tProvides access to the core Maptaskr features of - Search Route Calendar Annotation Layers Legend Bookmark See section Top Navigation for more details. 2\tQuick Search\tEnable the ability to quickly search through all the record details displayed on the Map. 3\tBase Map\tProvides the ability to change the Base Map displayed 4\tMaximise\tSet the Map View to Fullscreen 5\tZoom\tControls to Zoom in and out of the Map View 6\tRefresh Map View\tControls to - Refresh map Return to default extent 7\tExtent History\tControls to - Go to previous extent Go to next extent 8\tDownload Map\tProvides the ability to download the current Map View as a snapshot 9\tTrack my location\tEnables location tracking based on the users GPS location 10\tData Tab\tProvides access to a tabular view of records displayed on the Map 11\tContext Menu\tMenu available by right clicking on the Map. Options presented here will differ based on the manner Maptaskr is configured. See Context Menu for more details 12\tInfo Box\tFly out box displayed when a record on the Map is clicked on. Provides the ability to further interact with the record. Options presented here will differ based on the manner Maptaskr is configured. 13\tCurrent Location\tPoint displaying the users current location. (Requires GPS and location services to be enabled)  ","version":"Next","tagName":"h2"},{"title":"Top Navigation​","type":1,"pageTitle":"Maptaskr Map Viewer (Dashboard Level)","url":"/docs/dynamics-365/user-guide/maptaskr-map-viewer#top-navigation","content":" Figure 6: Maptaskr Top Navigation.​    Navigation Item\tName\tDescription\tSearch\tAllows users to search various records. See Search for more details. Journey Planner\tAllows field service workers to optimise their travel time in navigating to particular areas. See Journey Planner for more details. Calendar\tAllows a quick view of a user's daily meetings with Customers/Clients. See Scheduling Annotation\tAllows users to perform basic annotation f unction i.e. drawing (shapes/text/emasurements) on the Map. See Annotations for more details. Layers\tAllows users to turn on/off personal and corporate layers. See Layers Legend\tAllows users to view legends of searched entities, personal layers, and corporate layers. (If configured) Bookmark\tAllows user to save a particular location on a map for future re-visit. (If enabled)  ","version":"Next","tagName":"h3"},{"title":"Context Menu​","type":1,"pageTitle":"Maptaskr Map Viewer (Dashboard Level)","url":"/docs/dynamics-365/user-guide/maptaskr-map-viewer#context-menu","content":" Figure 7: Context Menu.​    The Context Menu appears when you right click anywhere in the Map canvas. It provides various context specific options as described in Table 3: Maptaskr Context Menu items.  Menu Item\tDescriptionCreate\tEnables users to create records associated with the location on the Map. The options that are avilable to users is dependent on how the solution is configured. Create Territory\tAllows the creation of territories (Only available to Maptaskr Administrators) Set as Current Address\tAllows a user to set the selected point on the map as the current location for searching and routing purposes. To set as current address click Set as Current Address - This will drop a pin and sets the latitude and longitude based on the location of the user. Add as source\tAllows users to add the location as the source location for routing purposes Add as destination\tAllows users to add the location as the destination location for routing purposes.  ","version":"Next","tagName":"h2"},{"title":"Info Box​","type":1,"pageTitle":"Maptaskr Map Viewer (Dashboard Level)","url":"/docs/dynamics-365/user-guide/maptaskr-map-viewer#info-box","content":" The Maptaskr Info Box provides users with a quick and user-friendly way to interact with records that appear on the Map Viewer. An Info Box will appear when you left click a record that is displayed on a Map canvas.  Note: Your view of the Maptaskr Info Box will differ depending on how Maptaskr has been implemented by your organisation.  In the Info Box Details tab, you can see properties of the entity configured by the admin. E.g. email, address, phone number, created on etc.  Figure 8: Maptaskr Info Box.​    In the Info Box Actions tab, you can see thumbnails of actions configured by the admin. E.g. Add Task, View record, Book Appointment etc  Figure 9: Actions Tab Info Box.​    The related entity such as Contacts will appear if configured. The records will appear in a list format by default. If there are no records the user can add one by clicking the plus icon on the right.  Figure 10: Related Entity Contacts Tab in Info Box.​    The notes will appear in list format by default, if there are no notes the user can add one by clicking the plus sign on the right and completing the following form.  Figure 11: Notes Tab Info Box.​    Figure 12: Add Notes from Info Box.​    ","version":"Next","tagName":"h2"},{"title":"Data Tab​","type":1,"pageTitle":"Maptaskr Map Viewer (Dashboard Level)","url":"/docs/dynamics-365/user-guide/maptaskr-map-viewer#data-tab","content":" Figure 13: Data Tab.​    The Maptaskr Data Tab allows users to get a tabular view of the records that have are being displayed on the Map View. The Data Tab give the ability to perform many actions on the items listed within the table. The table will only display items that are visible in the Map View.  Note: Your view and features of the Maptaskr Info Box will differ depending on how Maptaskr has been implemented by your organisation.  Within the data table you can perform a number of functions.    Item #\tName\tFunction1\tSearch\tAllows users to search through the records listed in the table Typing in a keywoord in the highlighted search box will perform a filter on every single column available for the layer. The search box is reactive so there is no need to click enter or submit, the filtering will be done on-the-fly. 2\tDistance Filter\tAllows users to turn the distance filter on/off. This will change the search box to accept numerical input to search for records within a given distance value. 3\tPlot on map\tAllows users to plot selected records on the Map View. 4\tChoose Action\tAllows users to select an action to apply to a selected record via the dropdown. This can be an invidiual item, or ab ulk action applied across multiple records. Note: Your list of actions displayed in the list will differ depending on how Maptaskr has been implemented by your organisation. 5\tPagination\tAllows users to page through records shown in the Data Tab. 6\tMaximise\tAllows users to maximise or minimise the Data Tab. 7\tRecord Count\tThe number of records visible in the current Map View. This number will change when panning and zooming as the number of visible records changes. 8\tSelect\tSelect individual records by clicking on the respective row's checkbox, or click the row directly to select and zoom to the record. 9\tFilter\tEach column heading provides filtering capability. Select the column you wish to filter and click on the dropdown icon to open a search box. ","version":"Next","tagName":"h2"},{"title":"offline-mode","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/offline-mode","content":"offline-mode","keywords":"","version":"Next"},{"title":"Scheduling","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/scheduling","content":"Scheduling Figure 45: Schedules Tab.​ Schedule is a quick view of user’s daily meetings with Customers/Clients. User can also see team's schedule by selecting Team Schedule tab. Clicking on Generate will take you to a new appointment page to generate a new entry into your schedule. Once created, select Reload in your schedule view to see this new appointment: Figure 46: My Schedule Tab.​","keywords":"","version":"Next"},{"title":"Search","type":0,"sectionRef":"#","url":"/docs/dynamics-365/user-guide/search","content":"","keywords":"","version":"Next"},{"title":"New Search​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#new-search","content":" Figure 16: New Search Tab.​    The New Search tab allows users to choose from an Address, Region, Territory (D365 Territory) or a manual drawing.  Users are able to to enter tailored search criteria and then select the appropriate Data Source to search against. A Data Source is a set of records that have been enabled for searching within Maptaskr. The user can choose different enitities and its Views from the drop down.  Once users have selected the Data Source, you can click Save to save this search for future re-use or click Search to perform the data search.  If there is relevant data within users given Search By criteria, the chosen icon/colour will appear on the map based on selection in the Data Source. Alternatively, the user will see a pop-up informing you no data was found within the given search area.  ","version":"Next","tagName":"h2"},{"title":"Search By Address​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#search-by-address","content":" This helps the user to search the data in a particular address within a defined radius.  Figure 17: Search By Address.​    Users are able to enter in an address they wish to search for. A dropdown will appear as users type which will provide suggestions on the address that is being typed.  Figure 18: Address Suggestions.​    The blue target icon () will centre the Map View to the users current location, drop a blue pin and fill in the address of current location.  The user can also set a new current location using the search bar. The user can then select respective Data Source &amp; View to search within the address. Once the search criteria have been configured appropriately, the user can press the Search button and see if records are found.  Figure 19: Example Maptaskr Search Results.​    ","version":"Next","tagName":"h3"},{"title":"Search By Region​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#search-by-region","content":" Users can search via geographic areas, such as Country, State, City, and Post Code.  Once users enter in the region, they wish to search they can then select respective Data Source &amp; View to search within the regions and click Search to see the results.  Figure 20: Search By Region.​    ","version":"Next","tagName":"h3"},{"title":"Search By Territory​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#search-by-territory","content":" If configured, user can also search for records within predefined geographic locations called territories. The user can select multiple territories in Select Territory option and respective Data Source &amp; View to search within the territories.  Figure 21: Search By Territory.​    ","version":"Next","tagName":"h3"},{"title":"Search By Draw​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#search-by-draw","content":" Search by Draw, as the name suggests, allows users to draw a geometric shape on the Map View which represents the search area they wish to use for. This helps the user to search data by drawing their style of shapes. The user can select the Draw tab to draw a Free-hand or Standard shapes (Polygon or circle).  The user can then select respective Data source &amp; View to search within the draw area.  Figure 22: Search By Draw.​    Figure 23: Search By Draw Free-hand.​    ","version":"Next","tagName":"h3"},{"title":"Save a Search​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#save-a-search","content":" To save a search, click the save button and then a pop up will appear to fill out the details of the query, the user can assign to an existing group or create new group. The group name is editable as well.  Figure 24: Save New Search.​    ","version":"Next","tagName":"h3"},{"title":"Saved Search​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#saved-search","content":" Figure 25: Saved Search Tab.​    Saved Searches have 3 categories as shown in the above figure:  My saved Maps &amp; Searches Global Query Shared Maps &amp; Searches  ","version":"Next","tagName":"h2"},{"title":"My Saved Maps & Searches​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#my-saved-maps--searches","content":" User saved searches appear here. Users can also share a personal saved search with other teams/users. Users can do this by expanding the saved search tab, finding the relevant search and clicking on the three dot icon and choosing the highlighted icon below:  Figure 26: Share Map Button.​    This will open a share save query form in which user can search the User/Team to share saved query with.  Figure 27: Share Save Query Form.​    ","version":"Next","tagName":"h3"},{"title":"Global Query​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#global-query","content":" Users with elevated permissions can create Global Queries that will be visible for all users.  Figure 28: Save Search Query as Global Query.​    Figure 29: Global Queries.​    ","version":"Next","tagName":"h3"},{"title":"Shared Maps & Searches​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#shared-maps--searches","content":" When a user has shared a saved query to current User/Team it will be seen in this section.  Figure 30: Shared Maps.​    ","version":"Next","tagName":"h3"},{"title":"Places of Interest - POI​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#places-of-interest---poi","content":" This feature allows users to look for nearby services and amenities such as the nearest gas station, hotel, restaurant, cafe, supermarket, ATM and more.  Note: Places of Interest (POI) will only appear and be available depending on how Maptaskr has been implemented by your organisation.  Figure 31: Places of Interest on Dashboard.​    ","version":"Next","tagName":"h2"},{"title":"Provider POI​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#provider-poi","content":" Users can click on the checkbox of any provider POI in the list of the search panel. By selecting the various POIs that will then appear on the Map View.  Note: POIs appear only at a certain zoom levels so as not to clutter the map with too many items at once.  ","version":"Next","tagName":"h3"},{"title":"Custom POI​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#custom-poi","content":" Users can click on the checkbox of any custom POI in the list of the search panel. By selecting the various custom POIs that will then appear on the Map View.  Note: Custom POIs appear only at a certain zoom levels so as not to clutter the map with too many items at once.  ","version":"Next","tagName":"h3"},{"title":"Bookmarks​","type":1,"pageTitle":"Search","url":"/docs/dynamics-365/user-guide/search#bookmarks","content":" Bookmarks are a very easy way to save a particular location on a map for future re-visit. In particular, it’s handy if the user frequently searches within an area.  Bookmarks are personal and cannot be viewed by any other user. When a bookmark is created, it saves the extent of the area and zoom level.  To bookmark a location, navigate to the last icon of the ribbon highlighted below:  Figure 32: Bookmarks.​    This will open a pop-up dialog to give this bookmarked location a name.  Figure 33: Add a Bookmark.​    To navigate to a bookmark, open the bookmark menu in the search panel and click on any of the bookmarks and it will immediately navigate to that saved location.  Figure 34: Saved Bookmarks.​   ","version":"Next","tagName":"h2"},{"title":"Tutorial Intro","type":0,"sectionRef":"#","url":"/docs/intro","content":"","keywords":"","version":"Next"},{"title":"Getting Started​","type":1,"pageTitle":"Tutorial Intro","url":"/docs/intro#getting-started","content":" Get started by creating a new site.  Or try Docusaurus immediately with docusaurus.new.  ","version":"Next","tagName":"h2"},{"title":"What you'll need​","type":1,"pageTitle":"Tutorial Intro","url":"/docs/intro#what-youll-need","content":" Node.js version 18.0 or above: When installing Node.js, you are recommended to check all checkboxes related to dependencies.  ","version":"Next","tagName":"h3"},{"title":"Generate a new site​","type":1,"pageTitle":"Tutorial Intro","url":"/docs/intro#generate-a-new-site","content":" Generate a new Docusaurus site using the classic template.  The classic template will automatically be added to your project after you run the command:  npm init docusaurus@latest my-website classic   You can type this command into Command Prompt, Powershell, Terminal, or any other integrated terminal of your code editor.  The command also installs all necessary dependencies you need to run Docusaurus.  ","version":"Next","tagName":"h2"},{"title":"Start your site​","type":1,"pageTitle":"Tutorial Intro","url":"/docs/intro#start-your-site","content":" Run the development server:  cd my-website npm run start   The cd command changes the directory you're working with. In order to work with your newly created Docusaurus site, you'll need to navigate the terminal there.  The npm run start command builds your website locally and serves it through a development server, ready for you to view at http://localhost:3000/.  Open docs/intro.md (this page) and edit some lines: the site reloads automatically and displays your changes. ","version":"Next","tagName":"h2"},{"title":"Release Note History","type":0,"sectionRef":"#","url":"/docs/dynamics-365/releases/release-notes","content":"","keywords":"","version":"Next"},{"title":"Release Notes 2.2.2.57 - 2.2.2.58​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22257---22258","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes","content":" Ticket #\tDescription11945\tFixed issue where the Maptaskr Map would not initialize when BING services are unavailable.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.55 - 2.2.2.56​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22255---22256","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-1","content":" Ticket #\tDescription11944\tClicking a BING suggestion in the search PCF now correctly passes the locality with the selected result to the address fields.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.54​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22254","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-2","content":" Ticket #\tDescription11943\tFixed an issue where both LatitudeString and LongitudeString in PCF Search control were incorrectly set to Latitude, now correctly setting LongitudeString to longitude values.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.52​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22252","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-3","content":" Ticket #\tDescription11941\tEnhanced GIS Field lookup in Data Source tabs to include supplemental attributes.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.51​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22251","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-4","content":" Ticket #\tDescription11937\tUpdated file loading functionality to use SHP library instead of Preview.js for improved performance and reliability. 11938\tFixed issue where shape editor now correctly saves the original uploaded shapefiles without any modifications.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.49​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22249","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-5","content":" Ticket #\tDescription11936\tFixed an issue where Measurement Calculation was not working for MultiPolygon, the feature is now fully supported.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.48​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22248","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-6","content":" Ticket #\tDescription11927\tImplemented a new version of maptaskr that does not rely on window.top for improved security. 11928\tImplemented custom logic for zooming to a feature server's selected features when &quot;Zoom to extent&quot; is checked in the GIS layer tab for a feature layer. 11929\tFixed shape area calculation to accurately include the sum of all polygon rings. 11930\tImproved access to previously uploaded shapes and shapes loaded from the portal in extension methods for better functionality and usability. 11931\tFixed the issue with routing appending destinations by replacing the use of `setTimeout` with a more appropriate method. 11934\tFixed issue where the date picker for depart now was not displaying when routing with a custom search provider and a fallback of arcgis. 11935\tFixed issue where GIS layer would still zoom to layer extent even if filter did not return any items.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.37 RC - 2.2.2.39​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22237-rc---22239","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-7","content":" Ticket #\tDescription11922\tFixed issue with uploaded KML shapes that contain GeometryCollections  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.36 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22236-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-8","content":" Ticket #\tDescription11903\tImplemented loading screen for map navigation in Shape Editor. 9384\tResolved issue with Quick Create setting not being respected in the application. 11708\tFixed issue where context menu was not displaying correctly. 11819\tFixed issue where pinching and zooming on Android and iOS devices would cause the map to get stuck in a continuous zooming state. 11827\tFixed issue where deprecated function error was occurring on 'message' and 'onmessage' event listeners. 11834\tImplemented error message display functionality for invalid address searches in Bing Maps, enhancing user feedback and experience. 11837\tImproved search functionality by implementing drawing search feature for a more intuitive user experience. 11845\tFixed an issue where annotation shapes were not saving along with the saved search functionality. 11847\tImplemented automatic reloading of Data Source layers on moveend event in Android, eliminating the need for manual layer toggling for updated data display. 11855\tFixed issue where annotations could not be erased on Android devices. 11857\tFixed issue where multiple clicks on &quot;Create a related record&quot; button in Infobox would lead to the opening of multiple forms simultaneously. 11866\tAdjusted z-index of highlighted circle to be displayed on top of the pin on the map. 11869\tFixed issue where after searching, checkbox is correctly deselected which now properly disables the action list. 11872\tImplemented autocomplete feature for Start and Finish fields in Bing provider for improved routing functionality. 11873\tFixed issue where Data tab occasionally returned unexpected data when using custom filter, ensuring data now includes location consistently. 11874\tFixed issue where clicking multiple times resulted in saving the datasource poi multiple times. 11876\tInfobox action now saves only once, even when clicked multiple times. 11879\tEntity properties are now saved only once even when clicking multiple times. 11880\tFixed issue where data tab fields were saving multiple times when clicking multiple times. 11882\tDisplayed infobox for annotation when 'infobox for self' is enabled in datasource. 11884\tFixed issue where route panel does not update when set as default tab. 11887\tFixed issue causing saved search annotations to generate duplicates. 11889\tFixed issue where infobox actions were not displayed in the expanded infobox panel. 11893\tResolved issue with DataSource GIS filtered layers not functioning correctly with number field types, ensuring accurate filtering and consistent behavior across all data types. 11896\tFixed issue where note was not being loaded in the expand infobox panel. 11898\tAccounts are now sorted in a consistent order when geocoding results are displayed during routing. 11899\tFixed a bug where the z-index of shapes did not match the order in the shape array. 11901\tImproved the styling of the &quot;Attribute&quot; and &quot;Data&quot; tab buttons for a more user-friendly and visually appealing experience. 11904\tImproved saving logic in the shape editor for clearer and more efficient code organization. 11905\tFixed issue where pressing enter on address search with any address would crash the map. 11906\tResolved issue where attempting to plot a map on a record with no address no longer crashes the map display in the data tab. 11909\tUpdated the attribute tab to remove the filter by plugin button and feature for a better user experience. 11913\tArea calculation now displays correctly for measurement annotation in the latest release.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.31 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22231-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-9","content":" Ticket #\tDescription11893\tResolved issue where filtered GIS layers were not correctly mapping schema field info causing the expression type to incorrectly default to string.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.30 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22230-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-10","content":" Ticket #\tDescription11781\tFixed issue where the scale bar and attribution were not returning to their original position after being moved. 11829\tResolved issue with cluster click zoom to extent lacking padding for improved user experience. 11834\tImplemented error message display functionality for invalid address searches in Bing Maps, enhancing user feedback and experience. 11839\tImplemented copyright notice and scale bar inclusion in downloaded map PDF or image for enhanced clarity and compliance in Maptaskr. 11840\tResolved errors occurring upon clicking on cluster icons for improved functionality and user experience. 11841\tFixed issue causing duplication of freehand shapes when updating draw search functionality, ensuring accurate representation of user input. 11842\tImplemented a fix to prevent multiple saving of searches when clicked multiple times, ensuring consistent behavior and data integrity. 11843\tResolved issue causing multiple saving of bookmarks upon multiple clicks, ensuring single and accurate bookmark saving behavior. 11847\tImplemented automatic reloading of Data Source layers on moveend event in Android, eliminating the need for manual layer toggling for updated data display. 11848\tAddress search UI issue in shape editor has been successfully resolved for improved functionality and user experience. 11849\tFixed issue in Android where ArcGIS routing incorrectly highlighted all routes in yellow, indicating inability to complete within configured day, ensuring accurate route visualization. 11851\tFixed issue in Android where modifying standard shapes inadvertently caused map panning, enabling seamless modification of shapes for improved editing experience. 11856\tResolved issue in Android where plotting on the map in the Data Tab caused the highlight to appear underneath the icon, ensuring proper display and visibility of highlights for enhanced user experience. 11871\tImplemented fix in Bookmarks feature to ensure saved extents retain zoom level information for consistent and accurate bookmarking experience. 11875\tResolved UI issue in the inbox for improved note display and user experience. 11883\tFixed display issue in the Data Tab where the list of all geographies was not properly rendered, ensuring accurate and clear presentation of geographies for improved usability. 11891\tAddressed issue where inability to click on features occurred when a filtered GIS layer returned no results, ensuring consistent interaction with features across all layers for enhanced user experience. 11893\tResolved issue with DataSource GIS filtered layers not functioning correctly with number field types, ensuring accurate filtering and consistent behavior across all data types.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.27 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22227-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features","content":" Ticket #\tDescription11861\tDatasource GIS layer filters now work with CSV values  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-11","content":" Ticket #\tDescription11890\tTypo fixed in custom.js 11809\tFixed record level issue where resetting layers in the layer list was also resetting Datasource GIS Layers  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.25 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22225-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-1","content":" Ticket #\tDescription10286\tAdded new annotation upload facility to the CORE product, incorporating the logic from the portal. 10483\tImproved Spider Visualisation with consistent logic for clustering and visibility, ensuring pins are always visible 10731\tUpdated the GIS Loading logic to enable the specified layer instead of loading its features. 10882\tAdded new properties for the &quot;Shape Editor&quot; configuration page in the DataSource, allowing users to customize the shape editing functionality. 10888\tCreated the Shape events and callback functions (including documentation for the shape callback event delegates) 10889\tCreated the Measurement events and callback functions (including documentation for the callback event delegates) 10890\tCreated the Annotation events and callback functions (including documentation for the callback event delegates) 10891\tCreated the Basemap events and callback functions (including documentation for the callback event delegates) 10892\tCreated the Address Search events and callback functions (including documentation for the callback event delegates) 10894\tCreated the Layer Attribute events and callback functions (including documentation for the callback event delegates) 10897\tImplemented Map Interaction events and callback functions with documentation for the callback event delegates. 10898\tAdded support for General Event events and callback functions, including comprehensive documentation for the callback event delegates. 10901\tImplemented Layer List events and callback functions, including documentation for callback event delegates. 11021\tImplemented configurable font size and annotation text colors, allowing users to customize the appearance of text in the application. 11191\tRefactored Routing tab to enable/disable provider support features as applicable. 11202\tThe route button is now added to the record level ribbon and is connected to the primary record id as described. 11495\tImplemented consistent Bookmark feature across all modules. 11538\tImplemented feature to move the &quot;reset filters&quot; button in the data tab to the top with other buttons. 11573\tAdded Custom.js and Custom.CSS files as static web resources, referenced within index.html and shapeeditor.html. 11599\tImplemented feature to persist the toggled state of Viewport filtering using LocalStorage. 11621\tImproved error handling and validation in the Managed Providers UI, ensuring a seamless user experience and preventing selection of unavailable providers. 11644\tRefactored the layer list UI to match the layout of Portal, using flex and inset design. 11646\tAdded support for NearMaps in shape editor loading. 11721\tImplemented a &quot;Search by Name only&quot; checkbox for layers, ignoring layer attributes in the search. 11746\tRemoved fullscreen button on mobile app as it was non-functional. 11799\tAdded getDrawnShapes, getUploadedStapes, getShapeCount, getAnnotation, getLambpetIds, getUploadedFiles and getShapeIntersections data accessor functions. 11800\tAdded the getLatLongFromCoordinate, navigateToLatLong and navigateToExtent data accessor functions. 11801\tAdded the downloadMap data accessor function. 11802\tAdded the addHighliht and clearHighlights data accessor functions. 11803\tAdded the showWarningMessage, handleLoadingSpinner, and updateLoadingSpinnerMessage data accessor functions. 11807\tAdded deprecation messages to old external functions to alert users of their outdated status.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-12","content":" Ticket #\tDescription11833\tFixed issue with GIS layer zoom functionality to enable seamless zooming in on the map. 11809\tFixed issue where saved searches were not correctly preserving freedraw shapes and styles during updates. 11832\tEnhanced user interface based on design recommendations and feedback. 11835\tImplemented functionality to edit properties of shapes in the &quot;Shape Editor.&quot; 11622\tUpdated the Bing providers to no longer require a basemapkey in the config. 11671\tFixed bug where loading GIS Tab map server on 2.2.1.X resulted in unparseable string post data. 11771\tResolved issue where the configured Infobox actions for opening forms would not appear. 11656\tFixed an issue where GIS Layers without sub layer indexes were not loading the min and max zoom levels correctly. 11768\tDefault Search now loads correctly, ensuring a seamless user experience. 10081\tSaved queries now truncate the Ampersand preventing errors on saving. 10224\tEntity relationships in let you link to entities not yet set as data sources. 10230\tFixed issue where toggling on or off CSV layers from the legend panel was not working. 10338\tFixed issue where the &quot;Avoid Ferries&quot; option was not working properly with Bing and ArcGIS, ensuring accurate routing without ferries. 10344\tResolved compatibility issue between saved routes on ArcGIS and Bing Maps for improved user experience. 10382\tImproved drag and drop functionality in Journey Planner for an enhanced user experience. 10499\tFixed issue where custom base maps were not displaying correct attributions. 10825\tFixed issue where using the Plot feature from the data table in Shape Editor would cause the custom icon for the entity to be removed. 11192\tReplaced dom2image library to resolve some memory leaks in iOS. 11508\tFixed issue where the bookmark name is now updated instantly in the list upon editing. 11549\tFixed an issue where the ShapeEditor route panel had extra padding at the top. 11553\tFixed search configuration issues related to custom settings. 11562\tResolved issue where the Data tab was not properly aligned with the table and screen bottom. 11588\tFixed issue where fake security selection was appearing in the entity properties in the datasource. 11602\tFixed issue where searching for Latitude and Longitude in the search query tab was not working as expected. 11616\tFixed issue where clicking on the Plus to add a record from an infobox resulted in a page reload popup 11626\tFixed an issue where the empty security type in My Layer setup was unclickable, resolving the discrepancy with corporate layers. 11627\tFixed issue causing failure to load layers from the tiles.arcgis.com service. 11651\tFixed issue where optimizing a route would incorrectly co-locate the start and finish points. 11672\tUpdated the data source GIS Tab component to support where clauses and filter fields more effectively with the integration of ArcGisUrlParser. 11673\tUpdated GIS Tab loading to utilize NAMED classes for loading attributes from both layer tabs and web resources. 11674\tAdded hover titles to the security group autocomplete to display the full name when it is cut off horizontally. 11676\tFixed issue where loading default query or default saved search was not functioning correctly in the dashboard. 11677\tFixed issue where annotations were not being saved for new query searches. 11678\tIncreased cluster icon size for improved visibility when searching. 11679\tImproved the display of search results data tab on mobile devices for better visibility and usability. 11681\tFixed issue with broken UI in the layer panel context menu. 11682\tFixed an issue where loading attributes for Vector Tile Layer would result in an error. 11683\tImproved the consistency of loading geojson shape layers and filtering attributes by viewport. 11684\tFixed issue causing code error when enabling map server and feature server layers. 11685\tFixed an issue where the Attribute tab's toggle button was missing for the data source layer. 11686\tMultiple default saved searches can now be set in the saved search feature. 11687\tFixed issue where saved search was not able to perform a freehand polygon search. 11688\tFixed issue where triple dot buttons were not visible when scrolling horizontally in an expanded legend. 11689\tImproved the functionality of the info box in the data source layer to prevent errors when clicking on tabs. 11692\tFixed an issue where the legend was not displaying for the WFS layer 11694\tFixed issue where edited route address was not being applied correctly. 11698\tFixed issue where annotation text was not being modified correctly. 11699\tFixed an issue where multiple layers were being added when clicking multiple times while adding layers. 11700\tFixed issue where multiple groups were being added when clicking multiple times while adding a group. 11701\tFixed bug where clicking the Route button on mobile view was hiding the menu due to z-index issue. 11705\tFixed issue where legend items were not displaying correctly after resetting annotation and uploading a file. 11706\tFixed issue where enabling display of pin labels on the configuration page would not work properly 11708\tFixed issue where context menu was not displaying correctly. 11709\tFixed issue where updating a non-group layer would result in duplication instead of moving it to the intended group. 11717\tFixed bug where opening an attribute in a file layer view would present the attribute box without the attributes button. 11723\tEnd date error message is now displayed when creating activity in the data tab. 11727\tFixed issue where previously selected data in the Shape Editor was not being unhighlighted when navigating to new data. 11731\tFixed issue where the &quot;Allow Route&quot; configuration in the datasource now respects in both record details and list level. 11732\tFixed issue where labels displayed in Spider visualization did not match. 11733\tFixed an issue where the &quot;GIS Layer Name&quot; dropdown was not functional in the Datasource Infobox Actions Tab for the &quot;Create Related GIS Layer Action&quot; form. 11734\tAddressed a bug that caused errors when performing custom searches, ensuring smooth and accurate search functionality. 11735\tFixed issue where pins were not appearing on the map if the cluster level was blank, even after performing a search. 11736\tFixed issue where appointment style was not being applied correctly. 11737\tFixed an issue where an appropriate message was not displayed when the &quot;Number of Shapes Allowed&quot; field is left empty at the record level. 11738\tFixed an issue where the message did not update when the layer loading failed. 11741\tResolved issue where the note was not being displayed in the infobox. 11742\tFixed duplicate list issue in the infobox 11743\tFixed: Resolved issue preventing the creation of accounts from the infobox, no longer throwing an error. 11744\tFixed issue where unchecking the &quot;Show traffic along route&quot; setting did not remove the traffic lines from the map. 11747\tFixed an issue where selecting a date in the near map would throw an error. 11748\tUpdated routes to include the location for both source and destination addresses, eliminating the need for reverse geocoding during routing. 11749\tImplemented optimise=timeAvoidClosure parameter in the Bing URL to allow users to receive routes that avoid road closures. 11751\tEnhanced global route permission check and hasMaptaskrAdminRole checks to utilize a function call from the common service. 11752\tFixed issue where the Reports tab was displaying in the infobox on record level, even when no records were present. 11755\tToken is now included as a URL query string and as part of the form's post data, providing enhanced security for form submissions. 11756\tFixed issue where measurements were still visible even when 'hide measurement' was enabled. 11758\tFixed issue where closing the expanded info box in the data tab now correctly opens the small info box of a different record. 11761\tFixed an issue where deactivating a datasource would not be reflected in the dashboard search panel. 11762\tFixed: Resolved issue where &quot;Enable Infobox&quot; in Datasource Shape Editor settings was not applying to data tab records at the record level. 11769\tImplemented feature to properly filter attributes based on the viewport when loading a data source as a layer. 11776\tImproved error handling for Datasource GIS layer to display meaningful error messages. 11779\tEnhanced Bing optimization and improved wording for a better user experience. 11781\tFixed issue where the scale bar and attribution were not returning to their original position after being moved. 11783\tRemoved text for the Power BI report configuration section. 11786\tFixed an issue with Model Driven Search Control that was causing it to fail. 11787\tFixed bug where empty entity properties were being created for datasource, and delete functionality now works properly for them. 11789\tFixed issue causing an endless loop when attempting to configure a custom search layer without a token, preventing DDOS attacks on the layer endpoint. 11790\tFixed issue where the title for bookmarks in share editor incorrectly displayed as &quot;Legends.&quot; 11791\tFixed an issue where the avoid options were not being saved for ArcGIS map provider, while it was working correctly for bing map. 11793\tFixed issue where Dashboard infobox was not displaying the entity properties under the details tab. 11797\tFixed issue where the zoom to extent and plot of map feature was not working for attribute in tab functionality. 11798\tFixed issue where the display pins label on hover would show an empty overlay on annotations. 11804\tRemoved unneeded registrations for ShapeEditorComponent and MapTaskrMapComponent. 11806\tFixed a bug in the SelectedFeaturesExportedToCSV function. 11808\tFixed an issue where zoom to the extent was not working properly for ArcGIS feature service layers. 11810\tFixed issue: Bookmark name is now cleared from the textbox when adding a new bookmark. 11811\tFixed issue where resetting the search panel would unintentionally remove data source layers. 11814\tFixed issue where zooming in and out now correctly displays hidden data source layers. 11817\tFixed an issue where saved routes were not being loaded correctly. 11819\tFixed issue where pinching and zooming on Android and iOS devices would cause the map to get stuck in a continuous zooming state. 11820\tFixed an issue where applying a filter mapping to a GIS layer with an integer-type column was causing an error. 11821\tFixed issue where the display of pin label settings was not functioning correctly. 11823\tFixed issue where file annotations were not rendering correctly in the dashboard view. 11825\tFixed issue where the dropdown icon was missing in the layer list tab. 11826\tFixed bug in form_datasource_autocomplete where it was calling the incorrect getShapeIntersections function. 11827\tFixed issue where deprecated function error was occurring on 'message' and 'onmessage' event listeners. 11828\tUpdated layer to enhance functionality and resolve bugs.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.81 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22181-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-13","content":" Ticket #\tDescription11768\tResolved issue relating to security group load time preventing default searches from executing.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.80 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22180-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-14","content":" Ticket #\tDescription11770\tResolved URGENT issue that would prevent upgrading from Version 2.2.1.78  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.78 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22178-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-2","content":" Ticket #\tDescription11650\tAdded PowerBI authentication and viewing code, allowing users to load pre-configured reports for backwards compatibility with the old PowerBI integration methods.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-15","content":" Ticket #\tDescription11671\tFixed bug where loading GIS Tab map server on 2.2.1.X resulted in un-parsable string post data. 11653\tAdded support for displaying all roles in the layer security selection dialog, allowing users to select the desired role and save it accurately. 11656\tFixed an issue where GIS Layers without sub layer indexes were not loading the min and max zoom levels correctly.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.70 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22170-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-16","content":" Ticket #\tDescription11643\tFixed an issue where Filter Fields were not loading for layers that were not ARCGIS urls.  Also added refresh button to the attributes tab to load more attributes for viewport |  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.68 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22168-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-17","content":" Ticket #\tDescription11637\tFixed error caused by NULL “custom_search_data” in the Maptaskr Configuration table.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.67 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22167-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-18","content":" Ticket #\tDescription11611\tAdded support for additionalParameters in the MapServer URL, allowing users to add API Keys and other parameters for enhanced functionality. 11622\tRemoved the requirement for a basemapkey in the Bing providers configuration. 11629\tEnhanced saveArcgisDatasourceLayerToArcgisServer to accept additional parameters for improved functionality.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.63 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22163-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-19","content":" Ticket #\tDescription11603\tFixed issue where static token was incorrectly loaded as a MaptaskrLayer data model in PCF Model and Canvas, now correctly loads as an entity property. 11608\tFixed issue where ArcGIS Feature Loading would not load the correct OBJECT ID if the ObjectIdFieldName was null. 11610\tFixed issue causing errors when attempting to load layers with labels and a MinMax resolution set.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.58 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-22158-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-3","content":" Ticket #\tDescription9842\tFixed issue where map was not navigating to the center of the confines when loading and no default latitude and longitude was specified. 10482\tOpen Layers version updated to 6.14.1. 10484\tFixed an issue where multiple custom layers were unable to be implemented, resulting in improved functionality and versatility. 10582\tImplemented branding feature for 2.2.1 product. 10707\tAdded new dropdown for the fallback search provider when &quot;Custom Search&quot; is selected. 10708\tImplemented UI elements for appending new custom search objects (JSON objects) 10728\tImproved performance and functionality when loading attribute popups by retrieving layer field types, names, display names, and formatted values based on type. 10730\tAdded a loading screen to the map that disappears once RenderComplete is fired and the vector layer basemap has its style 10733\tUpdated the core solution to utilize the ArcGIS Vector basemap as the default base map. 10734\tFixed a bug where labels for the basemap were not displaying correctly by adding a ClassName to the vector basemap for proper z-indexing. 10736\tImplemented the layer filter logic from Portal, resolving the issue with layer filtering. 10739\tUpdated the Layer Search to include cancellation logic similar to the portal, along with the addition of AjaxSemaphore for request throttling. 10745\tThe attribute tab now displays field display names and formats the values for better readability. 10856\tReplaced the MapReady Service with the standard &quot;mapReady&quot; callback and removed the service. 10857\tResolved issue with event registration hack to support Pointerdown, Pointerup, and Touch events in the latest version of OL. 10859\tRemoved unnecessary resolution variable to improve code efficiency. 10863\tRemoved ShapeDataCapture.html as it was not being used. 10866\tImplemented new centroid calculation logic for saving annotations, resulting in improved migration from Portal. 10868\tUpdated API requests to use JSON Posts instead of JSON-P for improved security and compatibility. 10869\tTeam Schedule feature has been removed. 10908\tRemoved unnecessary files and optimized solution web resources for improved performance. 11013\tMigrated the Measurement Logic from Portal to Core. 11016\tImproved Attribute Table to align with the logical structure of the Portal Attribute table. 11017\tImproved annotation text drawing now uses a dialog format similar to Portal, enhancing readability and user experience. 11018\tImplemented SingleClick handler to match the functionality of Portal. 11140\tAdded functionality to migrate the attribute table layer name and ID from Portal to Core. 11142\tImproved ArcGis layer loading logic to ensure that all features are loaded efficiently, even with large datasets. 11187\tImplemented migration of the Zoom to Extent code from the Portal to the Core, ensuring that the functionality now respects the minimum and maximum resolution settings. 11190\tThe ArcGIS Layer URL parser has been successfully migrated from PORTAL to CORE. 11225\tImplemented feature attribute mapping for migrating ArGisStyle from Portal to Core in the latest release. 11450\tFixed issue with ArcGIS authentication by adding the required `require` and `ArcGIS` references in index.html. 11451\tFixed issue with autocomplete not working due to missing autocomplete library 11454\tImplemented confined boundary settings in Map Settings to allow users to set boundaries for the map, providing a controlled environment for navigation. 11455\tResolved bug where the shape editor did not honor the default map location. 11460\tgetBaseMapStyle function now attempts to retrieve a pretty style and falls back to the default style if not available. 11467\tRemoved Reports tab UI and unnecessary code for improved performance and streamlined user experience. 11472\tImproved the UI/UX of the General Data Tab for a cleaner and more user-friendly experience. 11473\tAdded &quot;Filter By Viewport&quot; toggle button to Attributes and Data Tabs. 11480\tAdded a new field called &quot;Static Token&quot; to Maptaskr Layers, enabling its usage with the &quot;Static Auth Token&quot; authentication type.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-20","content":" Ticket #\tDescription8993\tFixed issue where html tags were being displayed in comments when viewing appointments. 10324\tFixed issue where navigating to a region now correctly applies a 20% padding to the extent. 10325\tImproved stability and resolved crash issues when searching by drawing on the map in Android. 10336\tFixed a bug where loading appointment set with Team meeting link would fail on iPhone. 10346\tFixed an issue where enabling a Vector Tile Basemap as a layer would display the default legend entry 10354\tFixed issue causing map to break when attempting to annotate using finger. 10355\tFixed the issue where measurement lines could not be stopped from being drawn on mobile devices. 10356\tFixed an issue where moving object annotations would cause the map to break in the D365 App. 10358\tFixed issue causing map to become unresponsive when reset while drawing in D365 App. 10371\tFixed an issue where the Map component did not update the current location when location permission was granted after the initial loading. 10375\tImproved rendering of Layer Search by Bounds in the user interface. 10390\tImproved wording in Change Owner Action notification for better clarity. 10391\tFixed issue where exporting to Excel in Shape Editor was leaving certain columns blank 10392\tFixed an issue where assigning a license would also assign a read-only role unexpectedly. 10393\tImproved team auto-suggest functionality now displays all teams when assigning licenses. 10407\tFixed issue where default search zoom could be set to a value higher than the maximum zoom level. 10409\tFixed issue that caused issues when using an invalid value for &quot;Default location within&quot; 10412\tFixed issue where the POI tab was still visible even when no POIs were configured. 10415\tFixed issue where the &quot;Enable Layer Search&quot; feature in the GIS tab was not working. 10420\tFixed issue where the list of appointments was not updating when adding a subsequent appointment via Infobox. 10425\tFixed issue where selecting lookup fields in data tab columns did not display data correctly. 10427\tFixed issue where clicking on the Create Appointment button would create multiple appointments. 10447\tFixed an issue where appointment details in the My Schedule feature would not update after making changes. 10487\tFixed an issue where Apple iOS would crash when loading an excessive number of layers and canvases. 10569\tFixed bug where setting Default View to Satellite would cause zoom controls to malfunction in offline mode 10586\tFixed issue where clicking on a row in the WFS layer attribute table did not trigger any action. 10589\tFixed bug where adding to marketing list on dashboard was not functioning properly. 10592\tFixed an issue where the Download Map Legend Panel in the Shape Editor was using incorrect iconography for records' icons. 10593\tFixed an issue where the Distance Filter in the Data tab of the PA Shape Editor was not functioning correctly. 10594\tFixed issue with the activity date picker in the Data tab of the Shape Editor. 10595\tDefault Zoom issue resolved, now properly reads and respects the Default Zoom setting. 10596\tFixed issue where Company Location was not found in PA configuration. 10597\tFixed issue where GIS layer in the DataSource was not turning on when the URL contained an index. 10823\tResolved issue that prevented users from searching for addresses in Shape Editor when using ArcGIS base map. 10825\tFixed issue where using the Plot feature from the data table in Shape Editor would cause the custom icon for the entity to be removed. 10826\tResolved issue where the datasource control was encountering an unknown provider error. 10827\tFixed an issue where configuring the data tab field would fail due to the presence of the angular_auto_complete component. 10828\tFixed an issue where the configuration of entity property tabs was failing when using the angular_auto_complete mechanism. 10829\tFixed an issue where adding a licensed user failed due to an error in the angular_auto_complete feature. 10830\tFixed an issue where loading the dashboard map with Bing map would cause autosuggest related errors. 10832\tFixed issue causing Here Maps base map to experience rate limit exceeded errors after multiple zoom events. 10907\tResolved issue with uploads and annotations not loading correctly on the dashboard for improved user experience. 11012\tResolved issue with Full Screen not working on Power Apps mobile, ensuring an optimal viewing experience for users. 11020\tFixed issue where map was not centering on a clicked point within the Attribute Tab of the Map Server. 11025\tImproved the font rendering in the right-click menu for location display. 11028\tFixed an issue where the error message &quot;Failure to Assign License&quot; was displayed incorrectly when assigning a license to a user, despite the license being successfully assigned upon screen refresh. 11029\tFixed an issue where the Satellite Map service did not default to Bing when adding it as the first provider. 11422\tFixed issue where asset data was not appearing when running the app locally. 11453\tResolved issue with annotation text, allowing for seamless adding and editing. 11456\tFixed issue with broken layer search URLs in MapServer and other platforms. 11461\tUpdated loading screen to only appear when necessary, improving user experience by reducing unnecessary loading screens throughout the application. 11463\tFixed an issue where the ArcGIS basemap was not being displayed when downloading the map. 11464\tFixed issue where ImageServer layers would not load properly. 11465\tFixed issue where users were unable to save map settings if latitude and longitude coordinates were not provided along with the map extent. 11466\tFixed issue with exporting data to Excel in the datatable. 11470\tAdded fix to display legends on the legend panel for improved user experience. 11471\tFixed an issue where MoveEnd was firing immediately, saving lat:0 lon:0 into the history of the extents. 11474\tFixed an issue where when &quot;Filtering by polygon&quot; in Attribute tab and no results are returned, all data items were shown. 11475\tEnabled shape editor on mobile by updating the PA Solution file. 11477\tFixed issue where the modal was not closing correctly when a base map was not selected. 11478\tImproved search functionality to now include entity fields that were previously searchable. 11481\tFixed issue with incorrect coordinate transform for the viewCenter. 11483\tImproved the functionality of the Bing address search feature. 11485\tFixed an issue where the Layer Keyword search was not correctly handling special characters. Now, special characters can be used in the search. 11487\tWhen attempting to enter garbage data and then searching, the loading spinner keeps spinning. 11489\tFixed issue causing Object Library Icons in shape editor to lose custom opacity settings when loading a record. 11491\tShapes on the map are now automatically cleared when clicking on a saved search. 11496\tFixed issue where clicking on &quot;Find Route&quot; would clear the Traffic Map layer. 11497\tFixed issue where shapes were disappearing when moving saved searches between &quot;My Saved&quot; and &quot;Global&quot; in the search feature. 11498\tFixed issue where clicking &quot;Cancel&quot; on a map download would not actually stop the download process. 11500\tFixed issue where closing a modal without selecting a group (saved search) was not functioning correctly. 11503\tFixed issue where free-hand shapes were not rendering correctly when saving a search query. 11505\tAll layers now have attribute table available in Shape Editor. 11512\tFixed an issue where the &quot;Change Owner&quot; feature was not working on mobile devices due to a change in the positioning of the autocomplete containers. 11513\tFixed a bug where coordinates were being passed to ArcGIS geocoding (and likely other functionalities) in the wrong coordinate space. 11515\tFixed issue where the Export to Excel button on the data tab was not functioning properly. 11517\tFixed issue where enabling company location while confined boundary is configured no longer removes boundary confinement. 11520\tImproved accuracy of navigation to data item by correcting deviation of 50m north. 11521\tFixed issue where the Data tab filter was not functioning correctly in Safari. 11523\tFixed issue where saving a saved search did not properly save the selected color 11524\tFixed issue where deleting a map view did not automatically close the modal window. 11526\tExport to Excel with Geometry removed, all data exports now come with lat/lng by default if present on the record 11530\tImplemented HTTPS actions on the map component to ensure secure communication and enabled access to all entity properties. 11533\tUpdated PCF Address picker to utilize fallback option and resolved issue with custom search functionality. 11534\tFixed bug where custom search was breaking region search, now region search in geometry editor will fallback as intended. 11543\tResolved issue where non-group layers would duplicate in the layer panel when the panel was open during layer loading. 11544\tFixed an issue where the loading screen caused the registration process to never finish, resulting in an endless loading loop. 11554\tPrevent multiple executions of the workflow by implementing a check to disable spam clicking. 11555\tFixed issue where entity forms were not working correctly in fullscreen mode. 11556\tFixed issue where the default location for new records was not being honored in the Shape Editor. 11558\tImproved the loading of shapes for data sources in the dashboard to include all shapes related to the record, rather than only the first one. 11565\tFixed bug where loadFromArcgisOrChild was not being loaded when the user is offline. Additionally, loadFromArcgisOrChild has been renamed to LoadPortalShapes. 11567\tFixed issue where shape cannot be loaded offline by implementing local EPSG.io database. 11572\tFixed issue where the &quot;Show Only Filtered Features&quot; configuration in shapeeditor was not working when used standalone. 11574\tFixed issue where loading spinner and notification were not displayed when saving to ArcGIS. 11578\tFixed issue where users were unable to interact with the legend when using the search by drawing feature. 11579\tFixed issue where measurement values were not displaying when measuring distance and area. 11582\tFixed issue where refreshing the data tab with accounts with invalid addresses would cause duplicates to appear. 11587\tResolved issue where the shape editor would break when attempting to configure a new record with an already existing address.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.6.22 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21622-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-21","content":" Ticket #\tDescription11182\tUpdated the Territories call to return the maximum number of records from the D365 API (5000)  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.6.21 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21621-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-22","content":" Ticket #\tDescription10976\tAdded the ability to show other Territories when creating geometry for Territories 10819\tCustom search now correctly acquires token from ArcGIS Enterprise on-prem before configuring. 11019\tCustom search now case-sensitive, allowing searching on ArcGIS Enterprise layers.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.6.19 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21619-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-23","content":" Ticket #\tDescription10763\tShapeEditor now renders custom icons for related Data Sources 10765\tWhen loading lambpets, provide a fallback for incorrectly formatted base64 Json objects. 10769\tIncreased Annotation Text Size to 18px  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues","content":" Ticket #\tDescription10324\tNavigating to a region does not apply a 20% padding to the extent 10325\tSearch by Drawings has errors on D365 for Phones app. No shapes can be deleted 10327\tData source clustering is not clickable 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10332\tCan't unshare a shared search once it's shared 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10358\tMap becomes unresponsive if reset while drawing in D365 App 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10369\tInconsistent performance of extent navigation controls 10371\tMap does not set current location when location enabled after initial load 10375\tLayer polygon search incorrectly uses bounding box, instead of drawn polygon. 10376\tUnable to create new items in team schedule 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10402\tData source Shape Editor settings missing bookmark configuration 10407\tDefault search zoom can be set higher than max zoom 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10409\tInvalid “Default location within” value causes issues 10412\tPOI tab still visible when no POI's are configured 10415\tEnable Layer Search in GIS tab is nonfunctional 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10459\tOpacity settings not linked between layer options and legend 10462\tRoute locations that don’t resolve can still be added 10487\tApple iOS crashes when loading excessive layers and canvases 10499\tCustom base maps do not show correct attributions. 10502\tGIS Layers added to Legend do not show ArcGIS Symbology. 10563\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10564\tWhen editing data sources on mobile, data source dropdowns overlap labels. 10565\tD365 - Routing Avoid Highways not working for ArcGIS 10568\tRoutes cannot be re-ordered on mobile devices 10569\tDefault View set to Satellite breaks zoom controls in offline mode 10586\tWFS Layer Attribute table clicking on row doesn't do anything. 10589\tPA - Add to marketing list does not work on dashboard 10591\tPA - Shape Editor - Find Route turns off traffic layer 10592\tPA - Shape Editor - Download Map Legend Panel uses wrong iconography for record's icon 10593\tPA - Shape Editor - Data Tab - Distance Filter not working as expected 10594\tPA - Shape Editor - Data Tab - Activity date picker not working as expected 10595\tPA - Default Zoom not respected, it reads Default Search Zoom instead 10596\tPA - Configuration - Company Location does not exist in PA  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.43 App Source​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21543-app-source","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-24","content":" Ticket #\tDescription10703\tProtecting the Window.TOP references from causing issues outside Maptaskr. 10710\tPolygon Callback now existing for any polygon drawn or modified. 10712\tFixed iterations of Nested Child Layers for multi-sub-layer Layers 10713\tFixed basemap opacity issue stemming from new opacity controls. 10717\tFixed coordinate projections when loading layer attributes not in WGS84 10767\tLayer Labels now correctly rendering based on min and max resolution.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-1","content":" Ticket #\tDescription10324\tNavigating to a region does not apply a 20% padding to the extent 10325\tSearch by Drawings has errors on D365 for Phones app. No shapes can be deleted 10327\tData source clustering is not clickable 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10332\tCan't unshare a shared search once it's shared 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10358\tMap becomes unresponsive if reset while drawing in D365 App 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10369\tInconsistent performance of extent navigation controls 10371\tMap does not set current location when location enabled after initial load 10375\tLayer polygon search incorrectly uses bounding box, instead of drawn polygon. 10376\tUnable to create new items in team schedule 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10402\tData source Shape Editor settings missing bookmark configuration 10407\tDefault search zoom can be set higher than max zoom 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10409\tInvalid “Default location within” value causes issues 10412\tPOI tab still visible when no POI's are configured 10415\tEnable Layer Search in GIS tab is nonfunctional 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10459\tOpacity settings not linked between layer options and legend 10462\tRoute locations that don’t resolve can still be added 10487\tApple iOS crashes when loading excessive layers and canvases 10499\tCustom base maps do not show correct attributions. 10502\tGIS Layers added to Legend do not show ArcGIS Symbology. 10563\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10564\tWhen editing data sources on mobile, data source dropdowns overlap labels. 10565\tD365 - Routing Avoid Highways not working for ArcGIS 10568\tRoutes cannot be re-ordered on mobile devices 10569\tDefault View set to Satellite breaks zoom controls in offline mode 10586\tWFS Layer Attribute table clicking on row doesn't do anything. 10589\tPA - Add to marketing list does not work on dashboard 10591\tPA - Shape Editor - Find Route turns off traffic layer 10592\tPA - Shape Editor - Download Map Legend Panel uses wrong iconography for record's icon 10593\tPA - Shape Editor - Data Tab - Distance Filter not working as expected 10594\tPA - Shape Editor - Data Tab - Activity date picker not working as expected 10595\tPA - Default Zoom not respected, it reads Default Search Zoom instead 10596\tPA - Configuration - Company Location does not exist in PA  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.42 App Source​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21542-app-source","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-4","content":" Ticket #\tDescription10602\tAnnotation text fill and stroke colors are now configurable in Maptaskr Configuration.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-25","content":" Ticket #\tDescription10703\tNull checking remaining window.top references required for external function access. 10710\tPolygon Callback now existing for any polygon drawn or modified. 10712\tFixed iteration of nested child layers for layer lists. 10713\tFixes issues where searching for a data source could alter the basemap opacity. 10714\tSearching for Layer Attributes will now do a Contains test for String values, and an Equality test for numbers and objectids. 10717\tClicking a row in the Attribute table will now navigate the user to the correct transformed coordinates regardless of layer projection.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-2","content":" Ticket #\tDescription10324\tNavigating to a region does not apply a 20% padding to the extent 10325\tSearch by Drawings has errors on D365 for Phones app. No shapes can be deleted 10327\tData source clustering is not clickable 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10332\tCan't unshare a shared search once it's shared 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10358\tMap becomes unresponsive if reset while drawing in D365 App 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10369\tInconsistent performance of extent navigation controls 10371\tMap does not set current location when location enabled after initial load 10375\tLayer polygon search incorrectly uses bounding box, instead of drawn polygon. 10376\tUnable to create new items in team schedule 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10402\tData source Shape Editor settings missing bookmark configuration 10407\tDefault search zoom can be set higher than max zoom 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10409\tInvalid “Default location within” value causes issues 10412\tPOI tab still visible when no POI's are configured 10415\tEnable Layer Search in GIS tab is nonfunctional 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10459\tOpacity settings not linked between layer options and legend 10462\tRoute locations that don’t resolve can still be added 10487\tApple iOS crashes when loading excessive layers and canvases 10499\tCustom base maps do not show correct attributions. 10502\tGIS Layers added to Legend do not show ArcGIS Symbology. 10563\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10564\tWhen editing data sources on mobile, data source dropdowns overlap labels. 10565\tD365 - Routing Avoid Highways not working for ArcGIS 10568\tRoutes cannot be re-ordered on mobile devices 10569\tDefault View set to Satellite breaks zoom controls in offline mode 10586\tWFS Layer Attribute table clicking on row doesn't do anything. 10589\tPA - Add to marketing list does not work on dashboard 10591\tPA - Shape Editor - Find Route turns off traffic layer 10592\tPA - Shape Editor - Download Map Legend Panel uses wrong iconography for record's icon 10593\tPA - Shape Editor - Data Tab - Distance Filter not working as expected 10594\tPA - Shape Editor - Data Tab - Activity date picker not working as expected 10595\tPA - Default Zoom not respected, it reads Default Search Zoom instead 10596\tPA - Configuration - Company Location does not exist in PA  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.39 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21539-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-5","content":" Ticket #\tDescription10602\tAnnotation text fill and stroke colors are now configurable in Maptaskr Configuration.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-26","content":" Ticket #\tDescription10604\tAdded Accept header for all ArcGIS calls to include application/json, text/plain, */* 10605\tAll instances of Window.Top have been removed from the solution excluding the functions required for external access to Maptaskr Functions 10606\tThe deprecated, and unused Microsoft libraries: Sdk.Soap, Sdk.Rest, and Sdk.RetrieveMetadataChanges have been completely removed from the solution.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-3","content":" Ticket #\tDescription10324\tNavigating to a region does not apply a 20% padding to the extent 10325\tSearch by Drawings has errors on D365 for Phones app. No shapes can be deleted 10327\tData source clustering is not clickable 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10332\tCan't unshare a shared search once it's shared 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10358\tMap becomes unresponsive if reset while drawing in D365 App 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10369\tInconsistent performance of extent navigation controls 10371\tMap does not set current location when location enabled after initial load 10375\tLayer polygon search incorrectly uses bounding box, instead of drawn polygon. 10376\tUnable to create new items in team schedule 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10402\tData source Shape Editor settings missing bookmark configuration 10407\tDefault search zoom can be set higher than max zoom 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10409\tInvalid “Default location within” value causes issues 10412\tPOI tab still visible when no POI's are configured 10415\tEnable Layer Search in GIS tab is nonfunctional 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10459\tOpacity settings not linked between layer options and legend 10462\tRoute locations that don’t resolve can still be added 10487\tApple iOS crashes when loading excessive layers and canvases 10499\tCustom base maps do not show correct attributions. 10502\tGIS Layers added to Legend do not show ArcGIS Symbology. 10563\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10564\tWhen editing data sources on mobile, data source dropdowns overlap labels. 10565\tD365 - Routing Avoid Highways not working for ArcGIS 10568\tRoutes cannot be re-ordered on mobile devices 10569\tDefault View set to Satellite breaks zoom controls in offline mode 10586\tWFS Layer Attribute table clicking on row doesn't do anything. 10589\tPA - Add to marketing list does not work on dashboard 10591\tPA - Shape Editor - Find Route turns off traffic layer 10592\tPA - Shape Editor - Download Map Legend Panel uses wrong iconography for record's icon 10593\tPA - Shape Editor - Data Tab - Distance Filter not working as expected 10594\tPA - Shape Editor - Data Tab - Activity date picker not working as expected 10595\tPA - Default Zoom not respected, it reads Default Search Zoom instead 10596\tPA - Configuration - Company Location does not exist in PA  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.38 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21538-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Feature​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#feature","content":" Ticket #\tDescription10505\tMerging changes to the Power Automate Solution  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-27","content":" Ticket #\tDescription10165\tLayer menu no longer shows if there are no actions applicable. 10309\tMy Layers now correctly displays filtered child layers 9682\tResolved inaccurate zoom level 10384\tSingle clicking WFS point causes it to disappear without highlighting data 10337\tNearmaps not loading on iPhone 10343\tMeasurements aren’t displayed when hovering over freehand annotations 10349\tResetting layers results in missing legend for Data Source and Vector Tile Layers 10362\tError encountered when toggling WFS layer legends with sub-layers 10370\tLegend panel does not contain a title when downloading as PDF or Image 10373\tClearing annotations in shape editor removes saved annotations from the record 10377\tBasemap disappears when filtering a feature service 10387\tModal Dialog for Data Source Layer does not open for Custom Entity 10388\tDistance column in Shape Editor's data tab does not populate 10389\tIssues with Non-account Data sources configuration as DS Layer 10394\tLayer search allows empty and excessively long search strings 10397\tBlank map when Satellite view set with default location 10405\tStyling issue with security group dropdown in appointment tab property configuration 10410\tDefault Tab functions only when Layers are selected 10411\tData tab checkboxes can be invisibly selected 10414\tArcGIS Feature service layers don't use default opacity settings 10418\tMap download issues on Mac Safari browser 10423\tSecurity role settings for entity properties in datasource don’t hide fields for unauthorized users 10436\tIssues writing features to ArcGIS when the index is in the URL in Shape Editor 10438\tCannot input text into Teams or User dialog due to loss of focus on mobile. 10439\tLegend panel opacity doesn’t match layer list in Shape Editor 10440\tEmpty tooltip appears over points when loaded as an annotation 10443\tAnnotations don’t load for default queries and all annotations are loaded into memory 10461\tRelated item actions should be under an ACTIONS tab in Shape Editor 10463\tChanging the “Depart By” time has no effect in ARCGIS Routing 10467\tStatic map labels lack consistent styling 10492\tSlow and inconsistent right-click context menu on Mac Safari in Shape Editor 10497\tUpdated the page titles for the Dashboard, Shape Editor, Route and Configuration pages. 10498\tClearing the search JUST before it returns will disable the clear filter button, but still filters the layers. 10501\tOpacity of Map Service layer always shows 100 despite being lower 10503\tCustom Layer Search autosuggest no longer losing focus on mobile. 10504\tCustom POI's now rendering correctly. 10511\tWhen changing the basemap, custom POI is enabled. 10512\tMap Server and Feature Server feature selection issue. 10523\tInclusion of UniqueID fields to Legends. 10525\tGIS tab loaded feature layers now have Zoom and Opacity controls. 10526\tDefault selected tab now correctly honors both Legend tab and Layer tab. 10531\tIssue No – 2947 Unable to open GIS records from Attribute Tab. 10566\tFiltered layers can now be cleared using the Filter dialogs. 10572\tSecurity Groups can now be deselected, however validation will ensure at least one group is selected. 10573\tMap Server Symbology now correctly rendering on Ipad for Download Map 10576\tTemporary Re-inclusion of the ShapePolygonInformation callback for SLA 10590\tPower Apps data source layers now load. 10598\tSingle Indexed GIS Layers now correctly rendered in ShapeEditor 10599\tRemoved the click event from the measurement tooltips. 10600\tBing map dependency race condition resolved for ShapeEditor.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-4","content":" Ticket #\tDescription10324\tNavigating to a region does not apply a 20% padding to the extent 10325\tSearch by Drawings has errors on D365 for Phones app. No shapes can be deleted 10327\tData source clustering is not clickable 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10332\tCan't unshare a shared search once it's shared 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10358\tMap becomes unresponsive if reset while drawing in D365 App 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10369\tInconsistent performance of extent navigation controls 10371\tMap does not set current location when location enabled after initial load 10375\tLayer polygon search incorrectly uses bounding box, instead of drawn polygon. 10376\tUnable to create new items in team schedule 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10402\tData source Shape Editor settings missing bookmark configuration 10407\tDefault search zoom can be set higher than max zoom 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10409\tInvalid “Default location within” value causes issues 10412\tPOI tab still visible when no POI's are configured 10415\tEnable Layer Search in GIS tab is nonfunctional 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10459\tOpacity settings not linked between layer options and legend 10462\tRoute locations that don’t resolve can still be added 10487\tApple iOS crashes when loading excessive layers and canvases 10499\tCustom base maps do not show correct attributions. 10502\tGIS Layers added to Legend do not show ArcGIS Symbology. 10563\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10564\tWhen editing data sources on mobile, data source dropdowns overlap labels. 10565\tD365 - Routing Avoid Highways not working for ArcGIS 10568\tRoutes cannot be re-ordered on mobile devices 10569\tDefault View set to Satellite breaks zoom controls in offline mode 10586\tWFS Layer Attribute table clicking on row doesn't do anything. 10589\tPA - Add to marketing list does not work on dashboard 10591\tPA - Shape Editor - Find Route turns off traffic layer 10592\tPA - Shape Editor - Download Map Legend Panel uses wrong iconography for record's icon 10593\tPA - Shape Editor - Data Tab - Distance Filter not working as expected 10594\tPA - Shape Editor - Data Tab - Activity date picker not working as expected 10595\tPA - Default Zoom not respected, it reads Default Search Zoom instead 10596\tPA - Configuration - Company Location does not exist in PA  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.27 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21527-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-6","content":" Ticket #\tDescription10198\tAdded latitude and longitude to the context menu for easy copying to the clipboard 10488\tCustom Search is now separated from address search, allowing feature searching, whilst retaining address lookup using BING. 10493\tFile download methods replaced with Device Agnostic D365 XRM call.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-28","content":" Ticket #\tDescription10103\tImproved layer visibility by fixing z-index issue 10199\tEnhanced Export Map to Image/PDF with improved legend width 10208\tData Source layer in My Layers now refreshes data when map extent changes 10223\tData Source layers now correctly appear in the legend 10226\tResolved issue where adding a File Layer in Corporate Layers appended an incorrect URL 10247\tFixed issue with Route Unit of Distance defaulting to Miles instead of KM when configured 10299\tImproved the styling of Collapsible Metadata tables for better readability 10309\tMy Layers now correctly displays filtered child layers 10386\tRestored download map functionality for D365 on phones and web 10112\tLegend will now support the same EsriStyles as the map does - with legend representations for all supported style types. 10300\tCustom POI icon selection has been improved, ensuring user cannot select invalid icons during configuration. 10326\tFree-hand drawing in Search by Drawing now respects custom annotation color. 10330\tAll input fields now have a character limit. 10331\tGroup name dialog has been fixed to ensure user cannot get stuck editing a group name. 10333\tWhen searching regions, an invalid input will now provide a toast notification. 10335\tFixed typo in Hover tooltip for Calendar 10353\tReduced frequency of toast errors for distance filter when entering invalid data. 10364\tActivity type dropdown now filtered to supported actions only. 10365\tAuto-suggest no longer clears input box unexpectedly when creating Activities Owner 10366\tMultiple activities can no longer be unintentionally generated by repeatedly pressing the &quot;save&quot; button 10367\tText annotations now match the selected annotation stroke color from the configuration. 10372\tData source layer now enforces filling the required field &quot;GROUP&quot; 10104\tMap symbol will now show for missing layers under Map legend when expanding the + icon 10092\tArcGIS layer legends are now reflective of their on-screen style. 9431\tCustom Search configuration now allows for selection of ArcGIS secured layers. 10395\tMap Settings now validate latitude/longitude bounds correctly. 10403\tTurning off Search Layer in configuration now also hides the Search Heading 10449\tEnabling a sub-sub-layer in Layer tab will now correctly show children. 10495\tDefault Custom Base maps without layer names will no longer affect feature selection. 10094\tResolve issues with feature selection on some ArcGIS layers with a specific spatial reference 10485\tPoint of Interest (POI) rendering issues related to map movement resolved. 10496\tSwapped right click location to be LAT, LONG to match google. 10500\tReplaced visibility logic for legends to work with new MinMax Resolution visibility checks.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-5","content":" Ticket #\tDescription10384\tSingle clicking WFS point causes it to disappear without highlighting data 10325\tSearch by Drawings has errors on D365 for Phones app. No shapes can be deleted 10327\tData source clustering is not clickable 10337\tNearmaps not loading on iPhone 10343\tMeasurements aren’t displayed when hovering over freehand annotations 10349\tResetting layers results in missing legend for Data Source and Vector Tile Layers 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10357\tDownload button for PDFs is missing on iPhone 10358\tMap becomes unresponsive if reset while drawing in D365 App 10362\tError encountered when toggling WFS layer legends with sub-layers 10370\tLegend panel does not contain a title when downloading as PDF or Image 10373\tClearing annotations in shape editor removes saved annotations from the record 10377\tBasemap disappears when filtering a feature service 10387\tModal Dialog for Data Source Layer does not open for Custom Entity 10388\tDistance column in Shape Editor's data tab does not populate 10389\tIssues with Non-account Data sources configuration as DS Layer 10394\tLayer search allows empty and excessively long search strings 10397\tBlank map when Satellite view set with default location 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10405\tStyling issue with security group dropdown in appointment tab property configuration 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10410\tDefault Tab functions only when Layers are selected 10411\tData tab checkboxes can be invisibly selected 10414\tArcGIS Feature service layers don't use default opacity settings 10418\tMap download issues on Mac Safari browser 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10423\tSecurity role settings for entity properties in datasource don’t hide fields for unauthorized users 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10436\tIssues writing features to ArcGIS when the index is in the URL in Shape Editor 10438\tCannot input text into Teams or User dialog due to loss of focus on mobile 10439\tLegend panel opacity doesn’t match layer list in Shape Editor 10440\tEmpty tooltip appears over points when loaded as an annotation 10443\tAnnotations don’t load for default queries and all annotations are loaded into memory 10457\tData source form is excessively long on mobile devices 10460\tConfiguration, data source, and Icons menu on mobile to be disabled 10461\tRelated item actions should be under an ACTIONS tab in Shape Editor 10463\tChanging the “Depart By” time has no effect in ARCGIS Routing 10466\tModal dialogs for infobox actions are not displayed in PA 10467\tStatic map labels lack consistent styling 10487\tApple iOS crashes when loading excessive layers and canvases 10492\tSlow and inconsistent right-click context menu on Mac Safari in Shape Editor 10497\tUpdated the page titles for the Dashboard, Shape Editor, Route and Configuration pages. 10498\tClearing the search JUST before it returns will disable the clear filter button, but still filters the layers. 10499\tCustom base maps do not show correct attributions. 10501\tOpacity of Map Service layer always shows 100 despite being lower 10324\tNavigating to a region does not apply a 20% padding to the extent 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10332\tCan't unshare a shared search once it's shared 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10369\tInconsistent performance of extent navigation controls 10371\tMap does not set current location when location enabled after initial load 10375\tLayer polygon search incorrectly uses bounding box, instead of drawn polygon. 10376\tUnable to create new items in team schedule 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10402\tData source Shape Editor settings missing bookmark configuration 10407\tDefault search zoom can be set higher than max zoom 10409\tInvalid “Default location within” value causes issues 10412\tPOI tab still visible when no POI's are configured 10415\tEnable Layer Search in GIS tab is nonfunctional 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10432\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10459\tOpacity settings not linked between layer options and legend 10462\tRoute locations that don’t resolve can still be added 10502\tGIS Layers added to Legend do not show ArcGIS Symbology.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.21 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21521-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-7","content":" Ticket #\tDescription10053\tAnnotation and region stroke/file colours can now be configured 10061\tSearch query data sources can now be set as read only  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-29","content":" Ticket #\tDescription9491\tFix issue with legend panel not rendering after certain search scenarios 9564\tFix legend “View on Map” issue with Quick search results 9682\tResolved inaccurate zoom level 9758\tFix issue prevent mobile users from moving legend 9851\tResolve inconsistencies with map download (Image/PDF) 10056\tPrevent colour picker and no results label from appearing while loading app 10066\tApply correct styling and shapes when loading GeoJSON from layers and shape editor 10089\tFix issue with map controls overlapping base map selector at small resolutions 10090\tModals no longer block map interaction in some cases 10094\tResolve issues with feature selection on some ArcGIS layers with a specific spatial reference 10102\tFeature Server Layers configured in the data source GIS config now honour ArcGIS styling 10103\tImproved layer visibility by fixing z-index issue 10126\tFix issue where annotations were not displayed correctly 10130\tFixed issue where selecting Search data source colours was updating quick search legend 10131\tStopped Legend slider from preventing user interaction with map controls 10147\tKeyword search for layers now correctly filtering sublayers and clearing correctly 10165\tLayer menu no longer shows if there are no actions applicable 10181\tData source configuration no longer allows duplicate entries. 10184\tAltering the data source color or icon no longer alters the search results on the map or legend 10192\tAccounts with invalid addresses no longer filtered from data tab when map is moved 10198\tAdded latitude and longitude to the context menu for easy copying to the clipboard 10199\tEnhanced Export Map to Image/PDF with improved legend width 10208\tData Source layer in My Layers now refreshes data when map extent changes 10223\tData Source layers now correctly appear in the legend 10226\tResolved issue where adding a File Layer in Corporate Layers appended an incorrect URL 10247\tFixed issue with Route Unit of Distance defaulting to Miles instead of KM when configured 10299\tImproved the styling of Collapsible Metadata tables for better readability 10309\tMy Layers now correctly displays filtered child layers 10386\tRestored download map functionality for D365 on phones and web  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-6","content":" Ticket #\tDescription10092\tSome ArcGIS layers fails to render legend 10104\tMap symbol does not show for some layers on Map legend when expanding the + icon 10112\tLegend should handle rendering icons for all supported EsriStyles 10300\tIcon selection is broken for new custom POI 10324\tNavigating to a region does not apply a 20% padding to the extent 10325\tSearch by Drawings has errors on D365 for Phones app. Freehand doesn't use annotation color, and no shapes can be deleted 10326\tFree-hand drawing in Search by Drawing does not respect custom annotation color 10327\tData source clustering is not clickable 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items 10329\tSearching Saved Searches has no character limit, allowing the user to crash the app 10330\tNot all input fields have maximum character limit 10331\tWhen editing a group name for a saved search, if you close the group name modal and reopen it, you get stuck 10332\tCan't unshare a shared search once it's shared 10333\tSearch by Region geoservice produces an error but doesn't notify the user 10335\tHover tooltip for Calendar contains a typographical error 10336\tEncountered issues while loading an appointment with a Team meeting link on iPhone 10337\tNearmaps not loading on iPhone 10338\t“Avoid Ferries” option doesn’t work as expected with Bing and ArcGIS 10339\t“Avoid Tolls” option doesn’t work as expected with ArcGIS 10340\tRoute Planner should provide a warning if ferries cannot be avoided on the selected route 10341\tArcGIS Traffic layer isn’t visible on mobile devices 10343\tMeasurements aren’t displayed when hovering over freehand annotations 10344\tCompatibility issue between saved routes on ArcGIS and Bing Maps 10349\tResetting layers results in missing legend for Data Source and Vector Tile Layers 10350\tInserting a Teams meeting in an appointment causes display issues 10351\tIncorrect title displayed when viewing the team schedule 10352\tScheduled team event not visible to other members 10353\tNotifications for distance filter too frequent 10354\tMap becomes unresponsive when annotated using a finger 10355\tCannot stop drawing measurement lines on mobile devices 10356\tMoving object annotations can cause the map to break in the D365 App 10357\tDownload button for PDFs is missing on iPhone 10358\tMap becomes unresponsive if reset while drawing in D365 App 10359\tSaved Query does not display selected colors for Data Source 10360\tIssues when routing to non-numbered addresses 10362\tError encountered when toggling WFS layer legends with sub-layers 10364\tActivity Type dropdown displays undefined options and fails to notify or save 10365\tAuto-suggest clears input box unexpectedly when creating Activities Owner 10366\tMultiple activities can be unintentionally generated by repeatedly pressing the &quot;save&quot; button 10367\tText annotations do not match the selected color configuration 10369\tInconsistent performance of extent navigation controls 10370\tLegend panel does not contain a title when downloading as PDF or Image 10371\tMap does not set current location when location enabled after initial load 10372\tData source layer cannot be added without filling a non-required field &quot;GROUP&quot; 10373\tClearing annotations in shape editor removes saved annotations from the record 10375\tLayer polygon search should be within the actual polygon instead of the bounding box 10376\tUnable to create new items in team schedule 10377\tBasemap disappears when filtering a feature service 10380\t“Find Route with Traffic” feature not working in Shape Editor via Bing 10382\tIssues with drag and drop functionality in Journey Planner 10383\tMissing option to Save As for routes 10384\tSingle clicking WFS point causes it to disappear without highlighting data 10387\tModal Dialog for Data Source Layer does not open for Custom Entity 10388\tDistance column in Shape Editor's data tab does not populate 10389\tIssues with Non-account Data sources configuration as DS Layer 10390\tConfusing wording in Change Owner Action notification 10391\tExport to Excel in Shape Editor leaves certain columns blank 10392\tAssigning a license also assigns a readonly role unexpectedly 10393\tTeam auto-suggest does not show all teams when assigning licenses 10394\tLayer search allows empty and excessively long search strings 10395\tMap Settings do not validate latitude/longitude bounds correctly 10396\tDefault zoom dropdown inconsistent with max zoom configuration 10397\tBlank map when Satellite view set with default location 10398\tSpider visualization shows inconsistent results 10399\tDisabling map views does not prevent loading a map view in Shape Editor 10402\tData source Shape Editor settings missing bookmark configuration 10403\tTurning off Search Layer does not hide the Heading 10405\tStyling issue with security group dropdown in appointment tab property configuration 10407\tDefault search zoom can be set higher than max zoom 10408\tUsers without permissions cannot access Data Source configuration when PowerBI is enabled 10409\tInvalid “Default location within” value causes issues 10410\tDefault Tab functions only when Layers are selected 10411\tData tab checkboxes can be invisibly selected 10412\tPOI tab still visible when no POI's are configured 10414\tArcGIS Feature service layers don't use default opacity settings 10415\tEnable Layer Search in GIS tab is nonfunctional 10418\tMap download issues on Mac Safari browser 10419\tToggling Show/Hide Notes in Infobox doesn’t work 10420\tList of appointments not updated when adding a subsequent appointment via Infobox 10423\tSecurity role settings for entity properties in datasource don’t hide fields for unauthorized users 10425\tData not displayed correctly when selecting lookup fields in data tab columns 10427\tCreate Appointment can create multiple entries unintentionally 10430\tShape Editor's filtering with multiple parameters doesn’t work for ArcGIS Default layer 10431\t“Show All Features” doesn't work if “Show Only Filtered Features” is enabled in Shape Editor 10432\tHighlight Filtered Feature shows the layer as hidden in the legend in Shape Editor 10433\tZoom checkbox for ArcGIS Layer doesn’t function as expected in Shape Editor 10434\tVisibility issues with ArcGIS Layer in Shape Editor 10435\tSpider visualizations not functional in Entity Level (Shape Editor) 10436\tIssues writing features to ArcGIS when the index is in the URL in Shape Editor 10437\tNo notification displayed when saving features to ArcGIS in Shape Editor 10438\tCannot input text into Teams or User dialog due to loss of focus on mobile 10439\tLegend panel opacity doesn’t match layer list in Shape Editor 10440\tEmpty tooltip appears over points when loaded as an annotation 10442\tRemove non-functional Layer Search from GIS tab 10443\tAnnotations don’t load for default queries and all annotations are loaded into memory 10444\tEnable Route Path feature not functioning as expected in Shape Editor 10446\tTeam appointments not generated as expected by Generate Appointment feature 10447\tMy Schedule does not update appointment details after changes are made 10448\tAdding a new icon sometimes doesn't save properly due to size not being recognized 10449\tEnabling a sub-layer with sub-layers does not display child layer checkboxes 10457\tData source form is excessively long on mobile devices 10459\tOpacity settings not linked between layer options and legend 10460\tConfiguration, data source, and Icons menu on mobile to be disabled 10461\tRelated item actions should be under an ACTIONS tab in Shape Editor 10462\tRoute locations that don’t resolve can still be added 10463\tChanging the “Depart By” time has no effect in ARCGIS Routing 10466\tModal dialogs for infobox actions are not displayed in PA 10467\tStatic map labels lack consistent styling 10485\tPoint of Interest (POI) rendering issues with different providers 10487\tApple iOS crashes when loading excessive layers and canvases 10492\tSlow and inconsistent right-click context menu on Mac Safari in Shape Editor  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.5.19 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21519-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-8","content":" Ticket #\tDescription9835\tRenamed Search Layers to &quot;Search All Layers&quot; and moved it above the My Layers section. 9401\tEnsured that all existing Target Window for actions were Modal 9403\tHid the actions tab from an infobox if there were no actions. 9554\tAdded a context menu for &quot;set location at my position.&quot;  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-30","content":" Ticket #\tDescription9527\tFixed it so that the first letter of the Route Title does not get auto capitalized when it is saved. 9582\tConcerns related to the Configuration Page were addressed. 9721\tThe product no longer activates automatically without entering a license. 9839\tThe pre-selected group no longer disappears while updating a query. 9887\tInitialised the saved objects in the object library at activation time. 9922\tThe &quot;Choose Action&quot; dropdown in the Data tab no longer disables the &quot;export to Excel&quot; option. 9573\tFixed PA field titles to be more consistent with D365. 9464\tThe display no longer scrolls to the top when clicking on &quot;Pin &gt; Object&quot; from the record level. 9421\tFixed Maptaskr license dialog to reflect correct license type. 9757\tIn a small screen, the Data Tab no longer covers the &quot;Download Map&quot; and other map buttons. 9986\tLayers now contain a LayerUniqueID which is used for all layer interactions. 10047\tEnsured that &quot;Set Location&quot; sets the location of an record level entity when clicked. 10062\tUpdated ArcGIS style with extra information around JSON provided by SLA. 10074\tLayer attributes did not load because the system could not determine the correct extent, extents now calculated correctly. 10048\tWhen creating an account or other entity on the dashboard, identified why the system attempted to ping ArcGIS layers and fixed the getGeometry() calls. 10093\tWhen Enable Sublayer Selection was enabled, it was not possible to turn off sublayers once the parent layer was toggled, this has been fixed. 10095\tHit detection for layers has been improved and is now measured in pixel distance rather than meters. 10105\tThe GIS info pop-up no longer shows duplicate records. 10110\tData source lat/long now supports the decimal type for increase precision  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-7","content":" Ticket #\tDescription10324\tNavigating to a region does not apply a 20% padding to the extent. 10325\tSearch by Drawings has errors on D365 for Phones app. Freehand doesn't use annotation color, and no shapes can be deleted. 10326\tFree-hand drawing in Search by Drawing does not respect custom annotation color. 10327\tData source clustering is not clickable. 10328\tQuerying a data source with a related entity location in the query editor does not result in any returned items. 10329\tSearching Saved Searches has no character limit, allowing the user to crash the app. 10330\tNot all input fields have maximum character limit. 10331\tWhen editing a group name for a saved search, if you close the group name modal and reopen it, you get stuck. 10332\tCan't unshare a shared search once it's shared. 10333\tSearch by Region geoservice produces an error but doesn't notify the user. 10092\tArcGIS layer fails to render legend. 10104\tMap symbol does not show for some layers on Map legend when expanding the + icon. 10112\tLegend should handle rendering icons for all EsriStyles. 10199\tExport map to Image/PDF legend width is incorrect. 10208\tDataSource layer in My Layers does not reload data when changing the extent. 10223\tDatasource layers do not appear in the legend. 10226\tAdding a File Layer in the Corporate Layers section fails because it appends another layer's URL into maptaskr_username. 10247\tRoute Unit of Distance defaults to Miles on load when KM is configured. 10299\tCollapsible Metadata table style does not work correctly. 10300\tIcon selection is broken for new custom POI. 10309\tMy Layers do not display filtered child layers correctly.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.36 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21436-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-31","content":" Ticket #\tDescription10057\tArcGIS Enterprise token generation fails on the Data Source GIS tab.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.34 - 2.1.4.35 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21434---21435-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-32","content":" Ticket #\tDescription10011\tSquare Meters and Square Feet now selectable options in area unit configuration. 9988\tLayer Search has been refined, providing a UI for searching, and the ability to cancel a search that is in progress.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.33 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21433-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-33","content":" Ticket #\tDescription9552\tThe data tab actions now correctly firing in the record-level map. 9955\tFiltering a feature server layer now correctly shows filter box in the record-level map. 9956\tAccessing feature server layer attributes now correctly shows attributes tab in the record-level map. 9957\tClicking “reset” on layers will no longer clear all polygons drawn or and only clear the search polygon, and layer search filters.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.30 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21430-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-34","content":" Ticket #\tDescription9954\tFixing the determineZIndex issue for ArcGIS feature loading for records.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-8","content":" Ticket #\tDescription9552\tThe data tab actions now correctly firing in the record-level map. 9955\tFiltering a feature server layer now correctly shows filter box in the record-level map. 9956\tAccessing feature server layer attributes now correctly shows attributes tab in the record-level map. 9957\tClicking “reset” on layers will no longer clear all polygons drawn or and only clear the search polygon, and layer search filters.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.29 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21429-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-35","content":" Ticket #\tDescription9893\tFixing map download button to work with Azure Map and Bing Map attribution calls.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.28 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21428-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-36","content":" Ticket #\tDescription9886\tFixing the layer legend when rendering root level layers are added and not getting correct names.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.4.26 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21426-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-9","content":" Ticket #\tDescription9536\tAdd a new checkbox to the data source map configuration page to &quot;Hide Area Calculations for this entity.&quot; 9538\tProvide a configuration item for the units to display when measuring area: km^2, mi^2, ha. 9680\tAdd a new button that does not reset the layers, but just clears the filters from the layer list called “Show all”. 9692\tConvert all String.prototypes to use String.helper class instead, deprecate the string extensions. 9694\tUpdate all basemap attributions to the latest compliance requirements. 9723\tGetting the Unit from the address in the canvas app control.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-37","content":" Ticket #\tDescription9072\tFixed issue with Execute Workflow function from Data Tab. 9310\tFixed clicking on a tooltip of a search result asset, now correctly opens the related infobox. 9311\tRelated Entities creation now honors the configured options in the InfoBox and Entity Relationships configuration. 9319\tBookmark popup now correctly appears over relevant UI elements. 9320\tFixed update Layer popup while adding/updating a new group. 9321\tResolved issue with Quick search configuration. 9363\tFixed support for OpenStreetMap vith alternative render satellite image provider 9408\tDropdowns in Data Sources pop ups now same height as other input elements. 9409\tEmpty relationship lists in Data Source configuration now display “no relationships” if no relationships are available. 9413\tUpdating Data Tab Field with more verbose confirmation dialogs. 9414\tUpdating Entity Properties with more verbose messages. 9415\tHovering over drawing icons now have consistent hover states. 9416\tParent sublayer no longer appear in legend if it does not contain any GIS data. 9417\tNew Data Source input validation improved. 9418\tMeasurement Tool now has consistent notation, and symbology. 9419\tSaving changes in GIS/Entity Relationship/Shape Editor tabs now has toast message on success. 9420\tCalendar/Schedule tab reworded to be more self-explanatory. 9422\tTurning off a parent layer will now turn off children layers. 9423\tMap Settings success dialog updated with correct wording. 9424\tMap Providers toast notifications updated. 9426\tData tab pagination now working as expected. 9427\tShape Editor - Address search error dialog updated with more verbose content. 9428\tShape Editor zoom to layer in legend now correctly zooming to the extents of the layer. 9429\tAn unassigned users can no longer be selected in the user assignment screen. 9439\tAdd Layer Upload button now disabled until required fields are filled out. 9447\tWhen uploading an unsupported shapefile, notification is now shown describing the issue. 9455\tSaved routes are now correctly showing in Route Tab- Saved Route 9457\tInvalid addresses are now shown in an error dialog, informing the user that one or more of the addresses listed is not valid. 9467\tTerritory search button is now disabled until a territory is selected. 9476\tIf a user inserts, or in some way corrupts a Lambpet GeoJSON file, the system will now ignore it, and continue loading other valid GeoJSON data. 9478\tUsers who do not have permissions can no longer register a trial license, or activate a license 9479\tSecurity group multiple selection corrected for Select All and Select None buttons. 9487\tDatasource layers selected will now correctly render data even when it is not activated within the active viewport. 9492\tIcons marked as inactive will now no longer be selectable. 9499\tLayer File upload will no longer duplicate layers on file upload. 9537\tAll Length, and Area calculations are now consistent across different polygon types. 9567\tApplication now supports sub-kilometre length in search panel. 9568-9569\tFixed race condition between configuration loading and related shapes loading on the dashboard. 9571\tPrevented deletion of Bing Map Provider 9584\tClicking the Assign infobox button now shows the Assign User dialog correctly. 9594\tPaging between selected layers now updates the layer name in the info panel correctly. 9595\t&quot;Is Address Required?&quot; is now pre-configured to Yes for new Data Source items. 9646\tSelecting a ArcGIS layer point on the map shows a fixed pixel circular highlight regardless of zoom level. 9647\tLayer list now uses the order of selection to sort the layers z-index. 9649\tLayer search by Polygon, Keyword, and clearing refactored to be more robust and error resilient. 9650\tResetting layers no longer causes first layer name to be blanked out. 9652\tSwitching base map to OpenStreet triggers no longer has CSS conflict for attributions. 9653\tCustom JS Options have now been deprecated from the Data Source infobox fields as they are no longer supported by D365. 9654\tThe dashboard Data tab has been refactored to be more resilient to errors in configuration of data source data fields. 9655\tRoute Tab now displays error messages returned from routing provider (if any) 9656\tAttributions are now showing at various zoom levels and extents of the applicable basemap providers. 9664\tAutocomplete and Autosuggestions now correctly configured at initialization of Route tab for Bing provider. 9685\tInvalid users can no longer be selected from the “assign user” dialog box. 9691\tReduced network calls to the Maptaskr Configuration page API to 1. 9725\tArcGIS style service now corrects for layers with null outlines and includes additional null checking. 9729\tDefault Zoom level is now honored, along with Min and Max Zoom levels, regardless of the setting of the default Latitude or Longitude.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.3.27 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21327-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-38","content":" Ticket #\tDescription9681\tArcGis features now correctly styled with returned style formatting.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.3.22 - 2.1.3.26 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21322---21326-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-39","content":" Ticket #\tDescription9477\tFixed broken reference to PCF data source Control in PA. 9570\tChanging the default value for HasAddress in data sources to True for PA. 9569\tChanging load order for InitMap ensuring related entities are visible on the dashboard.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.3.21 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21321-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-40","content":" Ticket #\tDescription9534\tThe “Download Map” button now correctly downloads on both IOS and Android devices.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.3.20 RC​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21320-rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-10","content":" Ticket #\tDescription9143\tAdditional Offline mode API features added for improved offline performance. 8313\tImproved Map Export functionality to include canvas based image generation for IOS devices. 9145\tBookmarks now have confirmation popups for interactions. 9146\tMoved the location button to directly under the extent buttons on mobile devices.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-41","content":" Ticket #\tDescription9481\tPrevented layers being added if layer tab is not enabled. 9501\tWhen zooming to an address the configured &quot;default zoom&quot; is honoured. 9496\tPrevented Search service dropdown from showing HereMaps when not configured as a provider. 9526\tReduced time to save map, stopped map from incorrectly firing save events during refresh, or during &quot;save&quot; button race conditions. 9144\tMove legend control below extent controls in Mobile Devices. 9316\tDownload Map button now will now correctly generate a still image regardless of device DPI 9147\tReduced the size of the Data Tab on mobile devices 9149\tAnnotation edit field now renders above Legend and other map controls. 9448\tClicking the &quot;Erase&quot; button now correctly deselects the annotation drawing tool 9449\tResetting the annotations now correctly navigates back to the Upload tab. 9291\tLegend now correctly populates after resetting annotations. 9336\tBookmark popup now opens above other UI elements. 9182\tMaptaskr dashboard now shows correct title in browser Tab. 9289\tData Tab is now moved up to accommodate the &quot;Save&quot; panel for IOS. 9290\tSearching data using Quick Search and opening data tab now correctly allows &quot;plotting on map&quot; functionality. 8954\tOffline basemaps alter the layer entity in D365 and utilize the D365 apps &quot;Offline Sync&quot; to sync offline basemaps. 8956\tZooming to extents of polygons now include a small margin (relative to screen size) around polygons when zooming to extents. 9346\tFixed autocomplete styling to be relative to the map size, not the device size. 9226\tBookmarks now save as expected on Android D365 app. 9303\tIdentified and documented differences between Android and IOS Geolocation implementation. 9224\tFixed to ensure &quot;fullscreen&quot; button on mobile devices works as expected. 9500\tExternal function window.top['downloadComponent'].downloadMap() will now correctly return a BASE64 string.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#known-issues-9","content":" Ticket #\tDescription9543\tThe “Download Map” button still has issues downloading the map directly to the phone via the D365 for Phones or Field Services app.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.2.75​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21275","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-42","content":" Ticket #\tDescription9490\tHas Address checkbox no longer clears address configuration.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.2.74​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21274","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-43","content":" Ticket #\tDescription9463\tInfobox now contains hyperlinks to related entities. 9465\tIOS Field Service App will generate a map image with appropriate DPI and aspect ratio.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.2.73​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21273","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-44","content":" Ticket #\tDescription8904\tAdded the Route button to the Maptaskr solution, allowing routing from record lists. 9309\tAdded fix for Work Order items, to correctly reference assets when a work order is created against them (Field Services Only)  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.1.2.72​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#release-notes-21272","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#features-11","content":" Ticket #\tDescription9288\tAdded dynamic padding around the map when searching for data sources, when displaying shapes, or when displaying record level geo data. Maps will now zoom out to allow a small amount of padding around the bounds of the object, keeping it in view.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/dynamics-365/releases/release-notes#bugfixes-45","content":" Ticket #\tDescription9338\tFixed Map control panel overlaying data tab on small screens. 9192\tFixed custom search providers throwing exceptions when misconfigured. 9340\tFixed calculation of distance filter, with location services enabled. 9342\tFixed Quick Search bar to allow searching with previously unknown column data types. 9365\tFixed autocomplete dropdowns for route search fields. 9332\tAdjusted zoom levels to reset to the default zoom level (14) when an address is selected from the autocomplete menu, when the location button is clicked, and when &quot;follow me&quot; navigation is enabled. 9329\tAdded logic for &quot;Failed to delete / save records&quot; error to prevent double saving, which was causing issues. 9354\tFixed impacts of &quot;D365 Wave 2&quot; styling overriding the address autocomplete width. 9441\tFixed intermittent issue where the licencing screen would appear blank. 9236\tFixed issue where drawing on the map would cause click events to occur. ","version":"Next","tagName":"h3"},{"title":"Advanced Configuration and Capability","type":0,"sectionRef":"#","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability","content":"","keywords":"","version":"Next"},{"title":"Configuring Secure Layers for Portal​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#configuring-secure-layers-for-portal","content":" The Portal solution will support unauthenticated ArcGIS MapServer and FeatureServer layers out of the box. To allow for a secure ArcGIS MapServer or FeatureServer to be used on a public portal, a secured layer token must be provided.  Suggested entity configuration​  The liquid template provided by Maptaskr in Appendix A: Web Templates will return a singular token as a JSON object from a custom table called layertokens this table can be created by applying an unmanaged solution on top of your environment and creating a new table called layertokens.  Figure 62 - The portal unmanaged customization solution.​    This table, along with the referenced liquid template provide a space in Dataverse to save an ArcGIS authentication token.  Figure 63 - Creating the layer token table.​    This table row can then be updated using a power automate flow, designed to authenticate to ArcGIS using a Client ID and Secret, and then write the result back to the Dataverse Table.  Figure 64 - Example flow for updating the portal token.​    Required Portal Management configuration​  You will need to create a Page template with the name Maptaskr Layer Group Security Search  Figure 65 - Example layer security group template.​    This template will use the content of the Maptaskr Layer Group Security Search template from Appendix A: Web Templates  The Maptaskr Map control will (prior to loading any layer marked secure within the Maptaskr Layer Configuration) query the endpoint /layer-group-security-search.  Figure 66 - Example layer security web page.​    Be sure to assign to this page the web template Maptaskr Layer Group Security Search  Setting layers as Authenticated in Maptaskr D365​  To set a layer as authenticated for the Portal control, you will need to head to the D365 solution, and in the Dashboard edit the selected layers configuration.  Figure 67 - Editing layer in D365​    Here you can set the layer to be enabled and authenticated.  Figure 68 - Enabling layer in Portal.​    Resulting network calls in Portal control​  After configuration of the authenticated layer, you will see a network call out to the endpoint/layer-group-security-search.  Figure 69 - Token response from the Liquid template.​    This token is then appended to any calls to layers marked as Is Authenticated in the layer configuration.  Figure 70 - Layer querying with appended token.​    ","version":"Next","tagName":"h3"},{"title":"Dataverse layers​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#dataverse-layers","content":" The Portal solution supports loading Dataverse layers out of the box. The steps below outline the requirements to configure this functionality.  Required Portal Management configuration​  You will need to create a Web Template with the name Maptaskr Dataverse Layers. This template will use the content of the Maptaskr Dataverse Layers template from Appendix A: Web Templates  You will need to create a Page template with the name Maptaskr Dataverse Layers that references the aforementioned Web Template as shown below.  Figure 71 - Example dataverse layer template.​    The Maptaskr Map control will query the endpoint /maptaskr-dataverse-layers by default and can be configured to use another endpoint which is covered in PCF Component Settings.  You will need to create a web page that references the page template configured above. The partial URL can be set to /maptaskr-dataverse-layers if you are using the default endpoint, alternatively, set this to your desired custom endpoint.  Figure 72 - Example dataverse layer web page.​    Be sure to assign the page template Maptaskr Dataverse Layers to this web page.  Resulting network calls in Portal control​  After configuration of the Dataverse layer, you will see a network call out to the endpoint /maptaskr-dataverse-layers.  Figure 73 - Token response from the Liquid template using a custom endpoint.​    ","version":"Next","tagName":"h3"},{"title":"Static Tokens​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#static-tokens","content":" ArcGIS layers can also be configured to use a static token on a per layer scope. This allows you to have a specific token for each layer and gives you the flexibility to implement your own flows that regularly refresh these tokens. When used in combination with the token refresh interval it is possible to have rolling tokens for additional security.  To configure a static token head into the D365 solution and edit or create an ArcGIS layer via the dashboard map.  Figure 74 – Configuring Static Tokens​    You will need to set Static Token Auth from the Auth Types dropdown. This will enable the Static Token field. Now you can enter your static token. When the portal control finds a layer with Static Token Auth enabled it will append this static token to every request for this layer.  Note: If a layer is configured for Static Token Auth it will attempt to load the static token and use it for all queries regardless of the Is Authenticated field being enabled.  ","version":"Next","tagName":"h3"},{"title":"Additional Parameters​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#additional-parameters","content":" ArcGIS layers can additionally be configured to include additional parameters in EVERY request to the Layer URL. For example, this can be useful if you have any security layers the request needs to pass through before going out to the Layer URL.  To configure Additional Parameters head into the D365 solution and edit or create an ArcGIS layer via the dashboard map.  Figure 75 – Configuring Additional Parameters​    In the Additional Parameters field enter a query string of key/value pairs. These will be appended to every request for the layer. IMPORTANT! Make sure you use correct query string structure, or your layer may not function correctly.  ","version":"Next","tagName":"h3"},{"title":"Custom Endpoints to load related table records​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#custom-endpoints-to-load-related-table-records","content":" As mentioned in PCF Component Settings (if enabled), the PCF component will load shapes that are directly related to the table that's been configured.  In some cases, you may have related (or other) table record that also contain shapes that you`d like to bring into a single map.  To enable this, it is required to generate a Table Permission, Web Template, Page Template and Web Page of your own design. For more details on creating these please refer to Table Permissions, Web Templates, Page Templates and Web Pages.  The naming of these records is independent of Maptaskr and can be set to what is preferred by the D365 administrator.  The FetchXML will need to be developed by the D365 administrator to bring back your desired data and output in the same format as the Maptaskr Shape Search Web Template. Below is a snippet that brings back shapes from related Account or Contact entities. For a full example please see the Maptaskr Related Shape Search template.  Figure 76: Example FetchXML​    If you would like users to be able to view additional metadata for the record, you can populate the attributes property for each record as demonstrated above. If this property is populated users will be able to click on the related shape and view the configured metadata for that record.  Figure 77: Example related shape attribute popup.​    Once the Web Template, Page Template and Web Page are ready you can set Load Related Shapes? parameter to true and pass the partial URL of your web page to the Related Shape Custom Endpoint property in the PCF configuration.  Figure 78: Load related shapes PCF configuration items​    ","version":"Next","tagName":"h3"},{"title":"Configuring a standalone Map​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#configuring-a-standalone-map","content":" If there is a requirement to have a map on a standalone page (i.e. not embedded within a form) the Maptaskr PCF control can also be added to a general webpage as needed. The following steps give an example of how to add the PCF control to a webpage.  Navigate to the Portal Management app of the relevant environment you wish to setup a standalone Maptaskr map.  Figure 79: Portal Management​    Navigate to the Web Pages section and edit the web page which you wish to add the map to. Note: You will need to create a webpage if it does not yet exist. In the following example we will be using the Interactive Map web page as an example.  Figure 80: Edit Web Page​    Under the Localized Content section, select the page content and select Edit.    Scroll down to the Content section and enter in content including a codecomponent that represents the map implementation required. For the example below we have in &lt;div&gt; tag with the appropriate codecomponent liquid script defining the Maptaskr PCF control, with all the relevant settings. Please see Appendix A: Web Templates for an example codecomponent. This component has all features enabled and can be modified to your suit your requirements.  Figure 81: Example standalone map content HTML​    Note: As the control is not bound to a form (i.e. not mapped to a table), the control will not be able to be utilised for shape submission. As such, we would suggest disabling the shape upload or drawing abilities from these types of forms (unless you wish to use the extension methods to provide your own form of saving).  ","version":"Next","tagName":"h3"},{"title":"Dynamically setting PCF properties​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#dynamically-setting-pcf-properties","content":" If there is a requirement to dynamically set one or more of the PCF properties to cater for some business requirements, e.g. dynamically setting the number of shapes users are expected to submit and predefining their names.  To dynamically set a property of the PCF control you will need to add a text field to the form (next to the map). You will need to setup the following for however many properties you wish to dynamically set. Then, to set the PCF property to dynamically bind to that field by naming that field in the property, prefixed with a $. Below is an example.  Go to the form step with the Maptaskr PCF control you wish to bind a property to a dynamically set field.Add a Single-line text field to the form and set Hide label and Read-only to be active. In the example below we will be binding to the Fax text field of the New Account map form step.  Figure 82: Set hidden read only text field for binding.​    Next go to the properties of the Maptaskr PFC control and navigate to the property you wish to bind to the text field to. Enter in the schema name of the field in the property, prefixed with a $, in this example we add is $fax as the property value. Click Done to save your settings.  Figure 83: Set binding field value.​    danger DO NOT USE the Bind to table column option on the property as this Microsoft PCF capability does not work as expected.  You will now find that that when the PCF control loads, it will use the text field value as the input for the property mapped to. Please adopt this capability as needed for your implementation requirements.  ","version":"Next","tagName":"h3"},{"title":"Creating a custom help guide​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#creating-a-custom-help-guide","content":" If there is a requirement to inherit or overload the help content, this can be achieved by utilising the Help Guide Custom Endpoint referenced in PCF Component Settings.  Creating the Help Guide endpoint consists of creating a webpage, and a web template to return the JSON objects required to render the help UI.  Creating the web template​  First you will need to create a web template to house the custom JSON object. We suggest naming it Custom Help Guide however you can name this what you wish.  Figure 84 - Custom Help Guide​    The Source should follow the example:  { &quot;content&quot;: [ { &quot;title&quot;: &quot;First Section&quot;, &quot;content&quot;: &quot;&lt;p&gt;Example Content&lt;/p&gt;&quot; }, { &quot;title&quot;: &quot;Second Section&quot;, &quot;content&quot;: &quot;&lt;p&gt;More Example Content&lt;/p&gt;&quot; } ] }   The Content can be any HTML content you wish to use. Just be sure to escape any quotes correctly otherwise, the JSON may become malformed.  Creating the page template​  After creating the web template, you will need to create the page template.  Figure 85 - Here we have called ours Maptaskr - Custom Help Guide.​    Note the disabling of the Use Website Header and Footer checkbox.  Creating the web page​  Once you have created the template, you will need to create a web page to reference in the PCF configuration.  Figure 86 - Here we have created the Custom Help Guide web page and selected the template we just created.​    Configuring the PCF control​  Once we have created the page, ensure you publish your portal, and test out the endpoint URL.  Figure 87 - Returned JSON object.​    It should return a JSON object as pictured above. Finally, add this URL (as a relative path) to your PCF Configuration.  Figure 88 - Configure your PCF​    Once published, your new Help Guide should be visible from the PCF form you configured.  Figure 89 - Custom Help Guide content.​    ","version":"Next","tagName":"h3"},{"title":"Pre-Selected, Exclusion, and Intersection Layer Configuration​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#pre-selected-exclusion-and-intersection-layer-configuration","content":" When configuring the PCF control, there are parameters that require the population of a Layer Name / Sub-layer Name. These values can be easily copied from the Portal UI, when selecting layer attributes.  To view the value, navigate to a Portal Map, and select the layer you wish to add to the configuration:    Once the attribute table loads, you will find the layer unique identifier string under the layer title.    ","version":"Next","tagName":"h3"},{"title":"Intersection Detection​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#intersection-detection","content":" This powerful feature introduces a new level of precision and efficiency in handling geographic data, providing users with the ability to detect intersections within their mapped shapes and layers.  Exclusionary Selected Layers: Administrators can define an ArcGIS Feature Server layer to be loaded and enabled as default. The features provided by the layer are loaded onto the map and will prevent the user from drawing/uploading a shape that intersects with the layer's features.Intersection Selected Layers: Users can define specific layers to act as intersect zones when drawing/uploading shapes on the map. This capability is highly versatile, allowing users to set up preselected layers for intersection detection. The layers chosen for intersection detection must be ArcGIS Feature Server layers. After a shape has been drawn or uploaded, users can trigger the intersect detection process with a simple validation button. This feature MUST be used in conjunction with the Intersection Warning and Error Buffers. Intersection Warning / Error Buffers: For each layer defined as an Intersection, a Warning and Error Buffer must be defined. These are defined in Metres and will be used to present the user with Warning and Error messages.Initmap.js: As part of the Warning and Intersection logic, Maptaskr has preconfigured the initmap.js file to allow users to submit shapes within the warning buffers, but to deny submission when a shape comes within the error buffer. This can be changed by modifying the Initmap.js as per section InitMap.js.  For more information on how to configure the intersection and exclusion layers, please refer to section PCF Component Settings.  ","version":"Next","tagName":"h3"},{"title":"Registerable Events and Functions​","type":1,"pageTitle":"Advanced Configuration and Capability","url":"/docs/power-pages/installation-guide/advanced-configuration-and-capability#registerable-events-and-functions","content":" This feature empowers portal developers to integrate event registration and call on functions directly from the portal applications.  1. Registerable Events: Portal developers can integrate event registration directly into their portal pages, allowing for the programmatic detection of select user driven actions or outcomes as they happen.  2. Data Accessor Functions: Portal developers can call select functions that provide direct access to specific map data, enabling developers to create custom interactions, analyse data, and trigger action-based business rules and requirements.  These features not only allow for the enhancing of user experience, but also open exciting opportunities for portal developers to create dynamic and user-centric mapping applications. It's a powerful tool for organisations looking to foster user engagement, facilitate event coordination, and programmatically detect and respond to events as they unfold on the map.  For a comprehensive list of registerable events and extensible functions, please refer to the Maptaskr for Power Pages - Registerable Events and Functions.pdf. ","version":"Next","tagName":"h3"},{"title":"Appendix A: Web Templates","type":0,"sectionRef":"#","url":"/docs/power-pages/installation-guide/appendix-a-web-templates","content":"","keywords":"","version":"Next"},{"title":"Interactive Map​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#interactive-map","content":" {% codecomponent name:maptaskr_MaptaskrPCF.MtrPCF designHeightOfMap:'80vh' featuresShowMapDownload:'yes' featuresDownloadMapFormat:'pdf' featuresShowScaleBar:'yes' featuresShowExtentControls:'yes' featuresShowLayersSearch:'yes' featuresDefaultTabOpened:'none' preSelectedLayers:'' snapSelectedLayers:'' traceSelectedLayers: ' exclusionarySelectedLayers:'' intersectionSelectedLayers:'' intersectionWarningBuffers:'' intersectionErrorBuffers:'' featuresAutoCollapseTabs:'yes' constrainBoundaries:'' uploadsShowAnnotationControl:'yes' uploadsAnnotationColor:'#b4eb34' uploadsAllowedUploadTypes:'Both' uploadsAllowedProjections:'' showFileCount:'-1' shapeNames:'Boundary' shapeStrokeColors:'' shapeFillColors:'' shapeDashedLine:'' tabsShowSearch:'yes' tabsShowBasemap:'yes' tabsShowMeasurement:'yes' tabsShowDrawUpload:'yes' tabsShowMapLayers:'yes' tabsShowLegend:'yes' tabsShowHelpGuide:'yes' loadShapes:'yes' loadRelatedShapes:'No' loadShapesCustomEndpoint:'' loadRelatedShapesCustomEndpoint:'' numberOfConcurrentIntersectionCalls:'20' %}   ","version":"Next","tagName":"h2"},{"title":"Maptaskr Custom Layer Search​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-custom-layer-search","content":" Please refer to the appropriate template depending on your installed version of Maptaskr for Power Pages listed below.  ","version":"Next","tagName":"h2"},{"title":"v2.2.1.58 & earlier​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#v22158--earlier","content":" {% fetchxml layer_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;maptaskr_layers&quot;&gt; &lt;attribute name=&quot;maptaskr_iscorporate&quot;/&gt; &lt;attribute name=&quot;maptaskr_layername&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitygroupid&quot;/&gt; &lt;attribute name=&quot;maptaskr_layersid&quot;/&gt; &lt;attribute name=&quot;maptaskr_layerurl&quot;/&gt; &lt;attribute name=&quot;maptaskr_layertype&quot;/&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot;/&gt; &lt;attribute name=&quot;maptaskr_metadata_style&quot;/&gt; &lt;attribute name=&quot;maptaskr_hasauth&quot;/&gt; &lt;attribute name=&quot;createdon&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitylayertype&quot;/&gt; &lt;attribute name=&quot;maptaskr_sharedto&quot;/&gt; &lt;attribute name=&quot;maptaskr_password&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitylayervalue&quot;/&gt; &lt;attribute name=&quot;maptaskr_username&quot;/&gt; &lt;attribute name=&quot;maptaskr_name&quot;/&gt; &lt;attribute name=&quot;maptaskr_arcgisauthapplication&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitylayerkey&quot;/&gt; &lt;attribute name=&quot;maptaskr_zoomtoextent&quot;/&gt; &lt;attribute name=&quot;maptaskr_isforportal&quot;/&gt; &lt;attribute name=&quot;maptaskr_arcgisauthtype&quot;/&gt; &lt;attribute name=&quot;maptaskr_isforauthenticated&quot;/&gt; &lt;attribute name=&quot;maptaskr_sortorder&quot;/&gt; &lt;attribute name=&quot;maptaskr_isforenableexport&quot;/&gt; &lt;order descending=&quot;false&quot; attribute=&quot;maptaskr_sortorder&quot;/&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;maptaskr_iscorporate&quot; value=&quot;1&quot; operator=&quot;eq&quot;/&gt; &lt;condition attribute=&quot;maptaskr_isforportal&quot; value=&quot;1&quot; operator=&quot;eq&quot;/&gt; &lt;/filter&gt; &lt;link-entity name=&quot;maptaskr_layergroup&quot; alias=&quot;layerGroup&quot; link-type=&quot;inner&quot; to=&quot;maptaskr_group_id&quot; from=&quot;maptaskr_layergroupid&quot;&gt; &lt;attribute name=&quot;maptaskr_name&quot; alias=&quot;layer_group_name&quot;/&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot;/&gt; &lt;/link-entity&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;layers&quot; : [ {% for result in layer_query.results.entities %} { &quot;maptaskr_iscorporate&quot; : &quot;{{ result.maptaskr_iscorporate }}&quot;, &quot;maptaskr_layername&quot; : &quot;{{ result.maptaskr_layername }}&quot;, &quot;maptaskr_securitygroupid&quot; : &quot;{{ result.maptaskr_securitygroupid }}&quot;, &quot;maptaskr_layersid&quot; : &quot;{{ result.maptaskr_layersid }}&quot;, &quot;maptaskr_layerurl&quot; : &quot;{{ result.maptaskr_layerurl }}&quot;, &quot;maptaskr_layertype&quot; : &quot;{{ result.maptaskr_layertype }}&quot;, &quot;maptaskr_layergroupid&quot; : &quot;{{ result.maptaskr_layergroupid }}&quot;, &quot;maptaskr_metadata_style&quot; : &quot;{{ result.maptaskr_metadata_style }}&quot;, &quot;maptaskr_hasauth&quot; : &quot;{{ result.maptaskr_hasauth }}&quot;, &quot;createdon&quot; : &quot;{{ result.createdon }}&quot;, &quot;maptaskr_securitylayertype&quot; : &quot;{{ result.maptaskr_securitylayertype }}&quot;, &quot;maptaskr_sharedto&quot; : &quot;{{ result.maptaskr_sharedto }}&quot;, &quot;maptaskr_password&quot; : &quot;{{ result.maptaskr_password }}&quot;, &quot;maptaskr_securitylayervalue&quot; : &quot;{{ result.maptaskr_securitylayervalue }}&quot;, &quot;maptaskr_username&quot; : &quot;{{ result.maptaskr_username }}&quot;, &quot;maptaskr_name&quot; : &quot;{{ result.maptaskr_name }}&quot;, &quot;maptaskr_arcgisauthapplication&quot; : &quot;{{ result.maptaskr_arcgisauthapplication }}&quot;, &quot;maptaskr_securitylayerkey&quot; : &quot;{{ result.maptaskr_securitylayerkey }}&quot;, &quot;maptaskr_zoomtoextent&quot; : &quot;{{ result.maptaskr_zoomtoextent }}&quot;, &quot;maptaskr_isforportal&quot; : &quot;{{ result.maptaskr_isforportal }}&quot;, &quot;maptaskr_arcgisauthtype&quot; : &quot;{{ result.maptaskr_arcgisauthtype }}&quot;, &quot;maptaskr_isforauthenticated&quot; : &quot;{{ result.maptaskr_isforauthenticated }}&quot;, &quot;maptaskr_sortorder&quot; : &quot;{{ result.maptaskr_sortorder }}&quot;, &quot;maptaskr_isforenableexport&quot; : &quot;{{ result.maptaskr_isforenableexport }}&quot;, &quot;layer_group_name&quot; : &quot;{{ result['layer_group_name'] }}&quot; } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h3"},{"title":"v2.2.1.59 - v2.2.1.63​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#v22159---v22163","content":" {% fetchxml layer_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;maptaskr_layers&quot;&gt; &lt;attribute name=&quot;maptaskr_iscorporate&quot;/&gt; &lt;attribute name=&quot;maptaskr_layername&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitygroupid&quot;/&gt; &lt;attribute name=&quot;maptaskr_layersid&quot;/&gt; &lt;attribute name=&quot;maptaskr_layerurl&quot;/&gt; &lt;attribute name=&quot;maptaskr_layertype&quot;/&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot;/&gt; &lt;attribute name=&quot;maptaskr_metadata_style&quot;/&gt; &lt;attribute name=&quot;maptaskr_hasauth&quot;/&gt; &lt;attribute name=&quot;createdon&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitylayertype&quot;/&gt; &lt;attribute name=&quot;maptaskr_sharedto&quot;/&gt; &lt;attribute name=&quot;maptaskr_password&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitylayervalue&quot;/&gt; &lt;attribute name=&quot;maptaskr_username&quot;/&gt; &lt;attribute name=&quot;maptaskr_name&quot;/&gt; &lt;attribute name=&quot;maptaskr_arcgisauthapplication&quot;/&gt; &lt;attribute name=&quot;maptaskr_securitylayerkey&quot;/&gt; &lt;attribute name=&quot;maptaskr_zoomtoextent&quot;/&gt; &lt;attribute name=&quot;maptaskr_isforportal&quot;/&gt; &lt;attribute name=&quot;maptaskr_statictoken&quot;/&gt; &lt;attribute name=&quot;maptaskr_arcgisauthtype&quot;/&gt; &lt;attribute name=&quot;maptaskr_isforauthenticated&quot;/&gt; &lt;attribute name=&quot;maptaskr_sortorder&quot;/&gt; &lt;attribute name=&quot;maptaskr_isforenableexport&quot;/&gt; &lt;order descending=&quot;false&quot; attribute=&quot;maptaskr_sortorder&quot;/&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;maptaskr_iscorporate&quot; value=&quot;1&quot; operator=&quot;eq&quot;/&gt; &lt;condition attribute=&quot;maptaskr_isforportal&quot; value=&quot;1&quot; operator=&quot;eq&quot;/&gt; &lt;/filter&gt; &lt;link-entity name=&quot;maptaskr_layergroup&quot; alias=&quot;layerGroup&quot; link-type=&quot;inner&quot; to=&quot;maptaskr_group_id&quot; from=&quot;maptaskr_layergroupid&quot;&gt; &lt;attribute name=&quot;maptaskr_name&quot; alias=&quot;layer_group_name&quot;/&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot;/&gt; &lt;/link-entity&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;layers&quot; : [ {% for result in layer_query.results.entities %} { &quot;maptaskr_iscorporate&quot; : &quot;{{ result.maptaskr_iscorporate }}&quot;, &quot;maptaskr_layername&quot; : &quot;{{ result.maptaskr_layername }}&quot;, &quot;maptaskr_securitygroupid&quot; : &quot;{{ result.maptaskr_securitygroupid }}&quot;, &quot;maptaskr_layersid&quot; : &quot;{{ result.maptaskr_layersid }}&quot;, &quot;maptaskr_layerurl&quot; : &quot;{{ result.maptaskr_layerurl }}&quot;, &quot;maptaskr_layertype&quot; : &quot;{{ result.maptaskr_layertype }}&quot;, &quot;maptaskr_layergroupid&quot; : &quot;{{ result.maptaskr_layergroupid }}&quot;, &quot;maptaskr_metadata_style&quot; : &quot;{{ result.maptaskr_metadata_style }}&quot;, &quot;maptaskr_hasauth&quot; : &quot;{{ result.maptaskr_hasauth }}&quot;, &quot;createdon&quot; : &quot;{{ result.createdon }}&quot;, &quot;maptaskr_securitylayertype&quot; : &quot;{{ result.maptaskr_securitylayertype }}&quot;, &quot;maptaskr_sharedto&quot; : &quot;{{ result.maptaskr_sharedto }}&quot;, &quot;maptaskr_password&quot; : &quot;{{ result.maptaskr_password }}&quot;, &quot;maptaskr_securitylayervalue&quot; : &quot;{{ result.maptaskr_securitylayervalue }}&quot;, &quot;maptaskr_username&quot; : &quot;{{ result.maptaskr_username }}&quot;, &quot;maptaskr_name&quot; : &quot;{{ result.maptaskr_name }}&quot;, &quot;maptaskr_arcgisauthapplication&quot; : &quot;{{ result.maptaskr_arcgisauthapplication }}&quot;, &quot;maptaskr_securitylayerkey&quot; : &quot;{{ result.maptaskr_securitylayerkey }}&quot;, &quot;maptaskr_zoomtoextent&quot; : &quot;{{ result.maptaskr_zoomtoextent }}&quot;, &quot;maptaskr_isforportal&quot; : &quot;{{ result.maptaskr_isforportal }}&quot;, &quot;maptaskr_statictoken&quot; : &quot;{{ result.maptaskr_statictoken }}&quot;, &quot;maptaskr_arcgisauthtype&quot; : &quot;{{ result.maptaskr_arcgisauthtype }}&quot;, &quot;maptaskr_isforauthenticated&quot; : &quot;{{ result.maptaskr_isforauthenticated }}&quot;, &quot;maptaskr_sortorder&quot; : &quot;{{ result.maptaskr_sortorder }}&quot;, &quot;maptaskr_isforenableexport&quot; : &quot;{{ result.maptaskr_isforenableexport }}&quot;, &quot;layer_group_name&quot; : &quot;{{ result['layer_group_name'] }}&quot; } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h3"},{"title":"v2.2.1.64 & later​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#v22164--later","content":" {% fetchxml layer_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;maptaskr_layers&quot;&gt; &lt;attribute name=&quot;maptaskr_iscorporate&quot; /&gt; &lt;attribute name=&quot;maptaskr_layername&quot; /&gt; &lt;attribute name=&quot;maptaskr_securitygroupid&quot; /&gt; &lt;attribute name=&quot;maptaskr_layersid&quot; /&gt; &lt;attribute name=&quot;maptaskr_layerurl&quot; /&gt; &lt;attribute name=&quot;maptaskr_layertype&quot; /&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot; /&gt; &lt;attribute name=&quot;maptaskr_metadata_style&quot; /&gt; &lt;attribute name=&quot;maptaskr_hasauth&quot; /&gt; &lt;attribute name=&quot;createdon&quot; /&gt; &lt;attribute name=&quot;maptaskr_securitylayertype&quot; /&gt; &lt;attribute name=&quot;maptaskr_sharedto&quot; /&gt; &lt;attribute name=&quot;maptaskr_password&quot; /&gt; &lt;attribute name=&quot;maptaskr_securitylayervalue&quot; /&gt; &lt;attribute name=&quot;maptaskr_username&quot; /&gt; &lt;attribute name=&quot;maptaskr_name&quot; /&gt; &lt;attribute name=&quot;maptaskr_arcgisauthapplication&quot; /&gt; &lt;attribute name=&quot;maptaskr_securitylayerkey&quot; /&gt; &lt;attribute name=&quot;maptaskr_zoomtoextent&quot; /&gt; &lt;attribute name=&quot;maptaskr_isforportal&quot; /&gt; &lt;attribute name=&quot;maptaskr_statictoken&quot; /&gt; &lt;attribute name=&quot;maptaskr_arcgisauthtype&quot; /&gt; &lt;attribute name=&quot;maptaskr_isforauthenticated&quot; /&gt; &lt;attribute name=&quot;maptaskr_additionalparameters&quot; /&gt; &lt;attribute name=&quot;maptaskr_sortorder&quot; /&gt; &lt;attribute name=&quot;maptaskr_isforenableexport&quot; /&gt; &lt;order descending=&quot;false&quot; attribute=&quot;maptaskr_sortorder&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;maptaskr_iscorporate&quot; value=&quot;1&quot; operator=&quot;eq&quot; /&gt; &lt;condition attribute=&quot;maptaskr_isforportal&quot; value=&quot;1&quot; operator=&quot;eq&quot; /&gt; &lt;/filter&gt; &lt;link-entity name=&quot;maptaskr_layergroup&quot; alias=&quot;layerGroup&quot; link-type=&quot;inner&quot; to=&quot;maptaskr_group_id&quot; from=&quot;maptaskr_layergroupid&quot;&gt; &lt;attribute name=&quot;maptaskr_name&quot; alias=&quot;layer_group_name&quot; /&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot; /&gt; &lt;/link-entity&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;layers&quot; : [ {% for result in layer_query.results.entities %} { &quot;maptaskr_iscorporate&quot; : &quot;{{ result.maptaskr_iscorporate }}&quot;, &quot;maptaskr_layername&quot; : &quot;{{ result.maptaskr_layername }}&quot;, &quot;maptaskr_securitygroupid&quot; : &quot;{{ result.maptaskr_securitygroupid }}&quot;, &quot;maptaskr_layersid&quot; : &quot;{{ result.maptaskr_layersid }}&quot;, &quot;maptaskr_layerurl&quot; : &quot;{{ result.maptaskr_layerurl }}&quot;, &quot;maptaskr_layertype&quot; : &quot;{{ result.maptaskr_layertype }}&quot;, &quot;maptaskr_layergroupid&quot; : &quot;{{ result.maptaskr_layergroupid }}&quot;, &quot;maptaskr_metadata_style&quot; : &quot;{{ result.maptaskr_metadata_style }}&quot;, &quot;maptaskr_hasauth&quot; : &quot;{{ result.maptaskr_hasauth }}&quot;, &quot;createdon&quot; : &quot;{{ result.createdon }}&quot;, &quot;maptaskr_securitylayertype&quot; : &quot;{{ result.maptaskr_securitylayertype }}&quot;, &quot;maptaskr_sharedto&quot; : &quot;{{ result.maptaskr_sharedto }}&quot;, &quot;maptaskr_password&quot; : &quot;{{ result.maptaskr_password }}&quot;, &quot;maptaskr_securitylayervalue&quot; : &quot;{{ result.maptaskr_securitylayervalue }}&quot;, &quot;maptaskr_username&quot; : &quot;{{ result.maptaskr_username }}&quot;, &quot;maptaskr_name&quot; : &quot;{{ result.maptaskr_name }}&quot;, &quot;maptaskr_arcgisauthapplication&quot; : &quot;{{ result.maptaskr_arcgisauthapplication }}&quot;, &quot;maptaskr_securitylayerkey&quot; : &quot;{{ result.maptaskr_securitylayerkey }}&quot;, &quot;maptaskr_zoomtoextent&quot; : &quot;{{ result.maptaskr_zoomtoextent }}&quot;, &quot;maptaskr_isforportal&quot; : &quot;{{ result.maptaskr_isforportal }}&quot;, &quot;maptaskr_statictoken&quot; : &quot;{{ result.maptaskr_statictoken }}&quot;, &quot;maptaskr_arcgisauthtype&quot; : &quot;{{ result.maptaskr_arcgisauthtype }}&quot;, &quot;maptaskr_isforauthenticated&quot; : &quot;{{ result.maptaskr_isforauthenticated }}&quot;, &quot;maptaskr_additionalparameters&quot; : &quot;{{ result.maptaskr_additionalparameters }}&quot;, &quot;maptaskr_sortorder&quot; : &quot;{{ result.maptaskr_sortorder }}&quot;, &quot;maptaskr_isforenableexport&quot; : &quot;{{ result.maptaskr_isforenableexport }}&quot;, &quot;layer_group_name&quot; : &quot;{{ result['layer_group_name'] }}&quot; } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h3"},{"title":"Maptaskr Lambpet Search​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-lambpet-search","content":" {% assign parentid = request.params['parentid'] | xml_escape %} {% fetchxml mtr_query %} &lt;fetch version=&quot;1.0&quot; output-format=&quot;xml-platform&quot; mapping=&quot;logical&quot; distinct=&quot;false&quot;&gt; &lt;entity name=&quot;maptaskr_lambpet&quot;&gt; &lt;attribute name=&quot;maptaskr_lambpetid&quot; /&gt; &lt;attribute name=&quot;maptaskr_name&quot; /&gt; &lt;attribute name=&quot;createdon&quot; /&gt; &lt;order attribute=&quot;maptaskr_name&quot; descending=&quot;false&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;maptaskr_parententityid&quot; operator=&quot;eq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;mtrshape&quot; : [ {% for result in mtr_query.results.entities %} { &quot;mtrobjectid&quot; : {{ result.maptaskr_lambpetid }} } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h2"},{"title":"Maptaskr Shape Search​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-shape-search","content":" {% assign parentid = request.params['parentid'] | xml_escape %} {% fetchxml mtr_query%} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;annotation&quot;&gt; &lt;attribute name=&quot;subject&quot; /&gt; &lt;attribute name=&quot;notetext&quot; /&gt; &lt;attribute name=&quot;filename&quot; /&gt; &lt;attribute name=&quot;documentbody&quot; /&gt; &lt;attribute name=&quot;annotationid&quot; /&gt; &lt;attribute name=&quot;objectid&quot; /&gt; &lt;order descending=&quot;false&quot; attribute=&quot;subject&quot; /&gt; &lt;link-entity name=&quot;maptaskr_lambpet&quot; alias=&quot;af&quot; link-type=&quot;inner&quot; to=&quot;objectid&quot; from=&quot;maptaskr_lambpetid&quot;&gt; &lt;attribute name=&quot;maptaskr_lambpetid&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;maptaskr_parententityid&quot; operator=&quot;eq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;/filter&gt; &lt;/link-entity&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;shapes&quot; : [ {% for result in mtr_query.results.entities %} { &quot;subject&quot; : &quot;{{ result.subject }}&quot;, &quot;notetext&quot; : &quot;{{ result.notetext }}&quot;, &quot;filename&quot; : &quot;{{ result.filename }}&quot;, &quot;documentbody&quot; : &quot;{{ result.documentbody }}&quot;, &quot;annotationid&quot; : &quot;{{ result.annotationid }}&quot;, &quot;documentname&quot; : &quot;{{ result[&quot;ag.dwer_name&quot;] }}&quot;, &quot;documenttype&quot; : &quot;{{ result.subject }}&quot;, &quot;lambpetid&quot; : &quot;{{ result.['af.maptaskr_lambpetid'] }}&quot; } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h2"},{"title":"Maptaskr Layer Groups​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-layer-groups","content":" {% fetchxml layer_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;maptaskr_layergroup&quot;&gt; &lt;attribute name=&quot;maptaskr_name&quot; /&gt; &lt;attribute name=&quot;maptaskr_layergroupid&quot; /&gt; &lt;attribute name=&quot;maptaskr_group_type&quot; /&gt; &lt;attribute name=&quot;createdby&quot; /&gt; &lt;order descending=&quot;false&quot; attribute=&quot;maptaskr_name&quot; /&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;layergroups&quot; : [ {% for result in layer_query.results.entities %} { &quot;maptaskr_name&quot; : &quot;{{ result.maptaskr_name }}&quot;, &quot;maptaskr_layergroupid&quot; : &quot;{{ result.maptaskr_layergroupid }}&quot;, &quot;maptaskr_group_type&quot; : &quot;{{ result.maptaskr_group_type }}&quot;, &quot;_createdby_value&quot; : &quot;{{ result.createdby }}&quot; } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h2"},{"title":"Maptaskr Related Shape Search​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-related-shape-search","content":" {% assign parentid = request.params['parentid'] | xml_escape %} {% assign parent_id_filter = &quot;&lt;value /&gt;&quot; %} {% fetchxml is_account_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;account&quot;&gt; &lt;attribute name=&quot;accountid&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;accountid&quot; operator=&quot;eq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} {% fetchxml is_contact_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;contact&quot;&gt; &lt;attribute name=&quot;contactid&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;contactid&quot; operator=&quot;eq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} {% assign is_account = false %} {% for account in is_account_query.results.entities %} {% assign is_account = true %} {% endfor %} {% assign is_contact = false %} {% for contact in is_contact_query.results.entities %} {% assign is_contact = true %} {% endfor %} {% assign filtered_parent_ids = &quot;&quot; %} {% if is_account %} {% fetchxml account_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;account&quot;&gt; &lt;attribute name=&quot;accountid&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;accountid&quot; operator=&quot;neq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} {% capture parent_id_filter %} {% for account in account_query.results.entities %} &lt;value&gt;{{account.accountid}}&lt;/value&gt; {% endfor %} {% endcapture %} {% elsif is_contact %} {% fetchxml contact_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;contact&quot;&gt; &lt;attribute name=&quot;contactid&quot; /&gt; &lt;filter&gt; &lt;condition attribute=&quot;contactid&quot; operator=&quot;neq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} {% capture parent_id_filter %} {% for contact in contact_query.results.entities %} &lt;value&gt;{{contact.contactid}}&lt;/value&gt; {% endfor %} {% endcapture %} {% endif %} {% fetchxml mtr_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;annotation&quot;&gt; &lt;attribute name=&quot;subject&quot; /&gt; &lt;attribute name=&quot;notetext&quot; /&gt; &lt;attribute name=&quot;filename&quot; /&gt; &lt;attribute name=&quot;documentbody&quot; /&gt; &lt;attribute name=&quot;annotationid&quot; /&gt; &lt;attribute name=&quot;objectid&quot; /&gt; &lt;order descending=&quot;false&quot; attribute=&quot;subject&quot; /&gt; &lt;link-entity name=&quot;maptaskr_lambpet&quot; alias=&quot;af&quot; link-type=&quot;inner&quot; to=&quot;objectid&quot; from=&quot;maptaskr_lambpetid&quot;&gt; &lt;attribute name=&quot;maptaskr_lambpetid&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;maptaskr_parententityid&quot; operator=&quot;in&quot;&gt; {{parent_id_filter}} &lt;/condition&gt; &lt;/filter&gt; &lt;/link-entity&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;shapes&quot; : [ {% for result in mtr_query.results.entities %} { &quot;subject&quot; : &quot;{{ result.subject }}&quot;, &quot;notetext&quot; : &quot;{{ result.notetext }}&quot;, &quot;filename&quot; : &quot;{{ result.filename }}&quot;, &quot;documentbody&quot; : &quot;{{ result.documentbody }}&quot;, &quot;annotationid&quot; : &quot;{{ result.annotationid }}&quot;, &quot;documentname&quot; : &quot;{{ result[&quot;ag.dwer_name&quot;] }}&quot;, &quot;documenttype&quot; : &quot;{{ result.subject }}&quot;, &quot;lambpetid&quot; : &quot;{{ result.['af.maptaskr_lambpetid'] }}&quot;, &quot;attributes&quot; : [ &quot;key&quot; : &quot;Name&quot;, &quot;Value&quot; : &quot;{{ result.subject }}&quot; ] } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h2"},{"title":"Maptaskr Layer Group Security Search​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-layer-group-security-search","content":" {% fetchxml layer_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;cr092_layertokens&quot;&gt; &lt;attribute name=&quot;cr092_name&quot; alias=&quot;name&quot; /&gt; &lt;order descending=&quot;false&quot; attribute=&quot;cr092_name&quot; /&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;token&quot;: [ {% for result in layer_query.results.entities %} { &quot;token&quot;: &quot;{{result.name}}&quot; } {% unless forloop.last %},{% endunless %} {% endfor %} ] }   ","version":"Next","tagName":"h2"},{"title":"Maptaskr Dataverse Layer​","type":1,"pageTitle":"Appendix A: Web Templates","url":"/docs/power-pages/installation-guide/appendix-a-web-templates#maptaskr-dataverse-layer","content":" {% assign parentid = request.params['parentid'] | xml_escape %} {% fetchxml account_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;account&quot;&gt; &lt;attribute name=&quot;accountid&quot; /&gt; &lt;attribute name=&quot;address1_longitude&quot; /&gt; &lt;attribute name=&quot;address1_latitude&quot; /&gt; &lt;attribute name=&quot;name&quot; /&gt; &lt;attribute name=&quot;websiteurl&quot; /&gt; &lt;attribute name=&quot;telephone1&quot; /&gt; &lt;filter type=&quot;and&quot;&gt; &lt;condition attribute=&quot;accountid&quot; operator=&quot;neq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;condition attribute=&quot;address1_latitude&quot; operator=&quot;not-null&quot; /&gt; &lt;condition attribute=&quot;address1_longitude&quot; operator=&quot;not-null&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} {% fetchxml contact_query %} &lt;fetch distinct=&quot;false&quot; mapping=&quot;logical&quot; output-format=&quot;xml-platform&quot; version=&quot;1.0&quot;&gt; &lt;entity name=&quot;contact&quot;&gt; &lt;attribute name=&quot;contactid&quot; /&gt; &lt;attribute name=&quot;address1_longitude&quot; /&gt; &lt;attribute name=&quot;address1_latitude&quot; /&gt; &lt;attribute name=&quot;lastname&quot; /&gt; &lt;attribute name=&quot;websiteurl&quot; /&gt; &lt;attribute name=&quot;telephone1&quot; /&gt; &lt;filter&gt; &lt;condition attribute=&quot;contactid&quot; operator=&quot;neq&quot; value=&quot;{{parentid}}&quot; /&gt; &lt;condition attribute=&quot;address1_latitude&quot; operator=&quot;not-null&quot; /&gt; &lt;condition attribute=&quot;address1_longitude&quot; operator=&quot;not-null&quot; /&gt; &lt;/filter&gt; &lt;/entity&gt; &lt;/fetch&gt; {% endfetchxml %} { &quot;layers&quot;: [ { &quot;LayerName&quot;: &quot;Accounts&quot;, &quot;LayerStrokeColor&quot;: &quot;#FF0000&quot;, &quot;LayerFillColor&quot;: &quot;#FF0000&quot;, &quot;LayerFeatures&quot;: [ {% for account in account_query.results.entities %} { &quot;FeatureName&quot;: &quot;{{account.accountid}}&quot;, &quot;FeatureGeometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [{{account.address1_longitude}},{{account.address1_latitude}}] }, &quot;FeatureAttributes&quot;: [ {&quot;key&quot;: &quot;Company Name&quot;, &quot;value&quot;:&quot;{{account.name}}&quot;}, {&quot;key&quot;: &quot;Website&quot;, &quot;value&quot;:&quot;{{account.websiteurl}}&quot;}, {&quot;key&quot;: &quot;Phone Number&quot;, &quot;value&quot;:&quot;{{account.telephone1}}&quot;} ] } {% unless forloop.last %},{% endunless %} {% endfor %} ] }, { &quot;LayerName&quot;: &quot;Contacts&quot;, &quot;LayerStrokeColor&quot;: &quot;#0000FF&quot;, &quot;LayerFillColor&quot;: &quot;#0000FF&quot;, &quot;LayerFeatures&quot;: [ {% for contact in contact_query.results.entities %} { &quot;FeatureName&quot;: &quot;{{contact.contactid}}&quot;, &quot;FeatureGeometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [{{contact.address1_longitude}},{{contact.address1_latitude}}] }, &quot;FeatureAttributes&quot;: [ {&quot;key&quot;: &quot;Company Name&quot;, &quot;value&quot;:&quot;{{contact.lastname}}&quot;}, {&quot;key&quot;: &quot;Website&quot;, &quot;value&quot;:&quot;{{contact.websiteurl}}&quot;}, {&quot;key&quot;: &quot;Phone Number&quot;, &quot;value&quot;:&quot;{{contact.telephone1}}&quot;} ] } {% unless forloop.last %},{% endunless %} {% endfor %} ] } ] }  ","version":"Next","tagName":"h2"},{"title":"Maptaskr for Power Pages Setup","type":0,"sectionRef":"#","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup","content":"","keywords":"","version":"Next"},{"title":"Upload Solution Files​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#upload-solution-files","content":" To upload solution file to your portal, navigate to Power Pages Management App.  To do this, click on the Application name in the Dynamics top ribbon next to the Dynamics 365 title as highlighted below.  A list of all available applications will be displayed. Please note that your list may not match the example below. Click on Portal Management.  Figure 30: Power Pages Management App​    Open Web Files under the Content section  Figure 31: Portal Management Web Files​    Create a New record with the following details:  Table 3: Create new Web File​  Column\tValueName\tinitmap.js Website\t*Select your portal website here* Parent Page\tHome Partial URL\tinitmap.js Publishing State\tPublished  Save the record and then select the Notes tab.  Figure 32: Add initmap.js note.​    In the Timeline control, click on the paperclip icon to upload a file.  Figure 33: Add note attachment.​    Upload the file described in the table below. Save and close the record.  Table 4: Solution Files to Upload​  File Name\tType\tSourceinitmap.js\tJavaScript\tInitMap Source  ","version":"Next","tagName":"h3"},{"title":"Entity Lists​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#entity-lists","content":" Maptaskr Entity Lists are required to be added. To add the relevant Lists  Navigate to Lists under the Content section.  Figure 34: Portal Management Lists​    The following entities needs to be created and enabled under Entity Lists -  Table 5: Entity Lists to Configure​  Name\tInternal Name\tView\tPage SizeMaptaskr Configuration List\tMaptaskr_configuration\tActive Configurations\t10,000 Maptaskr Lambpet List\tMaptaskr_lambpet\tActive Lambpets\t10,000  Click New to get the New List form. Populate the details as shown below.  Figure 35 – New Maptaskr Configuration List​    Note: that the website name here will be the website you are installing Maptaskr on.  Then to add a view click on the + View button as highlighted below. A new entry will appear and auto-populate with the default view for that table.  Figure 36: New List +View Configuration​      Scroll down to the Page Size column and set this one according to the table above.  Figure 37: List Page Size Configuration​    ","version":"Next","tagName":"h3"},{"title":"Site Settings​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#site-settings","content":" Maptaskr Site Settings are required to be added to the portal. To add the relevant Site Settings:  Navigate to Site Settings under the Website section.    Add the following Site Settings to enable communication with the entities -  Table 6: Site Settings​  Name\tValueWebapi/annotation/enabled\ttrue Webapi/annotation/fields\t* Webapi/maptaskr_configuration/enabled\ttrue Webapi/maptaskr_configuration/fields\t* Webapi/maptaskr_lambpet/enabled\ttrue Webapi/maptaskr_lambpet/fields\t* Webapi/maptaskr_layergroup/enabled\ttrue Webapi/maptaskr_layergroup/fields\t* Webapi/maptaskr_layers/enabled\ttrue Webapi/maptaskr_layers/fields\t*  An example of how to populate this record is shown below.  Figure 38: New Site Setting - Example​    ","version":"Next","tagName":"h3"},{"title":"Web Roles​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#web-roles","content":" Web Roles are required to ensure that portal users have permission to map related tables. Newly registered users should be configured to automatically be assigned to the below Web Role(s), this needs to be performed by a Power Apps Administrator.  Navigate to Web Roles under the Security section.  Figure 39.1: Add Web Role​    The following web role needs to be added/created:  Table 8: Web API User​  Property\tValueName\tWeb API User Authenticated Users Role\tYes Anonymous Users Role\tNo  Figure 39.2: New Web Role Creation​    Once you`ve entered the detail save and close the new active web role.  ","version":"Next","tagName":"h3"},{"title":"Table Permissions​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#table-permissions","content":" Navigate to Table Permissions under the Security section. From here you will need to create various table permissions as shown below.  Figure 40: Table Permissions​    Figure 41: New Table Permissions screen​    The following five (5) table permissions are required to be created:  Annotation PermissionLambpet PermissionMaptaskr Configuration PermissionMaptaskr Layer Group PermissionMaptaskr Layer Permission  Note: When creating table permissions, the ability to add Web Roles is only available after saving the record.  The table below gives an overview of the settings required for each table permission.  Table 9: Table Permissions Overview​  Name\tTable Name\tAccess Type\tPrivileges\tWeb RolesAnnotation Permission\tannotation\tGlobal\tRead, Write, Create, Delete, Append and Append To\tWeb API User Lambpet Permission\tmaptaskr_lambpet\tGlobal\tRead, Write, Create, Delete, Append and Append To\tAuthenticated Users, Web API User Maptaskr Configuration Permission\tmaptaskr_configuration\tGlobal\tRead\tWeb API User Maptaskr Layer Group Permission\tmaptaskr_layergroup\tGlobal\tRead\tWeb API User Maptaskr Layer Permission\tmaptaskr_layers\tGlobal\tRead\tWeb API User  Add Table Permissions to Web Roles​  Once the permissions in section Table Permissions have been created, they are required to be added to the Web API User previously created.  Head back to Web Roles and select the Web API role.  Figure 42: Add Table Permissions to Web Role​    From here go to the Related tab section and select Table PermissionsAdd the following permissions to Web API User as shown in Figure 42: Add Table Permissions to Web Role  Annotation Permission,Case Permission,Lambpet Permission,Maptaskr Configuration Permission,Maptaskr Layer Group Permission andMaptaskr Layer Permission  ","version":"Next","tagName":"h3"},{"title":"Web Templates​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#web-templates","content":" Navigate to Web Templates under the Content section. Here you will need to create multiple Web Templates as shown below.  Figure 43: Maptaskr Web Templates​    The table below shows Maptaskr Web Templates to add, including the name and source of each of the Maptaskr Web Templates that are required to be created. Please note that there are some specific considerations for the Maptaskr Custom Layer Search template detailed in the Maptaskr Custom Layer Search section.  Table 10: Maptaskr Web Templates to add.​  Web Template Name\tSourceMaptaskr Custom Layer Search\tSee Appendix A: Web Templates Maptaskr Lambpet Search Maptaskr Layer Group Search Maptaskr Related Shape Search Maptaskr Shape Search Maptaskr Dataverse Layer\t  Figure 44 – Web Template example source record.​    Maptaskr Custom Layer Search​  Due to differences between the Maptaskr Layer table that comes with the Maptaskr Core solution you will need to be mindful of the following fields in your template.  Core Solution version 2.2.1.58 and earlier DO NOT INCLUDE Static Token OR Additional Parameter fields in your template.Core Solution version 2.2.1.59 up to 2.2.1.63 DO NOT INCLUDE Additional Parameters field in your template.Core Solution version 2.2.1.64 up you can use both fields in your template without issue.  Updating other Web Templates​  The following information applies to out of the box installations of the Power Apps Power Pages/Portals.  Note: Please keep in mind that if you have a highly customized setup, Power Apps Administrators will need to configure Web Templates for Maptaskr. This can be done by updating the default Web Templates or by creating new Web Templates for specific forms.  Navigate to the Active Web Templates list under the Content section.  Figure 45: Edit Web Template​    Edit Full Page without Child Links    Update the following template source to include reference to initmap.js–  Note: Replace only the highlighted area with correct reference filename.  &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js&quot; type=&quot;text/javascript&quot;&gt; &lt;/script&gt; &lt;script src=&quot;/initmap.js&quot; type=&quot;text/javascript&quot;&gt; &lt;/script&gt;   ","version":"Next","tagName":"h3"},{"title":"Page Templates​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#page-templates","content":" The following five (5) Maptaskr Page Templates are required to be created;  Maptaskr Custom Layer SearchMaptaskr Lambpet SearchMaptaskr Shape SearchMaptaskr Layer Group SearchMaptaskr Related Shape Search Note: Please ensure you untick the &quot;Use Website Header and Footer&quot; checkbox when creating the Page Templates.  Figure 46: Untick &quot;Use Website Header and Footer&quot; checkbox.​    Navigate to Page Templates under the Website section and click New to create the Page Templates as specified in Table 11: Maptaskr Page Templates.  Figure 47: Page Templates​    Table 11: Maptaskr Page Templates​  Name\tType\tWeb Template\tUse Website Header and FooterMaptaskr Custom Layer Search\tWeb Template\tMaptaskr Custom Layer Search\tFalse Maptaskr Lambpet Search\tWeb Template\tMaptaskr Lambpet Search\tFalse Maptaskr Shape Search\tWeb Template\tMaptaskr Shape Search\tFalse Maptaskr Layer Group Search\tWeb Template\tMaptaskr Layer Group Search\tFalse Maptaskr Related Shape Search\tWeb Template\tMaptaskr Related Shape Search\tFalse  ","version":"Next","tagName":"h3"},{"title":"Web Pages​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#web-pages","content":" The following five (5) Maptaskr Web Pages are required to be created;  Maptaskr Custom Layer SearchMaptaskr Lambpet SearchMaptaskr Shape SearchMaptaskr Layer Group SearchMaptaskr Related Shape Search  Navigate to Web Pages under the Content section. Click Add and create the required pages as outlined in Table 12: Maptaskr Web Pages to create.  Figure 48: Maptaskr Web Pages​    Table 12: Maptaskr Web Pages to create.​  Name\tParent Page\tPartial-URL\tPage Template\tPublishing StateMaptaskr Custom Layer Search\tHome\tcustom-layer-search\tMaptaskr Custom Layer Search\tPublished Maptaskr Lambpet Search\tHome\tmaptaskr-lambpet-search\tMaptaskr Lambpet Search\tPublished Maptaskr Shape Search\tHome\tmaptaskr-shape-search\tMaptaskr Shape Search\tPublished Maptaskr Layer Group Search\tHome\tmaptaskr-layergroups\tMaptaskr Layer Group Search\tPublished Maptaskr Related Shape Search\tHome\tmaptaskr-related-shape-search\tMaptaskr Related Shape Search\tPublished  ","version":"Next","tagName":"h3"},{"title":"Advanced/Multistep & Basic Forms​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#advancedmultistep--basic-forms","content":" To enable shape submission functionality from the Maptaskr PCF in forms, a small JavaScript code snippet needs to be included as part of the form step question.Note: Forms within Dynamics 365 needs to be configured, and a new section needs to be created. For more details, please refer to Table Setup. The following sections provide an overview of where and how to add the code snippet to either a Basic or Multistep form.  Basic Form – (Create &amp; Edit)​  Navigate to the Basic Form you are wanting to configure by Going to Basic Forms and clicking on the form listed. For the below example we will be using the simple contact us form.  Figure 49: Basic Form​    From the ribbon menu click on Additional Settings and scroll down to the Custom JavaScript section at the bottom of the page.  Figure 50: Basic Form Additional Settings​    In the Custom JavaScript section paste in the following code snippet found at Appendix B: Custom Javascript, and click Save.  Figure 51: Insert Custom JavaScript​    ","version":"Next","tagName":"h3"},{"title":"Advanced/Multistep Form (Create & Edit)​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#advancedmultistep-form-create--edit","content":" Navigate to the Multistep Form you are wanting to configure by going to Multistep Forms. For this example we will be showing the Account Create Form that has a map control on the Location form step.  Figure 52: Multistep Form 1.​    From the ribbon menu click on -&gt; Form Steps and select the Name of the form step you will have the PCF control embedded.  Figure 53: Multistep Form – Form Steps​    Once in the step, click on the Form Options ribbon options and scroll down to the Custom JavaScriptsection where you will need to insert the code snippet found at Appendix B: Custom Javascript, and click Save.  Figure 54: Insert Custom JavaScript​    ","version":"Next","tagName":"h3"},{"title":"Basic/Advanced Form Metadata​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#basicadvanced-form-metadata","content":" Once table columns have been set up and configured as per Table Setup, it is important to add Form Metadata in the Portal Management app. For the relevant Basic Form or Advanced Step Form (If you don't see the Metadata tab, click on Related or the three-dot icon), create a new record and enter the following details:  ","version":"Next","tagName":"h2"},{"title":"Basic Form​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#basic-form","content":" Navigate to the Basic Form you are wanting to configure by Going to Basic Forms and clicking on the form listed. For the below example we will be using the simple contact us form.  Figure 55: Basic Form - Basic Form Metadata​    Click on the + New Basic Form Metadata button.  Figure 56: New Basic Form Metadata​    Fill in the details according to Table 13: Basic Form Metadata details and click Save.  Figure 57: Create New Basic Form Metadata​    Table 13: Basic Form Metadata details​  Property\tValueBasic Form\t&lt;Name of your Basic Form&gt; Type\tAttribute Control Style\tCode Component Attribute Logical Name\tPCF Bind Field as configured in Table Setup  ","version":"Next","tagName":"h3"},{"title":"Advanced Form​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#advanced-form","content":" Navigate to the Multistep Form you are wanting to configure by going to Multistep Forms. For this example, we will be showing the Account Create Form that has a map control on the Location form step.  Figure 58: Multistep Form​    From the ribbon menu click on -&gt; Form Steps and select the Name of the form step you will have the PCF control embedded.  Figure 59: Multistep Form – Form Steps​    Click on Related in the ribbon and select Metadata.    Click on the + New Basic Form Metadata button.  Figure 60: New Multistep Form Metadata​    Fill in the details according to Table 14: Multistep Form Metadata Details details and click Save.  Figure 61: Create New Multistep Form Metadata​    Table 14: Multistep Form Metadata details​  Property\tValueForm Step\t&lt;Enter the name of your Form Step&gt; Type\tAttribute Control Style\tCode Component Attribute Logical Name\tPCF Bind Field as configured in Table Setup  ","version":"Next","tagName":"h3"},{"title":"InitMap.js​","type":1,"pageTitle":"Maptaskr for Power Pages Setup","url":"/docs/power-pages/installation-guide/maptaskr-for-power-pages-setup#initmapjs","content":" The initmap JavaScript file is the bridge between form submission and Maptaskr.  The saveAnnotationsAndShapes method is executed upon clicking the submit button. This function first validates the submission via the validateAnnotationsAndShapes function, which in turn calls the clientValidationFunction, checking for any intersections or exclusions. If validation fails an exception is thrown, the submission is cancelled, and an error message is displayed to the user.  After the validation is successful the saveAnnotationsAndShapes function performs the saving/updating/deleting of submission data in addition to the out-of-the-box save functionality.  This file can be tweaked to your requirements. We recommend modifying the variables and clientValidationFunction at the start of the file to suit your needs. If necessary other functions in initmap can be modified for advanced requirements, though this is not recommended for most applications.    The start of the file contains variables that can be changed to suit your requirements. These are:  maptaskrEntityDefinition – This is an array of objects that is used to configure entity names when writing Maptaskr Lambpet data back to Dynamics 365 during submission. Each object contains 4 parameters:pathName – The partial URL of the page that the PCF control is loaded on.relationshipName - The schema name of the lookup field related to your entity configured within Maptaskr Lambpet, please note that this field is case sensitive.entityName – The schema name of the entity, please note that this field is case sensitive.entityPluralName – The plural name of the entity, please note that this field is case sensitive.onValidateFailErrorMessage – If the validation of the submission were to be unsuccessful, this will be the validation error message displayed to the end user.onUploadFailErrorMessage – If any step of the upload process were to be unsuccessful, this will be the error message displayed to the end user.OnIntersectionMessage – If the users uploaded or drawn shapes and annotations fail the intersection or exclusion tests against configured layers, this will be the error message displayed to the user.clientValidationFunction - If custom validation is required it can be implemented here. The Maptaskr scripts will invoke this function during validation when the user submits. The function should throw an error if validation fails or do nothing if validation passes. The Maptaskr scripts will handle any errors thrown, cancelling saving and navigation if any errors are thrown.  The data model for saving Maptaskr data into Dynamics 365 is as per the following two sections. ","version":"Next","tagName":"h3"},{"title":"PCF Integration and Configuration Within Forms","type":0,"sectionRef":"#","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms","content":"","keywords":"","version":"Next"},{"title":"Create A Solution​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#create-a-solution","content":" To facilitate the required configuration, you will need to create a Solution within your Power Platform or D365 environment, with which you can apply the Maptaskr control and apply configuration. This will require a knowledge of Microsoft's Power Platform.  For more information on the topic, please visit Microsoft's website:  Solutions in Power Apps - Power Apps | Microsoft Learn1  For the purposes of this instruction guide, we will be leveraging the following Solution as an example. Please ensure the same or similar solution has been created in your Power Platform environment.  Figure 8: Creating a new Solution.​    ","version":"Next","tagName":"h3"},{"title":"Table Setup​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#table-setup","content":" Prior to integrating Maptaskr for Power Pages it is essential to generate and configure some Table columns. If you intend to have multiple maps with different settings and symbology, then it's recommended to perform this setup for each Table.  Here you see an example of the Account entity being configured for the PCF Portal components:  Open your Portal Customization Solution  Click Add Existing -&gt; Table.  Figure 9: Add an existing table.​    Select the Table you wish to configure.  Figure 10: Selecting the existing 'Account' table.​    (In the example screenshot, we select the Account table.)  Be sure NOT to include any objects or table metadata.  Figure 11: deselecting all objects and table metadata.​    Once added, Select the Table.  Figure 12: Selecting the 'Account' table.​    And under Columns Add the required columns to the entity. See figure below and in Table 1: Maptaskr PCF Configurations.  Figure 13: New column to bind PCF.​    For the required column refer to Table 1: Maptaskr PCF Configurations below. Note: All the added columns should be Optional, and NONE of these columns should be marked as searchable.  Table 1: Maptaskr PCF Configurations​  Name\tType\tAdditional Options\tNotePCF Bind Field\tText -&gt; Multiple lines of text -&gt; Plain Text\tFormat: Text\tUsed to bind the PCF to a form   Figure 14: All columns added should be optional, and not searchable.​    Note: The name of these columns is for reference only and not crucial in this process. You can name them at your discretion, however it is suggested that you follow the guide, as these column names are referenced later in the document.  Figure 15: New column created (Example)​    ","version":"Next","tagName":"h3"},{"title":"Establishing Relationships to Maptaskr Lambpet​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#establishing-relationships-to-maptaskr-lambpet","content":" It is also required that you establish lookup fields in the Maptaskr Lambpet entity to each table that you intend to use the PCF on the portal.  To do this, you will need to add the Maptaskr Lambpet table to your Portal Customization Solution.  ","version":"Next","tagName":"h2"},{"title":"Adding the Maptaskr Lambpet table reference​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#adding-the-maptaskr-lambpet-table-reference","content":" Firstly, add the Maptaskr Lambpet entity as an existing table to your existing solution.  Figure 16: Adding a new existing table to our custom solution.​    Figure 17: Selecting the Maptaskr Lambpet table.​    Next, ensure that no other objects or table metadata is included. (To ensure that nothing pre-existing gets overwritten).  Figure 18: Removing all objects to be imported to the solution.​    Once the table is added, we will need to add a column for each entity added in Table Setup  ","version":"Next","tagName":"h3"},{"title":"Adding the entity relationship columns to the Lambpet table​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#adding-the-entity-relationship-columns-to-the-lambpet-table","content":" For each entity you added to the Portal Customization Solution, you will need to create a Lookup table in Maptaskr Lambpet to allow the map to cross reference entities at load time.  To do this, open the Maptaskr Lambpet table from within your Portal Customization Solution, and select Columns.  Figure 19: Heading to Maptaskr Lambpet table to add new columns.​    Add the new column with the display name of the entity reference.  Figure 20- Creating a lookup field. Highlighted is the schema name used in initmap.js. Please note that your column prefix could be different to &quot;new_&quot; depending on the selected publisher of your solution.​    Note that the name of the Relationship and schema will change based on your company publisher  Figure 21: Adding the Relationship name.​    Once this is complete, note down the schema name, and relationship name for later reference.  ","version":"Next","tagName":"h3"},{"title":"PCF Installation​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#pcf-installation","content":" To Install the PCF Component, you will need to navigate to the Power Apps2 interface and select your target environment.  Navigate to Solutions  Figure 22: Solutions list​    Import the MaptaskrPCF Solution into your environment. Note: The name of the solution file below may differ from the one you have available for installation. Typically, files are named in the following format MaptaskrPCF_X.X.X.X_Managed.zip.  Figure 23: Import the Maptaskr PCF solution.​    ","version":"Next","tagName":"h2"},{"title":"Form Integration​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#form-integration","content":" The PCF control can now be added to a form of your choice for configuration. The example below shows the adding of a control to the Account PCF Form of the Account table.  Select the form you wish to add the control to and click Edit.  Figure 24: Edit form.​    Add the column &quot;PCF Bind Field&quot; where you want to display the PCF. It is recommended that this column is contained in a separate tab on the form.    In the left navigation pane of the form editor, select &quot;Components&quot; and click on &quot;Get more components&quot;. In the search bar type in &quot;Maptaskr PCF&quot;, select the result and click &quot;Add&quot;.  Figure 25: Form Components list​    Figure 26: Get Maptaskr PCF Component​    Now the PCF is added into your environment list of components!  Click back on the &quot;PCF Bind Field&quot; column you have added previously and on the properties tab on the right side of the screen find the dropdown labelled &quot;Components&quot;. Click the &quot;+ Components&quot; button and select the &quot;Maptaskr PCF&quot; component.  Figure 27: Add PCF component.​    Figure 28: Add PCF Component​    You will now be prompted with a popup to bind the control to columns. As per your requirements assign the columns generated in Table Setup to each respective configuration option.  ","version":"Next","tagName":"h2"},{"title":"PCF Component Settings​","type":1,"pageTitle":"PCF Integration and Configuration Within Forms","url":"/docs/power-pages/installation-guide/pcf-integration-and-configuration-within-forms#pcf-component-settings","content":" An overview of each of the PCF control available settings and description of what they entail is found in the below table.  Table 2: PCF Control Settings Overview​  Group Name Description Type Design Height of Map (CSS) Specify the height of the map container. If left empty this will default to 400px Free text (CSS height format) e.g. 100vh or 500px. Features Show Map Download? This setting will enable/disable the ability to download a version of the map by showing or hiding the map download button. Free text – YesNo Map Download Format This setting changes the downloadable version of the map as either a PDF or image. Free text – PDFImage Note: Image is PNG format. Show Scale Bar? This setting will enable/disable the display of a scale bar, which provides a visual indication of distance on the map. Free text – YesNo Show Extent Controls? This setting will enable/disable the display of the map extent controls. After a zoom or pan action is complete on the map the current view is stored as an extent and these controls enable the user to navigate across all the stored views. Free text – YesNo Show Layers Search? Show or hide the layers search. Free text – YesNo Default Tab Opened The tab that should be opened when the app loads. Free text – NoneSearchUploadMeasureLayersLegendHelp Pre-Selected Layers Allows the setting of preselected layers to activate by default when the map first loads on the page. Free text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format, see Pre-Selected, Exclusion, and Intersection Layer Configuration. Snap Selected Layers? Allows the setting of preselected layers to activate snap to when drawing on the map. Note: Required to be an ArcGIS Feature Server service layer. Free text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format, see Pre-Selected, Exclusion, and Intersection Layer Configuration. Trace Selected Layers? Allows the setting of preselected layers to activate tracing when drawing on the map. Note: Required to be an ArcGIS Feature Server service layer. Free text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format, see Pre-Selected, Exclusion, and Intersection Layer Configuration. Exclusionary Selected Layers? Allows the setting of preselected layers to act as exclusion zones when drawing/uploading shapes on the map. Note: Required to be an ArcGIS Feature Server service layer. Free text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration. And Intersection Detection Intersection Selected Layers Allows the setting of preselected layers to act as intersect zones when drawing/uploading shapes on the map. Note: Required to be an ArcGIS Feature Server service layer. Once a shape has either been drawn or uploaded, a validation button appears which they can use to trigger intersect detection. Free text – CSV format of layers to be used. In the following format. Layer Name/Sub-layer Name, Layer Name/Sub-layer Name, ... e.g. Industry and Mining/Mining Tenements (DMIRS-003), Application Details/application_details, … For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration. And Intersection Detection Intersection Warning Buffers Sets the warning buffer, in meters, for intersection layers set for intersection detection. Users will be given a warning if any shape draw or uploaded encroaches within the buffer set. Free text – CSV format. e.g. 1000, 500, … Note: Maps directly to the layer names that are preconfigured in theIntersection Layers. In meters (m). For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration. And Intersection Detection Intersection Error Buffers Sets the error buffer in meters, for intersection layers configured in the section above. Users will be given an error if any shape drawn or uploaded encroaches within the buffer set. Free text – CSV format. e.g. 1000, 500, … Note: Maps directly to the layer names that are preconfigured in theIntersection Layers. In meters (m). For more information on layer name format and Intersection Detection, see Pre-Selected, Exclusion, and Intersection Layer Configuration. And Intersection Detection Auto-Collapse tabs Set the left tab pane to auto hide when user is drawing on the map. Free text – YesNo Constraint Boundaries Set the constraint boundary area for the map, both viewable and searchable. Free text – CSV format of latitudes and longitudes representing the top left, and bottom right coordinates that determine the constraint boundaries. Coordinates to be provided in the following format: MINLONG,MINLAT,MAXLONG MAXLAT e.g. 115.48423048,-31.91915005, 116.17587173,-32.28607507 Note: Must not contain spaces. Uploads Show Annotation Control? Show or hide Annotation Control within the Annotate tab. Free text – YesNo Annotation Color Sets the default color used for all annotations on the map. Free text – HEX color to be used. e.g. #A020F0 Allowed Upload Types Set what type of submission shapes are allowed for this map. Free text – UploadDrawBoth Allowed Shapefile Projections Allowed Shapefile Projections, please provide in latest WKID format (e.g. 7844) and comma separated to allow multiple projections. Free text – CSV format of WKID projections to be allowed. In the following format. wkidformat, wkidformat, … e.g. 7844, … Where 7844 is the code for GDA2020. See https://epsg.io/ for more projections listing. Number of Shapes Allowed Sets the number of allowed shapes to be either drawn or uploaded depending on how the control is configured. Integer e.g. Setting this to 2 will allow the upload or drawing of 2 different shape submissions. NOTE: Setting this to -1 will allow unlimited shapes to be submitted. If there are more shapes allowed than there are specified shape names, a [+] button is added to allow more to be loaded dynamically. Names of Uploads Enables the predefined setting of the shape names. Free text – CSV format. e.g. Permit Boundary, Footprint, … Note: Names for the shapes will be loaded from the name CSV and if there are not enough names, the control will use the name Shape X where X is the shape number. Line Color of Uploads Enables the predefined setting of the shape stroke color. Maps directly to the shape names that are preconfigured. Free text – CSV format of HEX colors to be used. e.g. #A020F0, #B0B0F0, … Note: Alpha Hex can also be used: e.g. #A020F0&lt;strong&gt;88&lt;/strong&gt; Fill Color of Uploads Enables the predefined setting of the shape fill color. Please note that this automatically applies an opacity of 10%. If no fill is required, then simply leave this field blank. Maps directly to the shape names that are preconfigured. Free text – CSV format of HEX colors to be used. e.g. #A020F0, #B0B0F0, … Note: Alpha Hex can also be used: #A020F0&lt;strong&gt;88&lt;/strong&gt; Line Style of Uploads Enables the predefined setting of the stroke line to be dashed or solid for shapes. Maps directly to the shape names that are preconfigured. Free text – CSV format of Boolean values to determine if lines will be dashed or not. True indicating lines will be dashed. False indicating lines will be solid. e.g. true, false, true Load Shapes? Load shapes from Shape Custom Endpoint. Free text – YesNo Tabs Show Search Tools? This setting will enable/disable the display of the layer search tools. This feature is an add-on to Show layer list and will enable the user to perform a polygon or keyword search against all configured layers. Free text – YesNo Show Basemap? Show or hide the basemap selector. Free text – YesNo Show Measurement Tools? This setting will enable/disable measurement tools. Measurement tools consist of line length and polygon area drawing tools that are ignored for data submission. Free text – YesNo Show Drawing and Upload Controls? This setting will enable/disable the drawing and upload controls. Free text – YesNo Show Layer List? This setting will enable/disable the display of layers. Free text – YesNo Show Legend? Show or hide the legend. Free text – YesNo Show Help Guide? This setting will enable/disable the display of the help guide. The help guide contains instructions on how to utilise the map`s features. Free text – YesNo Advanced Shape Custom Endpoint This property will determine what endpoint to hit to retrieve the shapes to load on the map. If you don't provide a custom endpoint for this option, it will default to &quot;/maptaskr-shape-search/&quot;. Free text Make sure to add / at the start and end Related Shape Custom Endpoint This field will determine if the map should load shapes saved against the table record. Enabling this configuration item requires a custom endpoint, otherwise it defaults to &quot;/maptaskr-shape-search/&quot;. It is not recommended to enable this feature unless you intend to also configure a custom endpoint. Note: Related shapes are not editable. Free text Make sure to add / at the start and end Load Related Shapes? Load related shape Load shapes from Related Shape Custom Endpoint. Free text – YesNo Load Dataverse Layers? Load dataverse record locations and display them on the map as pins. Always uses the `/maptaskr-dataverse-layers/' by default unless a custom endpoint is provided as per below. Free text – YesNo Load Dataverse Layers Custom Endpoint This field will determine if the map should load dataverse layers from a different location. Enabling this configuration item requires a custom endpoint, otherwise it defaults to &quot;/maptaskr-dataverse-layers/&quot;. It is not recommended to enable this feature unless you intend to also configure a custom endpoint. Free text Make sure to add / at the start and end Help Guide Custom Endpoint This property will set a custom endpoint to use as a source for the help guide. If you don't provide an endpoint for this option, it will show the default Maptaskr help guide. Free text Make sure to add / at the start and end Number of Concurrent Intersection Calls Sets the maximum number of concurrent intersect detection calls the map will be able to make. If more are required, these will be batched accordingly. E.g. If there are 2 shapes and 5 intersection layers, 10 intersection calls will be made. Free text Default – 20 Token Refresh Interval In Minutes Sets the token refresh interval. This is how often (in minutes) the control should query the Maptaskr Layer Group Security endpoint to get the latest tokens. Setting this value to 0 will disable token refresh intervals. Free text Default – 0  Once all items have been configured to your preference click on Done to confirm the settings of the PCF. The PCF Bind Field will then appear as shown below.  Figure 29: PCF added to form.​    Note: The map will not show a preview due to the nature of the PCF control. Rather, if the PCF control has been added successfully, it will display in the form edit mode with the Maptaskr Map will render here message.  Footnotes​ https://learn.microsoft.com/en-us/power-apps/maker/data-platform/solutions-overview ↩ https://make.powerapps.com ↩ ","version":"Next","tagName":"h2"},{"title":"Appendix B: Custom JavaScript","type":0,"sectionRef":"#","url":"/docs/power-pages/installation-guide/appendix-b-custom-javascript","content":"","keywords":"","version":"Next"},{"title":"Initmap.js​","type":1,"pageTitle":"Appendix B: Custom JavaScript","url":"/docs/power-pages/installation-guide/appendix-b-custom-javascript#initmapjs","content":" /* * VARIABLES FOR THE INITMAPS */ const maptaskrEntityDefinition = [ { pathName: &quot;create-case&quot;, //url of the page the PCF control is loaded on relationshipName: &quot;contoso_Incident&quot;, //case sensitive, recommended to use the lookup field logical name entityName: &quot;incident&quot;, //case sensitive, recommended to use the lookup field logical name entityPluralName: &quot;incidents&quot; //case sensitive }, { pathName: &quot;edit-case&quot;, //url of the page the PCF control is loaded on relationshipName: &quot;contoso_Incident&quot;, //case sensitive, recommended to use the lookup field logical name entityName: &quot;incident&quot;, //case sensitive, recommended to use the lookup field logical name entityPluralName: &quot;incidents&quot; //case sensitive }, { pathName: &quot;account&quot;, //url of the page the PCF control is loaded on relationshipName: &quot;maptaskr_Account&quot;, //case sensitive, recommended to use the lookup field logical name entityName: &quot;account&quot;, //case sensitive, recommended to use the lookup field logical name entityPluralName: &quot;accounts&quot; //case sensitive } ] const onValidateFailErrorMessage = 'Please upload a file or draw a shape'; //error message to display when the map validation errors const onUploadFailErrorMessage = 'Something has gone wrong during submission, please check your connection and try again.'; const onIntersectionMessage = 'Intersections / Exclusions have been found, please check your shapes and try again.'; const clientValidationFunction = async() =&gt; { //user defined validation function, can use the following for getting the list of shapes, annotations and uploaded files. //if the user needs to fix the shapes, throw an error. //let shapes = _getShapes(); //let annotation = _getAnnotation(); //let uploads = _getUploadedFiles(); //testing shape intersections and determine what to do with them const shapeIntersections = await _getShapeIntersections(); if (shapeIntersections &amp;&amp; shapeIntersections.length &gt; 0){ if (shapeIntersections.some(res =&gt; res.intersectionType == 'Warning')) { //decide what to do with warnings //if you want them resolved, throw an error here.. //throw new Error(onIntersectionMessage); } if (shapeIntersections.some(res =&gt; res.intersectionType == 'Error')) { //decide what to do with warnings //if you want them resolved, throw an error here.. throw new Error(onIntersectionMessage); } if (shapeIntersections.some(res =&gt; res.intersectionType == 'Exclusion')) { //decide what to do with warnings //if you want them resolved, throw an error here.. throw new Error(onIntersectionMessage); } } //you can also test to make sure your shapes are in the correct position, orintation, contained within eachother, any geometric tests here. //shapes will come in the format: // { // &quot;type&quot;: &quot;FeatureCollection&quot;, // &quot;features&quot;: [ // { // &quot;type&quot;: &quot;Feature&quot;, // &quot;geometry&quot;: { // &quot;type&quot;: &quot;Polygon&quot;, // &quot;coordinates&quot;: [ // [ // [ // 12899598.276481498, // -3758060.96802893 // ], // ... // ] // ] // }, // &quot;properties&quot;: { // &quot;uploadDocType&quot;: &quot;Envelope&quot;, // &quot;markerType&quot;: &quot;MARKER_SHAPE&quot; // } // } // ], // &quot;DocumentType&quot;: &quot;Envelope&quot;, // &quot;annotationId&quot;: &quot;1ffb72d6-c7c3-ed11-83fd-002248e1bcf1&quot;, // &quot;longlat&quot;: [ // 12899440.776481498, // -3758143.46802893 // ], // &quot;styleProperty&quot;: { // &quot;geometry_&quot;: null, // &quot;fill_&quot;: { // &quot;color_&quot;: &quot;rgba(149,255,0,0.1)&quot; // }, // ... // } // } //if you require a specific subset of objects, please look into the shapes, annotations, or uploads to ensure specific number of shapes or named shapes are included. } /* * STOP EDITING HERE - Unless you require customized validation and saving functionality. * * */ (function (webapi, $) { function safeAjax(ajaxOptions) { var deferredAjax = $.Deferred(); shell.getTokenDeferred().done(function (token) { // add headers for AJAX if (!ajaxOptions.headers) { $.extend(ajaxOptions, { headers: { &quot;__RequestVerificationToken&quot;: token } }); } else { ajaxOptions.headers[&quot;__RequestVerificationToken&quot;] = token; } $.ajax(ajaxOptions) .done(function (data, textStatus, jqXHR) { validateLoginSession(data, textStatus, jqXHR, deferredAjax.resolve); }).fail(deferredAjax.reject); //AJAX }).fail(function () { deferredAjax.rejectWith(this, arguments); // on token error pass the token AJAX and args }); return deferredAjax.promise(); } webapi.safeAjax = safeAjax; })(window.webapi = window.webapi || {}, jQuery); //helpers to get the current entity and id function _getCurrentEntityName() { var currentPageEntity = maptaskrEntityDefinition.filter((x) =&gt; window.location.pathname.includes(x.pathName)); if (currentPageEntity.length == 1) return currentPageEntity[0]; return { pathname: null, entityPluralName: null }; } function _getParentId(checkProposal) { var url = new URL(window.location.href); const urlSearchParams = new URLSearchParams(url.search); var parentId = $(&quot;#EntityFormView_EntityID&quot;).val(); if (checkProposal) { var recordId = $(&quot;#id&quot;).val(); } if (recordId != null || recordId != undefined) { parentId = recordId; } if (!parentId) { //if you want to use custom query params to read ID of the record var parentId = urlSearchParams.get(&quot;id&quot;); } return parentId; } //VALIDATE SHAPE CONTENT async function validateAnnotationsAndShapes() { window.maptaskrPCF.handleLoadingSpinner(true, &quot;Validating shape...&quot;); try { await clientValidationFunction(); return true; } catch(err) { showPortalWarning(err); } return false; } //SAVE CONTENT function saveAnnotationsAndShapes() { return new Promise(async (resolve, reject) =&gt; { var parentId = _getParentId(false); try { let clientValidationSuccess = await validateAnnotationsAndShapes(); if (clientValidationSuccess) { window.maptaskrPCF.handleLoadingSpinner(true, &quot;Saving shape...&quot;); //if we have any lambpetIds - we have already loaded objects. if (_getShapeLambpetIds() &amp;&amp; _getShapeLambpetIds().length &gt; 0) { await _deleteRemovedShapes(); } await _addNewShapes(parentId); resolve(); } else { reject(); } } catch (err) { showPortalWarning(onUploadFailErrorMessage); reject(err) } }); } //functions for deleting, adding, and creating in D365. function _deleteRemovedShapes() { return new Promise(async (resolve, reject) =&gt; { var remainingShapes = _getShapes(); var remainingAnnotation = _getAnnotation(); var lambpets = _getShapeLambpetIds(); for (var i = 0; i &lt; lambpets.length; i++) { var existingAnnotationId = lambpets[i].id.split(&quot;___&quot;)[1]; //used in comparison against existing shapes let existingLambpetId = lambpets[i].id.split(&quot;___&quot;)[0]; //used in the delete functionality let existingShapeName = lambpets[i].name; if (existingAnnotationId) { try { let shapeStillExists = false; //if the user has deleted this lambpet... remove it from the system if (remainingShapes &amp;&amp; remainingShapes.filter((s)=&gt; s.annotationId == existingAnnotationId)?.length &gt; 0) { shapeStillExists = true; } //if the user has deleted this lambpet... remove it from the system if (remainingAnnotation &amp;&amp; remainingAnnotation.annotationId == existingAnnotationId) { shapeStillExists = true; } if (!shapeStillExists) { setProgressDialogMessage(`Deleting existing '${existingShapeName}'...`); await webapi.safeAjax({ type: &quot;DELETE&quot;, url: `/_api/maptaskr_lambpets(${existingLambpetId})`, contentType: &quot;application/json&quot;, }); window.maptaskrPCF.fire(&quot;LambpetDeleted&quot;, existingLambpetId); } } catch (err) { reject(err); } } } //if we get through all shapes to be deleted, and succeed. resolve(); }); } async function _addNewShapes(parentId){ try{ await _addLambpets(parentId, _getShapes(true), true); //add shapes (as children) //if (annotation is new) let annotation = _getAnnotation(); if (annotation &amp;&amp; annotation.annotationId == null) { await _addLambpet(parentId, annotation, false); //add the NEW annotations as D365 } await _attachOriginalFilesToEntity(parentId, _getUploadedFiles()); return; }catch(err){ throw err; } } function _addLambpets(entityId, areas) { var promises = []; for (var i = 0; i &lt; areas.length; i++) { promises.push(_addLambpet(entityId, areas[i])); } return Promise.all(promises); } function _addLambpet(parentId, area, isChildShape = true) { var tableNames = _getCurrentEntityName(); var data = { &quot;maptaskr_name&quot;: area.DocumentType, &quot;maptaskr_parententityid&quot;: parentId, &quot;maptaskr_json&quot;: area.styleProperty ? JSON.stringify(area.styleProperty) : &quot;null&quot;, &quot;maptaskr_ischild&quot;: isChildShape, &quot;maptaskr_longitude&quot;: area.longlat[0], &quot;maptaskr_latitude&quot;: area.longlat[1], }; data[`${tableNames.relationshipName}@odata.bind`] = `/${tableNames.entityPluralName}(${parentId})`; setProgressDialogMessage(`Adding new '${area.DocumentType}'...`); return new Promise((resolve, reject) =&gt; { webapi.safeAjax({ type: &quot;POST&quot;, url: &quot;/_api/maptaskr_lambpets&quot;, contentType: &quot;application/json&quot;, data: JSON.stringify(data), success: function (res, status, xhr) { var lambpetId = xhr.getResponseHeader(&quot;entityid&quot;); window.maptaskrPCF.fire(&quot;LambpetCreated&quot;, lambpetId, JSON.stringify(data)); _createAnnotation(lambpetId, JSON.stringify(area), area).then(() =&gt; { resolve(); }).catch((err) =&gt; { reject(err); }); }, error: function () { reject(); } }); }); } function _createAnnotation(parentId, geojson, rawgeojson) { var data = { filename: rawgeojson.DocumentType, mimetype: &quot;geojson&quot;, documentbody: strToBase64(geojson), objecttypecode: &quot;maptaskr_lambpet&quot;, subject: rawgeojson.DocumentType }; data[&quot;objectid_maptaskr_lambpet@odata.bind&quot;] = &quot;/maptaskr_lambpets(&quot; + parentId + &quot;)&quot;; return new Promise((resolve, reject) =&gt; { webapi.safeAjax({ type: &quot;POST&quot;, url: &quot;/_api/annotations&quot;, contentType: &quot;application/json&quot;, data: JSON.stringify(data), success: function (res, status, xhr) { var annotationId = xhr.getResponseHeader(&quot;entityid&quot;); window.maptaskrPCF.fire(&quot;AnnotationCreated&quot;, annotationId, JSON.stringify(data)); resolve(); }, error: function () { reject(); } }); }); } function _createAnnotationForParent(parentId, utf8encodedFile, file) { var tableNames = _getCurrentEntityName(); var data = { filename: `${file.name}`, mimetype: `${file.type}`, documentbody: window.btoa(utf8encodedFile), objecttypecode: `${tableNames.entityName}`, }; data[`objectid_${tableNames.entityName}@odata.bind`] = `/${tableNames.entityPluralName}(${parentId})`; return new Promise((resolve, reject) =&gt; { webapi.safeAjax({ type: &quot;POST&quot;, url: &quot;/_api/annotations&quot;, contentType: &quot;application/json&quot;, data: JSON.stringify(data), success: function (res, status, xhr) { var annotationId = xhr.getResponseHeader(&quot;entityid&quot;); window.maptaskrPCF.fire(&quot;OriginalFileUploaded&quot;, annotationId, JSON.stringify(data)); resolve(); }, error: function () { reject(); } }); }); } function _attachOriginalFilesToEntity(entityId, files) { return new Promise(async (resolve, reject) =&gt; { if (files.length == 0) { resolve(); //resolve if no files as this function gets called regardless if there are files or not return; } var uploadedOriginalShapes = 0; for (var i = 0; i &lt; files.length; i++) { console.log('File', files[i]); var file = files[i]; if (file) { try { var utf8DocBody = await _readFileAsBufferToUTF8(file); await _createAnnotationForParent(entityId, utf8DocBody, file); uploadedOriginalShapes++; } catch (err) { reject(err); return; } } } if (uploadedOriginalShapes == files.length) { resolve(); } else { reject(); } }); } //Region to get shapes, annotations and files from the PCF. function _getShapeLambpetIds() { return window.maptaskrPCF.getLambpetIds(); } function _getShapes(getNewShapesOnly = false) { let uploadedPolygons = window.maptaskrPCF.getUploadedShapes(); let drawnPolygons = window.maptaskrPCF.getDrawnShapes(); let shapes = []; uploadedPolygons.forEach(element =&gt; { if (!getNewShapesOnly || element.annotationId == null) shapes.push(element); }); drawnPolygons.forEach(element =&gt; { if (!getNewShapesOnly || element.annotationId == null) shapes.push(element); }); return shapes; } function _getAnnotation() { return window.maptaskrPCF.getAnnotation(); } function _getUploadedFiles() { return window.maptaskrPCF.getUploadedFiles(); } // helper function for loading a file as a UTF8 array. function _readFileAsBufferToUTF8(file) { return new Promise((resolve, reject) =&gt; { const reader = new FileReader(); reader.onload = () =&gt; resolve(_arrayBufferToUTF8(reader.result)); reader.readAsArrayBuffer(file); reader.onerror = (error) =&gt; reject(error); }); } function _arrayBufferToUTF8(buffer) { // Convert Array Buffer to UTF8 string var binary = ''; var bytes = new Uint8Array(buffer); var len = bytes.byteLength; for (var i = 0; i &lt; len; i++) { binary += String.fromCharCode(bytes[i]); } return binary; } //ui helpers for showing warnings and enabling buttons. function showPortalWarning(msg) { window.maptaskrPCF.showWarningMessage(msg, 5000); $('html, body').animate({ 'scrollTop': $('.validation-map').position().top }); } function enableButtons() { var inputs = document.getElementsByTagName(&quot;input&quot;); for (var i = 0, j = inputs.length; i &lt; j; i++) { if (inputs[i].type === 'submit' || inputs[i].type === 'button') { inputs[i].disabled = false; } } } function _getShapeIntersections() { return new Promise(async (resolve, reject) =&gt; { try { const response = await window.maptaskrPCF.getShapeIntersections(); resolve(response); } catch { reject(); } }); } //conversionHelper for the InitMap function strToBase64(str) { return window.btoa(unescape(encodeURIComponent(str))) } function setProgressDialogMessage(message) { window.maptaskrPCF.updateLoadingSpinnerMessage(message) }   ","version":"Next","tagName":"h2"},{"title":"Form Submit Button​","type":1,"pageTitle":"Appendix B: Custom JavaScript","url":"/docs/power-pages/installation-guide/appendix-b-custom-javascript#form-submit-button","content":" //id of the button to invoke save on. const buttonId = &quot;NextButton&quot;; let button; let buttonName; function validateAndSave() { //validate our shapes. var buttonValue = '' clearIsDirty(); disableButtons(); buttonValue = button.value; button.value = 'Processing...'; //if our shapes validate, start the upload, and return &quot;false&quot; allowing the async process to continue. //async upload shape files saveAnnotationsAndShapes().then(()=&gt; { //once uploaded, skip validation and postback the button //invoke on the main thread. setProgressDialogMessage(&quot;Saving complete!&quot;); setTimeout(function () { WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(buttonName, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true)); }, 100); }).catch(() =&gt; { clearIsDirty(); enableButtons(); button.value = buttonValue; window.maptaskrPCF.handleLoadingSpinner(false); }); return false; } //ADVANCED and BASIC combined //once the document is loaded $(document).ready(function () { //find the button and save the name for posting back the form button = document.getElementById(buttonId); buttonName = button.getAttribute(&quot;name&quot;); //if there is already a webFormClientValidate function if (typeof (webFormClientValidate) == &quot;function&quot;) { //save the original func var baseValidationFunction = webFormClientValidate; //wrap it in out new method webFormClientValidate = function (arguments) { //apply the original webFormClientValidate function if (baseValidationFunction.apply(this, arguments)) { validateAndSave(); } return false; } } else { webFormClientValidate = validateAndSave; } if (typeof (entityFormClientValidate) == &quot;function&quot;) { //save the original func var baseValidationFunction = entityFormClientValidate; //wrap it in out new method entityFormClientValidate = function (arguments) { //apply the original webFormClientValidate function if (baseValidationFunction.apply(this, arguments)) { validateAndSave(); } return false; } } else { entityFormClientValidate = validateAndSave; } });  ","version":"Next","tagName":"h2"},{"title":"Prerequesites","type":0,"sectionRef":"#","url":"/docs/power-pages/installation-guide/prerequisites","content":"","keywords":"","version":"Next"},{"title":"Maptaskr Core​","type":1,"pageTitle":"Prerequesites","url":"/docs/power-pages/installation-guide/prerequisites#maptaskr-core","content":" To be able to install Maptaskr for Power Pages, either of the following Maptaskr Core solutions needs to be installed and configured in its respective platform environment:  Maptaskr for Dynamics 365, orMaptaskr for Power Apps  Maptaskr for Power Pages is dependent on these Core solutions to provide it with baseline setup and configuration.  Figure 1: Maptaskr AppSource Listings​    Note: it is recommended that you install the latest version of these products which can be found at Microsoft AppSource1.  ","version":"Next","tagName":"h2"},{"title":"Solution Files​","type":1,"pageTitle":"Prerequesites","url":"/docs/power-pages/installation-guide/prerequisites#solution-files","content":" As is the nature of the Power Pages platform the Maptaskr for Power Pages solution is installed via a variety of Solution Files. These are listed in Upload Solution Files.  Note: Maptaskr for Power Pages solution files are currently only available direct from the Maptaskr Team. If you are a current Maptaskr customer or are wishing to install Maptaskr into your target environment, you will receive available updates directly from the Maptaskr Team. Alternatively, please reach out to the Maptaskr Team (support@maptaskr.com) to request access to solution files.  ","version":"Next","tagName":"h2"},{"title":"Base Platform - Configure file size limit and file extensions​","type":1,"pageTitle":"Prerequesites","url":"/docs/power-pages/installation-guide/prerequisites#base-platform---configure-file-size-limit-and-file-extensions","content":" To install Maptaskr for Power Pages, you will need to configure the file size limit and files extensions on the base platform.  An overview of these settings can be found at the following Microsoft Learn page - Enable file attachments2. A more specific set of instructions is found in the following two sections.  ","version":"Next","tagName":"h2"},{"title":"Configure file size limit​","type":1,"pageTitle":"Prerequesites","url":"/docs/power-pages/installation-guide/prerequisites#configure-file-size-limit","content":" The file size limit is configured from the classic D365 style System Settings page. This page can be accessed from the classic style settings.  To access the classic style settings from a Model-Driven App  Click on the cogwheel on the top right corner of the main Dynamics 365 ribbon.  Figure 2: Advanced Settings​    In the dropdown that appeared select &quot;Advanced Settings&quot;.You should now be in the classic style settings.  To access the classic style settings from the Power Platform admin center  Select your environment, select &quot;Settings&quot; from the environment ribbon.  Figure 3: Power Platform admin center - Settings​    Select the &quot;Resources&quot; drop-down and then select &quot;All legacy settings&quot;.    You should now be in the classic style settings.  Once you are in the classic style settings Pages  From there click on the &quot;Settings&quot; chevron on the top ribbon and select &quot;Administration&quot; located in the &quot;System&quot; column.  Figure 4: Classic - System Administration​    The System Settings are on the top-right of the results displayed.  Figure 5: System Settings​    In the System Settings configure the Set file size limit for attachments to 25Mb.  In the System Settings window, go to the Email tab.Go to the Set file size limit for attachments section, and in the Maximum file size (in kilobytes) field, enter the value in kilobytes 25,600.  Figure 6: Configure file size limit.​    ","version":"Next","tagName":"h3"},{"title":"Enable JS files​","type":1,"pageTitle":"Prerequesites","url":"/docs/power-pages/installation-guide/prerequisites#enable-js-files","content":" To enable JS files, go to the General tab.  In the Set blocked file extensions for attachments field, remove js as an entry.  Figure 7: Allow js extension.​    Footnotes​ https://appsource.microsoft.com/en-gb/marketplace/apps?search=maptaskr&amp;page=1 ↩ https://learn.microsoft.com/en-us/dynamics365/customer-service/enable-file-attachments ↩ ","version":"Next","tagName":"h3"},{"title":"Introducing Maptaskr for Power Pages","type":0,"sectionRef":"#","url":"/docs/power-pages/introducing-maptaskr-for-power-pages","content":"Introducing Maptaskr for Power Pages In an ever-evolving world, where location-based insights and user-friendly interfaces are paramount, we're thrilled to unveil our latest solution: Maptaskr for Power Pages. This tool is designed to elevate your mapping capabilities, offering a multitude of enhancements and features to empower your clients. Enhanced User Interface for a Seamless Experience Our priority was to enhance the user experience. With a sleek and intuitive interface, users will find it easier than ever to navigate and leverage the power of Maptaskr. Streamlined and improved aesthetics create an environment that's not only efficient but also visually pleasing. Leveraging the Power Apps Component Framework We've leveraged the Power Apps Component Framework (PCF) to provide you with many possibilities for configuration. Administrators have unprecedented control over mapping configurations. Through the Power Pages Designer or Power Apps Form Editor, you can fine-tune map settings, layers, and more, ensuring that the solution aligns with your business objectives. Next-Generation Base Maps We've upgraded our base maps to utilize ArcGIS Vector Tile technology, delivering sharper, more detailed maps that provide a richer user experience. Your location data will shine on these sophisticated base maps. Innovative Features The heart of Maptaskr is its highly configurable control, now packed with new features. Customize your mapping experience with options like default layers, menu settings, exclusion zones, snapping, tracing, intersection detection, and deep search capabilities.\\s Maptaskr for Power Pages is not just a mapping tool; it's a strategic asset for businesses looking to leverage location intelligence to improve customer engagement and streamline business processes. For any industry that relies on location data, Maptaskr will help you chart a course to success.","keywords":"","version":"Next"},{"title":"Annotation Drawing Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/annotation-drawing-events","content":"","keywords":"","version":"Next"},{"title":"AnnotationDrawingStarted​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#annotationdrawingstarted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#description","content":" The AnnotationDrawingStarted event is triggered when a user begins drawing an annotation on a map using the Maptaskr for Power Pages App. This event provides information about the annotation's shape name and starting latitude and longitude coordinates.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#usage","content":" To listen for the AnnotationDrawingStarted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AnnotationDrawingStarted&quot;, function(shapeName, startLat, startLng) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;startLat: &quot; + startLat); console.log(&quot;startLng: &quot; + startLng); });   In the example above, we've registered an event listener for the AnnotationDrawingStarted event. When the event occurs, the provided call-back function is executed, logging the annotation's shape name, starting latitude, and starting longitude to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#parameters","content":" shapeName (string): The name or identifier of the annotation being drawn.startLat (number): The latitude coordinate where the annotation drawing started.startLng (number): The longitude coordinate where the annotation drawing started.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#removing-event-listeners","content":" To remove the event listener for the AnnotationDrawingStarted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AnnotationDrawingStarted&quot;);   In the example above, the event listener for AnnotationDrawingStarted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingCompleted​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#annotationdrawingcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#description-1","content":" The AnnotationDrawingCompleted event is triggered when a user completes the drawing of an annotation on a map using the Maptaskr for Power Pages App. This event provides information about the annotation's shape name, finishing latitude, finishing longitude, polygon representation (if applicable) and text (if applicable).  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#usage-1","content":" To listen for the AnnotationDrawingCompleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AnnotationDrawingCompleted&quot;, function(shapeName, finishLat, finishLong, polygon, text) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;finishLat: &quot; + finishLat); console.log(&quot;finishLong: &quot; + finishLong); console.log(&quot;polygon: &quot; + polygon); console.log(&quot;text: &quot; + text); });   In the example above, we've registered an event listener for the AnnotationDrawingCompleted event. When the event occurs, the provided call-back function is executed, logging the annotation's shape name, finishing latitude, finishing longitude, the polygon representation (if available) and text (if available) to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#parameters-1","content":" shapeName (string): The name or identifier of the completed annotation.finishLat (number): The latitude coordinate where the annotation drawing was completed.finishLong (number): The longitude coordinate where the annotation drawing was completed.Polygon (string): A polygon representation of the completed annotation area, if applicable.Text (string): The text content of the completed annotation if it was a text annotation. If the annotation wasn't a text annotation, this will return as undefined.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#response-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;10833324.643667039,-5422575.956473999,12041155.960114244,-3916179.5955117554&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;10962250.458343988,-4377598.300671361,10833324.643667039,-5422575.956473999,11864731.16108263,-5388648.110506381,12041155.960114244,-4771161.313895731,11844374.453502059,-3916179.5955117554&quot;, &quot;type&quot;: &quot;LineString&quot; }, &quot;shapeSize&quot;: &quot;Length: 2735.42 km&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Length: 2735.42 km&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#removing-event-listeners-1","content":" To remove the event listener for the AnnotationDrawingCompleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AnnotationDrawingCompleted&quot;);   In the example above, the event listener for AnnotationDrawingCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingCancelled​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#annotationdrawingcancelled","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#description-2","content":" The AnnotationDrawingCancelled event is triggered when a user cancels the drawing of an annotation on a map using the Maptaskr for Power Pages App. This event provides information about the annotation's shape name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#usage-2","content":" To listen for the AnnotationDrawingCancelled event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AnnotationDrawingCancelled&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the AnnotationDrawingCancelled event. When the event occurs, the provided call-back function is executed, logging the name of the cancelled annotation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#parameters-2","content":" shapeName (string): The name or identifier of the cancelled annotation.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#removing-event-listeners-2","content":" To remove the event listener for the AnnotationDrawingCancelled event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AnnotationDrawingCancelled&quot;);   In the example above, the event listener for AnnotationDrawingCancelled is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingModified​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#annotationdrawingmodified","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#description-3","content":" The AnnotationDrawingModified event is triggered when a previously drawn annotation is modified within the map application using the Maptaskr for Power Pages App. This event provides information about the modified annotation's name and its updated polygon geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#usage-3","content":" To listen for the AnnotationDrawingModified event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AnnotationDrawingModified&quot;, function(shapeName, polygon, oldText, newText) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;polygon: &quot; + polygon); console.log(&quot;oldText: &quot; + oldText); console.log(&quot;newText: &quot; + newText); });   In the example above, we've registered an event listener for the AnnotationDrawingModified event. When the event occurs, the provided call-back function is executed, logging the name of the modified annotation and its updated polygon geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#parameters-3","content":" shapeName (string): The name of the modified annotation.polygon (string): The updated polygon geometry of the modified annotation.oldText (string): The old text value of the modified annotation if it was a text annotation. If the annotation wasn't an annotation text or the text wasn't modified, this will return as undefined.newText (string): The new text value of the modified annotation if it was a text annotation. If the annotation wasn't an annotation text or the text wasn't modified, this will return as undefined.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#response-example-1","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;10833324.643667039,-5565072.909537995,13167560.446239164,-4377598.300671361&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;10962250.458343988,-4377598.300671361,10833324.643667039,-5422575.956473999,11864731.16108263,-5388648.110506381,12041155.960114244,-4771161.313895731,13167560.446239164,-5565072.909537995&quot;, &quot;type&quot;: &quot;LineString&quot; }, &quot;shapeSize&quot;: &quot;Length: 3050.95 km&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Length: 3050.95 km&quot;, &quot;OldGeometry&quot;: [ [ 10962250.458343988, -4377598.300671361 ], [ 10833324.643667039, -5422575.956473999 ], [ 11864731.16108263, -5388648.110506381 ], [ 12041155.960114244, -4771161.313895731 ], [ 11844374.453502059, -3916179.5955117554 ] ], &quot;ExclusionIntersecting&quot;: false } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#removing-event-listeners-3","content":" To remove the event listener for the AnnotationDrawingModified event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AnnotationDrawingModified&quot;);   In the example above, the event listener for AnnotationDrawingModified is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationDrawingDeleted​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#annotationdrawingdeleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#description-4","content":" The AnnotationDrawingDeleted event is triggered when a user deletes a previously drawn annotation on a map using the Maptaskr for Power Pages App. This event provides information about the deleted annotation's shape name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#usage-4","content":" To listen for the AnnotationDrawingDeleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AnnotationDrawingDeleted&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the AnnotationDrawingDeleted event. When the event occurs, the provided call-back function is executed, logging the name of the deleted annotation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#parameters-4","content":" shapeName (string): The name or identifier of the deleted annotation.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Annotation Drawing Events","url":"/docs/power-pages/registerable-events/annotation-drawing-events#removing-event-listeners-4","content":" To remove the event listener for the AnnotationDrawingDeleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;AnnotationDrawingDeleted&quot;);   In the example above, the event listener for AnnotationDrawingDeleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Base Map Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/base-map-events","content":"","keywords":"","version":"Next"},{"title":"BaseMapChanged​","type":1,"pageTitle":"Base Map Events","url":"/docs/power-pages/registerable-events/base-map-events#basemapchanged","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Base Map Events","url":"/docs/power-pages/registerable-events/base-map-events#description","content":" The BaseMapChanged event is triggered when a user changes the base map type on a map using the Maptaskr for Power Pages App. This event provides information about the new base map type and its associated URL.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Base Map Events","url":"/docs/power-pages/registerable-events/base-map-events#usage","content":" To listen for the BaseMapChanged event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;BaseMapChanged&quot;, function(baseMapType, url) { console.log(&quot;baseMapType: &quot; + baseMapType); console.log(&quot;url: &quot; + url); });   In the example above, we've registered an event listener for the BaseMapChanged event. When the event occurs, the provided call-back function is executed, logging the new base map type and its associated URL to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Base Map Events","url":"/docs/power-pages/registerable-events/base-map-events#parameters","content":" baseMapType (string): The type or category of the new base map.url (string): The URL or source of the new base map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Base Map Events","url":"/docs/power-pages/registerable-events/base-map-events#removing-event-listeners","content":" To remove the event listener for the BaseMapChanged event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;BaseMapChanged&quot;);   In the example above, the event listener for BaseMapChanged is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Data accessor Functions","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/data-accessor-functions","content":"","keywords":"","version":"Next"},{"title":"List of available functions​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#list-of-available-functions","content":" ","version":"Next","tagName":"h2"},{"title":"Get Drawn Shapes​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-drawn-shapes","content":" Description​  The getDrawnShapes function allows you to retrieve a collection of shapes that were drawn and currently displayed on the map.  Usage​  var drawnShapes = window['maptaskrPCF'].getDrawnShapes(); console.log('drawnShapes', drawnShapes);   Returns​  The array of drawn shapes currently displayed on the map.  ","version":"Next","tagName":"h3"},{"title":"Get Uploaded Shapes​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-uploaded-shapes","content":" Description​  The getUploadedShapes function allows you to retrieve a collection of shapes that were uploaded and currently displayed on the map.  Usage​  var uploadedShapes = window['maptaskrPCF'].getUploadedShapes(); console.log(uploadedShapes, uploadedShapes);   Returns​  The array of uploaded shapes currently displayed on the map.  ","version":"Next","tagName":"h3"},{"title":"Get Shape Count​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-shape-count","content":" Description​  The getShapeCount function returns the count of polygon areas within the map.  Usage​  var shapeCount = window['maptaskrPCF'].getShapeCount(); console.log(shapeCount, shapeCount);   Returns​  The count of drawn and uploaded shapes within the map.  ","version":"Next","tagName":"h3"},{"title":"Get Annotations​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-annotations","content":" Description​  The getAnnotation function retrieves annotations from the map application.  Usage​  var annotations = window['maptaskrPCF'].getAnnotation(); console.log(annotations, annotations);   Returns​  Annotations from the map application.  ","version":"Next","tagName":"h3"},{"title":"Get Lambpet ID's​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-lambpet-ids","content":" Description​  The getLambpetIds function retrieves the IDs of Lambpets within the map application.  Usage​  var lambpetIds = window['maptaskrPCF'].getLambpetIds(); console.log(annotations, annotations);   Returns​  The IDs of Lambpets within the map application.  ","version":"Next","tagName":"h3"},{"title":"Get Uploaded Files​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-uploaded-files","content":" Description​  The getUploadedFiles function retrieves a list ofuploaded files within the map application.  Usage​  var uploadedFiles = window['maptaskrPCF'].getUploadedFiles(); console.log(uploadedFiles, uploadedFiles);   Returns​  A list of uploaded files within the map application.  ","version":"Next","tagName":"h3"},{"title":"Get Shape Intersections​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-shape-intersections","content":" Description​  The getShapeIntersections function allows you to check for intersections between shapes asynchronously.  Usage​  var shapeIntersections = await window['maptaskrPCF'].getShapeIntersections(); console.log(shapeIntersections, shapeIntersections);   Returns​  A result indicating whether there are intersections between shapes.  ","version":"Next","tagName":"h3"},{"title":"Get Related Shapes​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-related-shapes","content":" Description​  The getRelatedShapes function allows you to retrieve the collection of related shapes currently displayed on the map.  Usage​  var relatedShapes = window['maptaskrPCF'].getRelatedShapes(); console.log(relatedShapes, relatedShapes);   Returns​  The array of related shapes currently displayed on the map.  ","version":"Next","tagName":"h3"},{"title":"Get Lat Long from Coordinate​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#get-lat-long-from-coordinate","content":" Description​  The getLatLongFromCoordinate function allows you to convert a X, Y coordinate point from the return values to a Long,Lat coordinate for use elsewhere.  Usage​  window['maptaskrPCF'].getLatLongFromCoordinate(coordinateX,coordinateY);  window['maptaskrPCF'].getLatLongFromCoordinate(13032207.574509,-3639625.538827);   coordinateX (number): The Longitude of the coordinate (in EPSG 3857).  coordinateY (number): The Latitude of the coordinate (in EPSG 3857).  Returns​  Function will return an object with Latitude and Longitude in WGS84 coordinate system (EPSG 4326).  ","version":"Next","tagName":"h3"},{"title":"Navigate to Lat Long​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#navigate-to-lat-long","content":" Description​  The navigateToLatLng function allows you to programmatically position the map over a latitude and longitude with an optional Zoom level to set the zoom.  Usage​  window['maptaskrPCF'].navigateToLatLong(latitude, longitude, zoom);  window['maptaskrPCF'].navigateToLatLong(-90, 90, 15);   latitude (number): The Latitude of the coordinate (in WGS84).  longitude (number): The Longitude of the coordinate (in WGS84).  zoom (number): (Optional) The zoom level to zoom to, Leave empty to retain current zoom.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Navigate to Extent​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#navigate-to-extent","content":" Description​  The navigateToExtent function allows you to programmatically position the map over a position with the optimal zoom to display the provided extent.  Usage​  window['maptaskrPCF'].navigateToExtent(minLatitude, minLongitude, maxLatitude, maxLongitude);  window['maptaskrPCF'].navigateToExtent(112.500000, -36.738884, 154.160156, -11.350797);   minLatitude (number): The Minimum Latitude of the extent (in WGS84).  minLongitude (number): The Minimum Longitude of the extent (in WGS84).  maxLatitude (number): The Maximum Latitude of the extent (in WGS84).  maxLongitude (number): The Maximum Longitude of the extent (in WGS84).  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Download Map​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#download-map","content":" Description​  The downloadMap function allows you to invoke the download map functionality which renders out the elements of the map in the format configured.  Usage​  window['maptaskrPCF'].downloadMap();   Returns​  This function does not return any data.  Use this function in conjunction with the MapDownloaded event to capture the Base64 image and process it within your implementation.  ","version":"Next","tagName":"h3"},{"title":"Show Warning Message​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#show-warning-message","content":" Description​  The showWarningMessage function displays a warning message within the map application for a specified duration.  Usage​  window['maptaskrPCF'].showWarningMessage(msg, timeout)  window['maptaskrPCF'].showWarningMessage('An error has occurred', 5500);   msg (string): The warning message to be displayed.  timeout (number): The duration (in milliseconds) for which the warning message is displayed.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Handle Loading Spinner​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#handle-loading-spinner","content":" Description​  The handleLoadingSpinner function toggles the display of a loading spinner within the map application and sets a loading message.  Usage​  window['maptaskrPCF'].handleLoadingSpinner(show, message)  window['maptaskrPCF'].handleLoadingSpinner(true, 'Loading Data...'); window['maptaskrPCF'].handleLoadingSpinner(false, null);   show (boolean): A boolean value indicating whether to show or hide the loading spinner.  message (string): A message to display alongside the loading spinner.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Update Loading Spinner Message​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#update-loading-spinner-message","content":" Description​  The updateLoadingSpinnerMessage function updates the message displayed alongside the loading spinner within the map application.  Usage​  window['maptaskrPCF'].updateLoadingSpinnerMessage(message)  window['maptaskrPCF'].updateLoadingSpinnerMessage('Loading more data...');   message (string): The new message to be displayed alongside the loading spinner.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"On Event​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#on-event","content":" Description​  The on function allows you to register event listeners for specific events within the map application.  Usage​  Refer to Registerable Events documentation for examples.  window['maptaskrPCF'].on(eventName, functionCallback);   eventName (string): The name of the event to listen for.  functionCallback (function): The call-back function to be executed when the event is triggered.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Off Event​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#off-event","content":" Description​  The off function removes previously registered event listeners for specific events within the map application.  Usage​  Refer to Registerable Events documentation for examples.  window['maptaskrPCF'].off(eventName);   eventName (string): The name of the event for which to remove the event listener.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Fire Event​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#fire-event","content":" Description​  The fire function manually triggers a specified event within the map application, optionally passing additional data.  Usage​  Refer to Registerable Events documentation for examples.  window['maptaskrPCF'].fire(eventName, param, param2, ...param3);   eventName (string): The name of the event to trigger.  param (unknown): The parameter that is required for the specified event  Returns​  This function does not inherently return any data, however the function that is manually triggered may return data. Please refer to the documentation for the given event.  ","version":"Next","tagName":"h3"},{"title":"Add Highlight​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#add-highlight","content":" Description​  The addHighlight function will generate a new polygon with your given colours to indicate a highlighted area based on a provided GeoJSON object  Usage​  Refer to Registerable Events documentation for GeoJSON data examples.  //use an example of GeoJSON data from registerable events doc var geoJSON = 'xyz'; window['maptaskrPCF'].addHighlight(geoJSON, '#FFFFFF', '#FF1100');   geoJSON (string): GeoJSON data (in EPSG: 3857 coordinate system) to pass to the function to render as a highlight.  strokeColour (string): stroke colour for the given shape in hex format.  fillColour (string): fill colour for the given shape in hex format.  Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Clear Highlights​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#clear-highlights","content":" Description​  The clearHighlights function will find all shapes generated via the addHighlight function and remove them from the map.  Usage​  window['maptaskrPCF'].clearHighlights();   Returns​  This function does not return any data.  ","version":"Next","tagName":"h3"},{"title":"Register Address Field​","type":1,"pageTitle":"Data accessor Functions","url":"/docs/power-pages/registerable-events/data-accessor-functions#register-address-field","content":" Description​  The registerAddressFieldFunction will listen to address search or address pin movement and append the location specific data into the defined form fields.  Usage​  window['maptaskrPCF'].registerAddressFieldFunction(hideFields, latitudeField, longitudeField, streetField, suburbField, cityField, stateField, postcodeField, countryField)  var lat = $(&quot;#caselatitude&quot;)[0]; var lon = $(&quot;#caselongitude&quot;)[0]; window['maptaskrPCF'].registerAddressFieldFunction(false, lat, lon, null, null, null, null, null, null);   hideFields (boolean): Show or hide the provided form fields in the form.  latitudeField (HTMLInputElement): The input field for latitude on the form.  longitudeField (HTMLInputElement): The input field for longitude on the form.  streetField (HTMLInputElement): The input field for street on the form.  suburbField (HTMLInputElement): The input field for suburb on the form.  cityField (HTMLInputElement): The input field for city on the form.  stateField (HTMLInputElement): The input field for state on the form.  postcodeField (HTMLInputElement): The input field for postcode on the form.  countryField (HTMLInputElement): The input field for country on the form.  Returns​  This function does not return any data. ","version":"Next","tagName":"h3"},{"title":"Form Submission Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/form-submission-events","content":"","keywords":"","version":"Next"},{"title":"LambpetCreated​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#lambpetcreated","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#description","content":" The LambpetCreated event is triggered when a Lambpet is created or submitted within the map application using the Maptaskr for Power Pages App. This event provides information about the Lambpet's ID and its JSON representation.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#usage","content":" To listen for the LambpetCreated event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;LambpetCreated&quot;, function(id, lambpetJson) { console.log(&quot;id: &quot; + id); console.log(&quot; lambpetJson: &quot; + lambpetJson); });   In the example above, we've registered an event listener for the LambpetCreated event. The provided call-back function is executed when the event occurs, logging the Lambpet's ID and its JSON representation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#parameters","content":" id (string): The ID of the created Lambpet.lambpetJson (string): The JSON representation of the created Lambpet.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#response-example","content":" The lambpetJson returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;maptaskr*name&quot;: &quot;Shape 1&quot;, &quot;maptaskr_parententityid&quot; : &quot;f1c9873a-5037-ee11-a81c-6045bd3f74bf&quot;, &quot;maptaskr_json&quot; : { &quot;geometry*&quot;:null, &quot;fill*&quot;:{ &quot;color*&quot;: &quot;rgba(16, 12, 8, 0.5019607843137255)&quot; }, &quot;image*&quot;:null, &quot;renderer*&quot;:null, &quot;hitDetectionRenderer*&quot;:null, &quot;stroke*&quot;:{ &quot;color*&quot;: &quot;rgba(16,12,8,1)&quot;, &quot;lineDash*&quot;:[], &quot;lineDashOffset*&quot;:null, &quot;width*&quot;:3 }, &quot;text_&quot;:null }, &quot;maptaskr_ischild&quot;: true, &quot;maptaskr_longitude&quot; : 152.6065402650001, &quot;maptaskr_latitude&quot; : -25.366959556374926, &quot;&lt;maptaskr_Account@odata.bind&gt;&quot; : &quot;/accounts(f1c9873a-5037-ee11-a81c-6045bd3f74bf)&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#removing-event-listeners","content":" To remove the event listener for the LambpetCreated event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;LambpetCreated&quot;);   In the example above, the event listener for LambpetCreated is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AnnotationCreated​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#annotationcreated","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#description-1","content":" The AnnotationCreated event is triggered when an annotation is created or submitted within the map application using the Maptaskr for Power Pages App. This event provides information about the annotation's ID and its JSON representation.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#usage-1","content":" To listen for the AnnotationCreated event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AnnotationCreated&quot;, function(id, annotationJson) { console.log(&quot;id: &quot; + id); console.log(&quot; annotationJson: &quot; + annotationJson); });   In the example above, we've registered an event listener for the AnnotationCreated event. When the event occurs, the provided call-back function is executed, logging the annotation's ID and its JSON representation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#parameters-1","content":" id (string): The ID of the created annotation.annotationJson (string): The JSON representation of the created annotation.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#response-example-1","content":" The annotationJson returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;filename&quot;: &quot;Shape 1&quot;, &quot;mimetype&quot; : &quot;geojson&quot;, &quot;documentbody&quot;: &quot;eyJ0eXBlIjoiRmVhdHVyZUNvbGxlY3Rpb24iLCJmZWF0dXJlcyI6W3sidHlwZSI6IkZlYXR1cmUiLCJnZW9tZXRyeSI6eyJ0eXBlIjoiUG9seWdvbiIsImNvb3JkaW5hdGVzIjpbW1sxNjk4ODMyNi40NDAzNzQyOSwtMjkxOTkzMC4zMDcwMDAyMTMzXSxbMTY5ODgzNjcuODgzMjg0ODc4LC0yOTE5ODg3LjM0ODYwNTExOV0sWzE2OTg4Mzc3LjM3MzkzOTM5LC0yOTE5OTAzLjg2MTU3Mzk3MV0sWzE2OTg4NDAxLjQwNzAzODIwNCwtMjkxOTkyNC4zMDQ0NDQxMTE0XSxbMTY5ODg5MzYuMTU2OTI4OTE2LC0yOTIwNzMwLjQ5NTY1MzUyOF0sWzE2OTg3ODcwLjc5NjM0MDEzOCwtMjkyMTg4Mi44MjUxMTQ3MTcyXSxbMTY5ODcyMzcuMjMyMzY3NTk0LC0yOTIxMjg5Ljc5MzE5NTEzN10sWzE2OTg3MjMwLjA4NDQzMTc3LC0yOTIxMTg2LjU2NDkyNzk0NV0sWzE2OTg3MjI4LjU1MTExNzEwNywtMjkyMTExOC4xOTM0MDg4MzQ3XSxbMTY5ODgyODkuMzcyNDMxMDE0LC0yOTE5OTcwLjQxMTU2Nzg4NDVdLFsxNjk4ODMyNi40NDAzNzQyOSwtMjkxOTkzMC4zMDcwMDAyMTMzXV1dfSwicHJvcGVydGllcyI6eyJ1cGxvYWREb2NUeXBlIjoiU2hhcGUgMSIsIm1hcmtlclR5cGUiOiJGSUxFU19MQVlFUiIsIm1lYXN1cmVtZW50VGV4dCI6IkFyZWE6IDEzNS41NSBIYSJ9fV0sIkRvY3VtZW50VHlwZSI6IlNoYXBlIDEiLCJsb25nbGF0IjpbMTUyLjYwNjU0MDI2NTAwMDEsLTI1LjM2Njk1OTU1NjM3NDkyNl0sInN0eWxlUHJvcGVydHkiOnsiZ2VvbWV0cnlfIjpudWxsLCJmaWxsXyI6eyJjb2xvcl8iOiJyZ2JhKDE2LCAxMiwgOCwgMC41MDE5NjA3ODQzMTM3MjU1KSJ9LCJpbWFnZV8iOm51bGwsInJlbmRlcmVyXyI6bnVsbCwiaGl0RGV0ZWN0aW9uUmVuZGVyZXJfIjpudWxsLCJzdHJva2VfIjp7ImNvbG9yXyI6InJnYmEoMTYsMTIsOCwxKSIsImxpbmVEYXNoXyI6W10sImxpbmVEYXNoT2Zmc2V0XyI6bnVsbCwid2lkdGhfIjozfSwidGV4dF8iOm51bGx9fQ==&quot;, &quot;objecttypecode&quot; : &quot;maptaskr_lambpet&quot;, &quot;subject&quot; : &quot;Shape 1&quot;, &quot;&lt;objectid_maptaskr_lambpet@odata.bind&gt;&quot;: &quot;/maptaskr_lambpets(fa5791fa-7450-ee11-be6f-002248e1d582)&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#removing-event-listeners-1","content":" To remove the event listener for the AnnotationCreated event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AnnotationCreated&quot;);   In the example above, the event listener for AnnotationCreated is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"OriginalFileUploaded​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#originalfileuploaded","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#description-2","content":" The OriginalFileUploaded event is triggered when an original file is uploaded or submitted within the map application using the Maptaskr for Power Pages App. This event provides information about the file's ID and its GeoJSON representation.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#usage-2","content":" To listen for the OriginalFileUploaded event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;OriginalFileUploaded&quot;, function(id, geoJson) { console.log(&quot;id: &quot; + id); console.log(&quot; geoJson: &quot; + geoJson); });   In the example above, we've registered an event listener for the OriginalFileUploaded event. The provided call-back function is executed when the event occurs, logging the file's ID and its GeoJSON representation to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#parameters-2","content":" id (string): The ID of the uploaded file.geoJson (string): The GeoJSON representation of the uploaded file.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#response-example-2","content":" The geoJson returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;filename&quot;: &quot;Shape 1.zip&quot;, &quot;mimetype&quot; : &quot;application/x-zip-compressed&quot;, &quot;documentbody&quot;: &quot;UEsDBBQAAAAAAANhO1VQPMKBDgUAAAAFAAAADwAAAFByb2plY3RBcmVhLmNwZ1VURi04UEsDBBQAAAAIAANhO1VXJsO7IcOFAAAAwqQCAAAPAAAAUHJvamVjdEFyZWEuZGJmY8Kuw6LClGZkYGBQZGwCURjDgMOHPwTDhnQGEcKsaMOyAT7Cjn7DiMOyXGjDssKOw47DjsOxw47Dvi7CrjB5DTR5w7/DuGAPw4cAw5d...&quot;, &quot;objecttypecode&quot; : &quot;account&quot;, &quot;&lt;objectid_account@odata.bind&gt;&quot; : &quot;/accounts(f1c9873a-5037-ee11-a81c-6045bd3f74bf)&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#removing-event-listeners-2","content":" To remove the event listener for the OriginalFileUploaded event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;OriginalFileUploaded&quot;);   In the example above, the event listener for OriginalFileUploaded is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LambpetDeleted​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#lambpetdeleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#description-3","content":" The LambpetDeleted event is triggered when a Lambpet is deleted within the map application using the Maptaskr for Power Pages App. This event provides information about the deleted Lambpet's ID.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#usage-3","content":" To listen for the LambpetDeleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;LambpetDeleted&quot;, function(id) { console.log(&quot;id: &quot; + id); });   In the example above, we've registered an event listener for the LambpetDeleted event. When the event occurs, the provided call-back function is executed, logging the ID of the deleted Lambpet to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#parameters-3","content":" id (string): The ID of the deleted Lambpet.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Form Submission Events","url":"/docs/power-pages/registerable-events/form-submission-events#removing-event-listeners-3","content":" To remove the event listener for the LambpetDeleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; LambpetDeleted&quot;);   In the example above, the event listener for LambpetDeleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"General Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/general-events","content":"","keywords":"","version":"Next"},{"title":"ErrorOccured​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#erroroccured","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#description","content":" The ErrorOccured event is triggered when an error occurs within the map application using the Maptaskr for Power Pages App. This event provides information about the error message and error details.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#usage","content":" To listen for the ErrorOccured event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ErrorOccured&quot;, function(errMessage, errDetails) { console.log(&quot;errMessage: &quot; + errMessage); console.log(&quot; errDetails: &quot; + errDetails); });   In the example above, we've registered an event listener for the ErrorOccured event. When the event occurs, the provided call-back function is executed, logging the error message and error details to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#parameters","content":" errMessage (string): The error message.errDetails (object): Additional details about the error (may be undefined).  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#removing-event-listeners","content":" To remove the event listener for the ErrorOccured event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; ErrorOccured&quot;);   In the example above, the event listener for ErrorOccured is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"WarningOccured​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#warningoccured","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#description-1","content":" The WarningOccured event is triggered when a warning message is generated within the map application using the Maptaskr for Power Pages App. This event provides information about the warning message and warning details.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#usage-1","content":" To listen for the WarningOccured event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;WarningOccured&quot;, function(warningMessage, warningDetails) { console.log(&quot;warningMessage: &quot; + warningMessage); console.log(&quot; warningDetails: &quot; + warningDetails); });   In the example above, we've registered an event listener for the WarningOccured event. The provided call-back function is executed when the event occurs, logging the warning message and warning details to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#parameters-1","content":" warningMessage (string): The warning message.warningDetails (object): Additional details about the warning (may be undefined).  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#removing-event-listeners-1","content":" To remove the event listener for the WarningOccured event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; WarningOccured&quot;);   In the example above, the event listener for WarningOccured ismremoved, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"HelpTextOccurred​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#helptextoccurred","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#description-2","content":" The HelpTextOccurred event is triggered when a help text message is displayed within the map application using the Maptaskr for Power Pages App. This event provides information about the help text message.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#usage-2","content":" To listen for the HelpTextOccurred event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;HelpTextOccurred&quot;, function(helpTextMessage) { console.log(&quot;helpTextMessage: &quot; + helpTextMessage); });   In the example above, we've registered an event listener for the HelpTextOccurred event. When the event occurs, the provided call-back function is executed, logging the help text message to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#parameters-2","content":" helpTextMessage (string): The help text message.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"General Events","url":"/docs/power-pages/registerable-events/general-events#removing-event-listeners-2","content":" To remove the event listener for the HelpTextOccurred event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; HelpTextOccurred&quot;);   In the example above, the event listener for HelpTextOccurred is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Global Function","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/global-function","content":"","keywords":"","version":"Next"},{"title":"Maptaskr PCF Loaded​","type":1,"pageTitle":"Global Function","url":"/docs/power-pages/registerable-events/global-function#maptaskr-pcf-loaded","content":" ","version":"Next","tagName":"h2"},{"title":"window.maptaskrReady()​","type":1,"pageTitle":"Global Function","url":"/docs/power-pages/registerable-events/global-function#windowmaptaskrready","content":" Description​  To allow you to get access to, and register events with the maptaskrPCF window variable, we have added code to execute the window.maptaskrReady function to let you know the map has loaded, and is ready to have events registered.  Usage​  To use this function, create a function call somewhere on the page, that registers the function maptaskrReady onto the window object.  &lt;script&gt; window.maptaskrReady = function() { console.log(&quot;Maptaskr has Loaded&quot;); console.log(window.maptaskrPCF); //put your event registrations here //window.maptaskrPCF.on(&quot;ShapeDrawingCompleted&quot;, ...) } &lt;/script&gt;   Once the map PCF control is loaded, and the object available, you can register your events, or call the Data Accessor functions. ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/introduction","content":"Introduction In an era of dynamic interactivity and user-driven experiences, Maptaskr for Power Pages takes a significant step forward with its range of Event Registration and Functions. This feature empowers portal developers to integrate event registration and call on functions directly from the portal applications. 1. Registerable Events: Portal developers can integrate event registration directly into their portal pages, allowing for the programmatic detection of select user driven actions or outcomes as they happen. 2. Data Accessor Functions: Portal developers can call select functions that provide direct access to specific map data, enabling developers to create custom interactions, analyse data, and trigger actions-based business rules and requirements. These features not only allow for the enhancing of user experience, but also opens exciting opportunities for portal developers to create dynamic and user-centric mapping applications. It's a powerful tool for organisations looking to foster user engagement, facilitate event coordination, and programmatically detect and respond to events as they unfold on the map. This document provides a comprehensive list of registerable events and extensible functions.","keywords":"","version":"Next"},{"title":"Help Guide Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/help-guide-events","content":"","keywords":"","version":"Next"},{"title":"HelpGuideSectionOpened​","type":1,"pageTitle":"Help Guide Events","url":"/docs/power-pages/registerable-events/help-guide-events#helpguidesectionopened","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Help Guide Events","url":"/docs/power-pages/registerable-events/help-guide-events#description","content":" The HelpGuideSectionOpened event is triggered when a section of the help guide is opened by the user in the map application using the Maptaskr for Power Pages App. This event provides information about the opened section's name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Help Guide Events","url":"/docs/power-pages/registerable-events/help-guide-events#usage","content":" To listen for the HelpGuideSectionOpened event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;HelpGuideSectionOpened&quot;, function(sectionName) { console.log(&quot;sectionName: &quot; + sectionName); });   In the example above, we've registered an event listener for the HelpGuideSectionOpened event. When the event occurs, the provided call-back function is executed, logging the name of the opened help guide section to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Help Guide Events","url":"/docs/power-pages/registerable-events/help-guide-events#parameters","content":" sectionName (string): The name of the opened help guide section.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Help Guide Events","url":"/docs/power-pages/registerable-events/help-guide-events#removing-event-listeners","content":" To remove the event listener for the HelpGuideSectionOpened event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; HelpGuideSectionOpened&quot;);   In the example above, the event listener for HelpGuideSectionOpened is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Layer List Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/layer-list-events","content":"","keywords":"","version":"Next"},{"title":"LayerSearchCompleted​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#layersearchcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#description","content":" The LayerSearchCompleted event is triggered when a user completes a search for layers on a map using the Maptaskr for Power Pages App. This event provides information about the search polygon, search term, and the resulting layers in JSON format.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#usage","content":" To listen for the LayerSearchCompleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;LayerSearchCompleted&quot;, function(searchPolygon, searchTerm, resultingLayersJson) { console.log(&quot;searchPolygon: &quot; + searchPolygon); console.log(&quot;searchTerm: &quot; + searchTerm); console.log(&quot;resultingLayersJson: &quot; + resultingLayersJson); });   In the example above, we've registered an event listener for the LayerSearchCompleted event. When the event occurs, the provided call-back function is executed, logging the search polygon, search term, and the resulting layers in JSON format to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#parameters","content":" searchPolygon (string): The search polygon or area used for layer searching.searchTerm (string): The search term or criteria used for layer searching.resultingLayersJson (string): The resulting layers in JSON format that match the search criteria.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#response-example","content":" The resultingLayersJson returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;layers&quot;: [], &quot;groups&quot;: [], &quot;isFiltered&quot;: true, &quot;LayerId&quot;: &quot;acb612f0-bea7-eb11-9442-000d3acb7dc6-2&quot;, &quot;LayerName&quot;: &quot;MapServer RoadAssets_DataPortal&quot;, &quot;LayerHiddenName&quot;: &quot;&lt;https://mrgis.mainroads.wa.gov.au/arcgis/rest/services/OpenData/RoadAssets_DataPortal/MapServer&gt;&quot;, &quot;IsCorporate&quot; : true, &quot;layerGroupId&quot; : &quot;819aafa8-2a8e-ec11-8d20-002248159630&quot;, &quot;SecurityGroupId&quot; : [ &quot;all&quot; ], &quot;LayerType&quot; : 5, &quot;LayerUrl&quot; : &quot;&lt;https://mrgis.mainroads.wa.gov.au/arcgis/rest/services/OpenData/RoadAssets_DataPortal/MapServer&gt;&quot;, &quot;isService&quot; : true, &quot;IsVisible&quot; : true, &quot;IsSelected&quot; : false, &quot;sharedUserIds&quot; : [], &quot;hasAuthentication&quot; : false, &quot;layerUserName&quot; : &quot;&quot; , &quot;layerPassword&quot; : &quot;&quot; , &quot;metadataStyle&quot; : &quot;Table&quot; , &quot;arcGisAuthApplication&quot; : &quot;&quot;, &quot;securityLayerKey&quot; : &quot;&quot; , &quot;securityLayerValue&quot; : &quot;&quot; , &quot;securityLayerType&quot; : 0, &quot;arcGisLayerToken&quot; : &quot;&quot;, &quot;isForPortal&quot; : true, &quot;LayerUniqueIdentifier&quot; : &quot;acb612f0-bea7-eb11-9442-000d3acb7dc6-2&quot;, &quot;IsCollapsed&quot; : true, &quot;IsLayerFunctionality&quot; : false, &quot;filteredSubLayersId&quot; : [ 0, 6, 27 ] } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#removing-event-listeners","content":" To remove the event listener for the LayerSearchCompleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;LayerSearchCompleted&quot;);   In the example above, the event listener for LayerSearchCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LayerSelected​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#layerselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#description-1","content":" The LayerSelected event is triggered when a user selects a layer or layer group on a map using the Maptaskr for Power Pages App. This event provides information about the selected layer group ID and layer ID.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#usage-1","content":" To listen for the LayerSelected event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;LayerSelected&quot;, function(layerGroupID, layerID, checked) { console.log(&quot;layerGroupID: &quot; + layerGroupID); console.log(&quot; layerID: &quot; + layerID); console.log(&quot; checked: &quot; + checked); });   In the example above, we've registered an event listener for the LayerSelected event. The provided call-back function is executed when the event occurs, logging the layer group ID and layer ID to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#parameters-1","content":" layerGroupID (string): The ID of the selected layer group.layerID (string): The ID of the selected layer within the group.checked (boolean): If the layer is checked or unchecked.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#removing-event-listeners-1","content":" To remove the event listener for the LayerSelected event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; LayerSelected&quot;);   In the example above, the event listener for LayerSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LayerFilterApplied​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#layerfilterapplied","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#description-2","content":" The LayerFilterApplied event is triggered when a user applies a filter to a layer on a map using the Maptaskr for Power Pages App. This event provides information about the filter parameters.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#usage-2","content":" To listen for the LayerFilterApplied event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;LayerFilterApplied&quot;, function(filterparams) { console.log(&quot;filterparams: &quot; + filterparams); });   In the example above, we've registered an event listener for the LayerFilterApplied event. The provided call-back function is executed when the event occurs, logging the filter parameters to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#parameters-2","content":" filterparams (string): The filter parameters applied to the layer.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#response-example-1","content":" The filterparams returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot; LayerName&quot;: &quot;Bike Count Sites&quot; , &quot;LayerUniqueIdentifier&quot;: &quot;acb612f0-bea7-eb11-9442-000d3acb7dc6-2_670badf1-7131-4068-9437-a9f254cf2607&quot; , &quot;expressionItems&quot; : [ { &quot;operators&quot; : [ { &quot;name&quot; : &quot;Equals&quot; , &quot;value&quot; : &quot;eq&quot; , &quot;fetchOp&quot; : &quot;eq&quot; , &quot;fetchVal&quot; : &quot;&quot; , &quot;types&quot; : [ 6, 1, 3,7 ], &quot;isCommon&quot; : false }, { &quot;name&quot; : &quot;Does Not Equal&quot; , &quot;value&quot; : &quot;ne&quot; , &quot;fetchOp&quot; : &quot;ne&quot; , &quot;fetchVal&quot; : &quot;&quot;, &quot;types&quot; : [ 6, 1, 3, 7 ], &quot;isCommon&quot; : false } ], &quot;fields&quot; : [ { &quot;displayName&quot; : &quot;OBJECTID&quot; , &quot;internalName&quot; : &quot;OBJECTID&quot; , &quot;fieldTypeName&quot; : &quot;decimal&quot; , &quot;fieldType&quot; : 6 }, ... ], &quot;valueList&quot; : [], &quot;dataType&quot; : 6, &quot;displayName&quot; : &quot;OBJECTID&quot; , &quot;operator&quot; : &quot;eq&quot; , &quot;value&quot; : &quot;1&quot; , &quot;fieldInfo&quot; : '{&quot;displayName&quot;:&quot;OBJECTID&quot;,&quot;internalName&quot;:&quot;OBJECTID&quot;,&quot;fieldTypeName&quot;:&quot;decimal&quot;,&quot;fieldType&quot;:6}' } ], &quot;FilterLayerOperator&quot; : &quot;Match All&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#removing-event-listeners-2","content":" To remove the event listener for the LayerFilterApplied event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;LayerFilterApplied&quot;);   In the example above, the event listener for LayerFilterApplied is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"LayerAttributeRequested​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#layerattributerequested","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#description-3","content":" The LayerAttributeRequested event is triggered when a user requests attributes for a layer on a map using the Maptaskr for Power Pages App. This event provides information about the layer group ID, layer ID, and resulting attributes.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#usage-3","content":" To listen for the LayerAttributeRequested event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;LayerAttributeRequested&quot;, function(layerGroupdID, layerID, resultingAttributes) { console.log(&quot;layerGroupdID: &quot; + layerGroupdID); console.log(&quot; layerID: &quot; + layerID); console.log(&quot; resultingAttributes: &quot; + resultingAttributes); });   In the example above, we've registered an event listener for the LayerAttributeRequested event. When the event occurs, the provided call-back function is executed, logging the layer group ID, layer ID, and resulting attributes to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#parameters-3","content":" layerGroupdID (string): The ID of the layer group for which attributes were requested.layerID (string): The ID of the layer for which attributes were requested.resultingAttributes (string): The resulting attributes for the requested layer.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#response-example-2","content":" The resultingAttributes returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot; OBJECTID&quot;: 88315, &quot;SITE_NO&quot; : &quot;6737&quot; , &quot;ROAD_NAME&quot; : &quot;Kwinana Fwy PSP&quot; , &quot;LOCATION_DESC&quot; : &quot;North Abutment of Narrows Bridge&quot; , &quot;DATE_COMMISSIONED&quot; : &quot;2008-11-01 09:00:00&quot; , &quot;TRAFFIC_YEAR&quot; : &quot;2023/24&quot;, &quot;PRIMARY_DIRECTION&quot; : &quot;To Perth&quot; , &quot;PRIMARY_DIRECTION_MON_SUN&quot; : 234, &quot;PRIMARY_DIRECTION_MON_FRI&quot; : 207, &quot;SECONDARY_DIRECTION&quot; : &quot;To Fremantle&quot; , &quot;SECONDARY_DIRECTION_MON_SUN&quot; : 257, &quot;SECONDARY_DIRECTION_MON_FRI&quot; : 213, &quot;COMBINED_DIRECTION_MON_SUN&quot; : 491, &quot;COMBINED_DIRECTION_MON_FRI&quot; : 420, &quot;LG_NO&quot; : &quot;124&quot; , &quot;LG_NAME&quot; : &quot;Perth (C)&quot; , &quot;RA_NO&quot; : 7, &quot;RA_NAME&quot; : &quot;Metropolitan&quot; , &quot;PRIMARY_DIRECTION_SAT_SUN&quot; : 300, &quot;SECONDARY_DIRECTION_SAT_SUN&quot; : 368, &quot;COMBINED_DIRECTION_SAT_SUN&quot; : 668, &quot;geom&quot; : { &quot;x&quot; : 115.8481209999099, &quot;y&quot; : -31.96117500052617 }, &quot;projection&quot; : &quot;4326&quot;, &quot;isSelected&quot; : false }, ... ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer List Events","url":"/docs/power-pages/registerable-events/layer-list-events#removing-event-listeners-3","content":" To remove the event listener for the LayerAttributeRequested event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;LayerAttributeRequested&quot;);   In the example above, the event listener for LayerAttributeRequested is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Layer Attribute Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/layer-attribute-events","content":"","keywords":"","version":"Next"},{"title":"FeatureRowClicked​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#featurerowclicked","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#description","content":" The FeatureRowClicked event is triggered when a user clicks on a feature row within a layer attribute table on a map using the Maptaskr for Power Pages App. This event provides information about the clicked feature's ID and geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#usage","content":" To listen for the FeatureRowClicked event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;FeatureRowClicked&quot;, function(id, geometry) { console.log(&quot;id: &quot; + id); console.log(&quot; geometry: &quot; + geometry); });   In the example above, we've registered an event listener for the FeatureRowClicked event. The provided call-back function is executed when the event occurs, logging the clicked feature's ID and geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#parameters","content":" id (string): The ID of the clicked feature.geometry (string): The geometry information of the clicked feature.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#response-example","content":" The geometry returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot; paths&quot;: [ [ [ 152.951965843402, -27.559003020827 ], [ 152.952433438347, -27.5590516415601 ] ] ] }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#removing-event-listeners","content":" To remove the event listener for the FeatureRowClicked event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;FeatureRowClicked&quot;);   In the example above, the event listener for FeatureRowClicked is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"FeatureRowsSelected​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#featurerowsselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#description-1","content":" The FeatureRowsSelected event is triggered when a user selects one or more feature rows within a layer attribute table on a map using the Maptaskr for Power Pages App. This event provides information about the selected feature's ID.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#usage-1","content":" To listen for the FeatureRowsSelected event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;FeatureRowsSelected&quot;, function(id, checked) { console.log(&quot;id: &quot; + id); console.log(&quot; checked: &quot; + checked); });   In the example above, we've registered an event listener for the FeatureRowsSelected event. When the event occurs, the provided call-back function is executed, logging the ID of the selected feature to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#parameters-1","content":" id (string): The ID of the selected feature.checked (boolean): If the feature is checked or unchecked.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#removing-event-listeners-1","content":" To remove the event listener for the FeatureRowsSelected event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; FeatureRowsSelected&quot;);   In the example above, the event listener for FeatureRowsSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"SelectedFeaturesHighlightedOnMap​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#selectedfeatureshighlightedonmap","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#description-2","content":" The SelectedFeaturesHighlightedOnMap event is triggered when selected features are highlighted on the map using the Maptaskr for Power Pages App. This event provides information about the highlighted feature's ID and geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#usage-2","content":" To listen for the SelectedFeaturesHighlightedOnMap event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;SelectedFeaturesHighlightedOnMap&quot;, function(id, geometry) { console.log(&quot;id: &quot; + id); console.log(&quot; geometry: &quot; + geometry); });   In the example above, we've registered an event listener for the SelectedFeaturesHighlightedOnMap event. The provided call-back function is executed when the event occurs, logging the highlighted feature's ID and geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#parameters-2","content":" id (string): The ID of the highlighted feature.geometry (string): The geometry information of the highlighted feature.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#response-example-1","content":" The geometry returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot; extent&quot;: &quot;15248357.277396044,-3988917.2955298205,15352708.613343623,-3864670.5161639843&quot;, &quot;geometry&quot; : { &quot;geometry&quot;: &quot;15248891.276102826,-3988614.090329052,15248892.277087683,-3988666.2742443234,15248887.379030092,-3988735.7194938106,15248882.594963657,-3988765.825602797,15248840.18312822,-3988859.223859193,15248773.836711707,-3988912.3446107856,15248747.89659868,-3988916.4934807913,15248728.863637427,-3988917.2955298205,15248693.572687175,-3988913.282809781,15248679.548212448,-3988909.80231469,15248676.32083777,-3988908.7329166974,15248592.3841606,-3988866.8507156074,15248515.016223941,-3988760.7410759795,15248490.639927128,-3988737.9944058843,15248432.753791915,-3988692.501200734,15248360.83961975,-3988658.914864661,15248357.277396044,-3988645.535311624,15248359.724643728,-3988638.175945241,15248375.64422147,-3988605.9289554274,15248387.556297543,-3988595.089214614,15248480.063684946,-3988539.0267035705,15248510.342586443,-3988510.3915596786,15248546.744950488,-3988436.7989730537,15248552.198714979,-3988345.948794903,15248555.650509752,-3988325.3416327126,15248557.096772576,-3988319.18795757,15248565.332633784,-3988309.4203045922,15248596.947369168,-3988307.279145076,15248626.114856865,-3988330.292298937,15248645.151380349,-3988438.672818123,15248648.713604053,-3988457.0028512,15248660.622117903,-3988490.1875876985,15248752.684227342,-3988649.013251296,15248778.175500179,-3988676.3095445973,15248808.789250702,-3988682.5995584377,15248818.585365893,-3988677.3789209705,15248820.811755707,-3988673.6336286957,15248826.710798163,-3988556.0177147784,15248831.277568955,-3988543.841315925,15248852.316062156,-3988522.033242089,15248875.805365272,-3988525.5111443945,15248885.487489304,-3988533.672460912,15248889.829839997,-3988551.871450244,15248891.276102826,-3988614.090329052&quot;, &quot;type&quot; : &quot;Polygon&quot; }, &quot;attributes&quot; : {} } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#removing-event-listeners-2","content":" To remove the event listener for the SelectedFeaturesHighlightedOnMap event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;SelectedFeaturesHighlightedOnMap&quot;);   In the example above, the event listener for SelectedFeaturesHighlightedOnMap is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"FeaturesFilteredByPolygon​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#featuresfilteredbypolygon","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#description-3","content":" The FeaturesFilteredByPolygon event is triggered when features are filtered by a polygon on the map using the Maptaskr for Power Pages App. This event provides information about the filter polygon and the resulting feature.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#usage-3","content":" To listen for the FeaturesFilteredByPolygon event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;FeaturesFilteredByPolygon&quot;, function(filterPolygon, resultFeature) { console.log(&quot;filterPolygon: &quot; + filterPolygon); console.log(&quot; resultFeature: &quot; + resultFeature); });   In the example above, we've registered an event listener for the FeaturesFilteredByPolygon event. The provided call-back function is executed when the event occurs, logging the filter polygon and the resulting feature to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#parameters-3","content":" filterPolygon (string): The polygon used for filtering features.resultFeature (string): The resulting feature that matches the filter.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#response-example-2","content":" The filterPolygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot; : &quot;16285967.281465383,-4638658.698342794,17017218.747868977,-3812439.5090296417&quot;, &quot;geometry&quot; : { &quot;geometry&quot; : &quot;16304960.826047294,-3964387.865684934,16285967.281465383,-4638658.698342794,16903257.48037751,-4610168.381469927,17017218.747868977,-3812439.5090296417,16304960.826047294,-3964387.865684934&quot;, &quot;type&quot; : &quot;Polygon&quot; }, &quot;attributes&quot; : {} }   The resultFeature returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot;extent&quot; : &quot;16353033.976041937,-4258126.432256523,16584924.064146778,-4081936.6934020626&quot;, &quot;geometry&quot; : { &quot;geometry&quot; : &quot;16584924.064146778,-4194215.8205637066,16353033.976041937,-4258126.432256523,16419414.757793356,-4081936.6934020626,16584924.064146778,-4194215.8205637066&quot;, &quot;type&quot; : &quot;Polygon&quot; }, &quot;attributes&quot; : {} }, { &quot;extent&quot;: &quot;16527052.31547921,-4545464.00191358,16672411.656706253,-4198235.886020177&quot; , &quot;geometry&quot; : { &quot;geometry&quot;: &quot;16584867.943882221,-4198235.886020177,16672411.656706253,-4545464.00191358,16527052.31547921,-4478925.5687913485,16584867.943882221,-4198235.886020177&quot;, &quot;type&quot; : &quot;Polygon&quot; }, &quot;attributes&quot; : {} }, { &quot;extent&quot;: &quot;16604577.824962063,-4208878.32517417,16877565.654802185,-4017740.3699756954&quot;, &quot;geometry&quot; : { &quot;geometry&quot;: &quot;16604577.824962063,-4193191.11802936,16798639.64578343,-4017740.3699756954,16877565.654802185,-4208878.32517417,16604577.824962063,-4193191.11802936&quot;, &quot;type&quot; : &quot;Polygon&quot; }, &quot;attributes&quot; : {} } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#removing-event-listeners-3","content":" To remove the event listener for the FeaturesFilteredByPolygon event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;FeaturesFilteredByPolygon&quot;);   In the example above, the event listener for FeaturesFilteredByPolygon is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"FilterReset​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#filterreset","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#description-4","content":" The FilterReset event is triggered when a filter is reset on the map using the Maptaskr for Power Pages App. ### Usage To listen for the FilterReset event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;FilterReset&quot;, function() { // Your call-back logic here });   In the example above, we've registered an event listener for the FilterReset event. When the event occurs, the provided call-back function is executed.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#parameters-4","content":" This event does not have any parameters.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#removing-event-listeners-4","content":" To remove the event listener for the FilterReset event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;FilterReset&quot;);   In the example above, the event listener for FilterReset is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"TableFilter​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#tablefilter","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#description-5","content":" The TableFilter event is triggered when the layer attribute table is filtered using a keyword or search term on the map using the Maptaskr for Power Pages App. This event provides information about the applied filter keyword.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#usage-4","content":" To listen for the TableFilter event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;TableFilter&quot;, function(filterParams, filteredResults) { console.log(&quot;filterParams: &quot; + filterParams); console.log(&quot; filteredResults: &quot; + filteredResults); });   In the example above, we've registered an event listener for the TableFilter event. The provided call-back function is executed when the event occurs, logging the applied filter keyword to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#parameters-5","content":" filterParams (string): The information about the filter parameters used.filteredResults (string): The results after applying the filter.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Layer Attribute Events","url":"/docs/power-pages/registerable-events/layer-attribute-events#removing-event-listeners-5","content":" To remove the event listener for the TableFilter event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; TableFilter&quot;);   In the example above, the event listener for TableFilter is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Map Interaction Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/map-interaction-events","content":"","keywords":"","version":"Next"},{"title":"FeaturesSelected​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#featuresselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#description","content":" The FeaturesSelected event is triggered when one or more features are selected on the map using the Maptaskr for Power Pages App. This event provides information about the selected features in an array.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#usage","content":" To listen for the FeaturesSelected event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;FeaturesSelected&quot;, function(featureArray) { console.log(&quot;featureArray: &quot; + featureArray); });   In the example above, we've registered an event listener for the FeaturesSelected event. The provided call-back function is executed when the event occurs, logging the selected features in an array to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#parameters","content":" featureArray (array): An array containing information about the selected features.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#response-example","content":" The featureArray returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [ { &quot; extent&quot;: &quot;16604577.824962063,-4208878.32517417,16877565.654802185,-4017740.3699756954&quot;, &quot;geometry&quot; : { &quot;geometry&quot;: &quot;16604577.824962063,-4193191.11802936,16798639.64578343,-4017740.3699756954,16877565.654802185,-4208878.32517417,16604577.824962063,-4193191.11802936&quot;, &quot;type&quot; : &quot;Polygon&quot; }, &quot;attributes&quot; : { &quot;FID&quot; : 433, &quot;ST*PLY_PID&quot; : null, &quot;DT_CREATE&quot; : null, &quot;DT_RETIRE&quot; : null, &quot;STATE_PID&quot; : null, &quot;STATE_NAME&quot; : null, &quot;ST_ABBREV&quot; : null, &quot;Shape*_Area&quot; : 25470103468.5586, &quot;Shape__Length&quot; : 741846.481025205, &quot;LayerName&quot; : &quot;new_gis_sa_test&quot; } } ]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#removing-event-listeners","content":" To remove the event listener for the FeaturesSelected event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;FeaturesSelected&quot;);   In the example above, the event listener for FeaturesSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"OnMapClicked​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#onmapclicked","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#description-1","content":" The OnMapClicked event is triggered when a user clicks on the map using the Maptaskr for Power Pages App. This event provides information about the clicked coordinates on the map.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#usage-1","content":" To listen for the OnMapClicked event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;OnMapClicked&quot;, function(coordinates){ console.log(&quot;coordinates: &quot; + coordinates); });   In the example above, we've registered an event listener for the OnMapClicked event. The provided call-back function is executed when the event occurs, logging the clicked coordinates on the map to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#parameters-1","content":" coordinates (object): An object containing information about the clicked coordinates on the map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#removing-event-listeners-1","content":" To remove the event listener for the OnMapClicked event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; OnMapClicked&quot;);   In the example above, the event listener for OnMapClicked is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ZoomChanged​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#zoomchanged","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#description-2","content":" The ZoomChanged event is triggered when the zoom level of the map is changed using the Maptaskr for Power Pages App. This event provides information about the previous and new zoom levels.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#usage-2","content":" To listen for the ZoomChanged event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ZoomChanged&quot;, function(previousZoom, newZoom) { console.log(&quot;previousZoom: &quot; + previousZoom); console.log(&quot; newZoom: &quot; + newZoom); });   In the example above, we've registered an event listener for the ZoomChanged event. The provided call-back function is executed when the event occurs, logging the previous and new zoom levels to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#parameters-2","content":" previousZoom (number): The previous zoom level.newZoom (number): The new zoom level.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#removing-event-listeners-2","content":" To remove the event listener for the ZoomChanged event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; ZoomChanged&quot;);   In the example above, the event listener for ZoomChanged is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ExtentChanged​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#extentchanged","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#description-3","content":" The ExtentChanged event is triggered when the extent (viewable area) of the map is changed using the Maptaskr for Power Pages App. This event provides information about the previous and new extents.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#usage-3","content":" To listen for the ExtentChanged event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ExtentChanged&quot;, function(previousExtent, newExtent) { console.log(&quot;previousExtent: &quot; + previousExtent); console.log(&quot; newExtent: &quot; + newExtent); });   In the example above, we've registered an event listener for the ExtentChanged event. The provided call-back function is executed when the event occurs, logging the previous and new extents to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#parameters-3","content":" previousExtent (string): An object representing the previous extent.newExtent (string): An object representing the new extent.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#response-example-1","content":" The previousExtent returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [16829447.323061984,-4008072.879304091,16835786.819095384,-4003663.41823489]   The newExtent returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  [17020622.764176447,-3197224.0595355905,17032536.673651483,-3188937.293563126]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#removing-event-listeners-3","content":" To remove the event listener for the ExtentChanged event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; ExtentChanged&quot;);   In the example above, the event listener for ExtentChanged is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MapDownloaded​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#mapdownloaded","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#description-4","content":" The MapDownloaded event is triggered when a map is downloaded or exported using the Maptaskr for Power Pages App. This event provides the base64 encoded file rendered. This event also provides the filetype of the Base64 file either in PDF or PNG format (based on configured properties)  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#usage-4","content":" To listen for the MapDownloaded event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;MapDownloaded&quot;, function(filetype, base64File) { console.log(&quot;filetype: &quot; + filetype); console.log(&quot; base64File: &quot; + base64File); });   In the example above, we've registered an event listener for the MapDownloaded event. When the event occurs, the provided call-back function is executed, logging information file type and the base64 file itself to the console.  ","version":"Next","tagName":"h3"},{"title":"IMPORTANT​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#important","content":" Registering this event will prevent the standard file download and will require you to handle the process after the base64 file is generated. This is to prevent duplicate downloads should you wish to modify the image / pdf before presenting it to the user.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#parameters-4","content":" filetype (string): The file type of the downloaded map (e.g., PDF, PNG ).base64File (string): The base64-encoded content of the downloaded map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#removing-event-listeners-4","content":" To remove the event listener for the MapDownloaded event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;MapDownloaded&quot;);   In the example above, the event listener for MapDownloaded is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeIntersectionsDetected​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#shapeintersectionsdetected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#description-5","content":" The ShapeIntersectionsDetected event is triggered when intersections are detected between shapes within the map application using the Maptaskr for Power Pages App. This event provides information about the shapes that intersect.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#usage-5","content":" To listen for the ShapeIntersectionsDetected event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a callback function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeIntersectionsDetected&quot;, function(intersectedShapes) { console.log(&quot;intersectedShapes: &quot; + intersectedShapes); });   In the example above, we have registered an event listener for the ShapeIntersectionsDetected event. The provided callback function is executed when the event occurs and logs the intersected shapes to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#parameters-5","content":" intersectedShapes (string): Information about the shapes that intersect.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Map Interaction Events","url":"/docs/power-pages/registerable-events/map-interaction-events#removing-event-listeners-5","content":" To remove the event listener for the ShapeIntersectionsDetected event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot; ShapeIntersectionsDetected&quot;);   In the example above, the event listener for ShapeIntersectionsDetected is removed, ensuring that the associated callback function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Measurement Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/measurement-events","content":"","keywords":"","version":"Next"},{"title":"MeasurementStarted​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#measurementstarted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#description","content":" The MeasurementStarted event is triggered when a user initiates a measurement on a map using the Maptaskr for Power Pages App. This event provides information about the measurement type and the starting latitude and longitude coordinates.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#usage","content":" To listen for the MeasurementStarted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;MeasurementStarted&quot;, function(measurementType, startLat, startLng) { console.log(&quot;measurementType: &quot; + measurementType); console.log(&quot;startLat: &quot; + startLat); console.log(&quot;startLng: &quot; + startLng); });   In the example above, we've registered an event listener for the MeasurementStarted event. When the event occurs, the provided call-back function is executed, logging the measurement type, starting latitude, and starting longitude to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#parameters","content":" measurementType (string): The type or category of the measurement being initiated.startLat (number): The latitude coordinate where the measurement started.startLng (number): The longitude coordinate where the measurement started.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#removing-event-listeners","content":" To remove the event listener for the MeasurementStarted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;MeasurementStarted&quot;);   In the example above, the event listener for MeasurementStarted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MeasurementCompleted​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#measurementcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#description-1","content":" The MeasurementCompleted event is triggered when a user completes a measurement on a map using the Maptaskr for Power Pages App. This event provides information about the measurement type, finishing latitude, finishing longitude, a polygon representation (if applicable), and any associated measurement text.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#usage-1","content":" To listen for the MeasurementCompleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;MeasurementCompleted&quot;, function(measurementType, finishLat, finishLong, polygon, measurementText) { console.log(&quot;measurementType: &quot; + measurementType); console.log(&quot;finishLat: &quot; + finishLat); console.log(&quot;finishLong: &quot; + finishLong); console.log(&quot;polygon: &quot; + polygon); console.log(&quot;measurementText: &quot; + measurementText); });   In the example above, we've registered an event listener for the MeasurementCompleted event. When the event occurs, the provided call-back function is executed, logging the measurement type, finishing latitude, finishing longitude, polygon representation (if available), and measurement text to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#parameters-1","content":" measurementType (string): The type or category of the completed measurement.finishLat (number): The latitude coordinate where the measurement was completed.finishLong (number): The longitude coordinate where the measurement was completed.polygon (string): A polygon representation of the completed measurement area, if applicable.measurementText (string): The size of the shape associated with the measurement.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#response-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;10609400.86028076,-2857630.8013220704,11559380.547374066,-2036576.928905712&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;10616186.429474283,-2321570.835033704,10609400.86028076,-2857630.8013220704,11186174.241730267,-2769418.4018062633,11559380.547374066,-2036576.928905712,10616186.429474283,-2321570.835033704&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;shapeSize&quot;: &quot;Area: 383738727653.13 m²&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Area: 383738727653.13 m²&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#removing-event-listeners-1","content":" To remove the event listener for the MeasurementCompleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;MeasurementCompleted&quot;);   In the example above, the event listener for MeasurementCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MeasurementCancelled​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#measurementcancelled","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#description-2","content":" The MeasurementCancelled event is triggered when a user cancels a measurement on a map using the Maptaskr for Power Pages App. This event provides information about the measurement type that was cancelled.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#usage-2","content":" To listen for the MeasurementCancelled event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;MeasurementCancelled&quot;, function(measurementType) { console.log(&quot;measurementType: &quot; + measurementType); });   In the example above, we've registered an event listener for the MeasurementCancelled event. When the event occurs, the provided call-back function is executed, logging the type of the cancelled measurement to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#parameters-2","content":" measurementType (string): The type or category of the cancelled measurement.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#removing-event-listeners-2","content":" To remove the event listener for the MeasurementCancelled event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;MeasurementCancelled&quot;);   In the example above, the event listener for MeasurementCancelled is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"MeasurementsCleared​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#measurementscleared","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#description-3","content":" The MeasurementsCleared event is triggered when a user clears all measurements from the map using the Maptaskr for Power Pages App. This event indicates the completion of measurement deletion.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#usage-3","content":" To listen for the MeasurementsCleared event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;MeasurementsCleared&quot;, function() { console.log(&quot;Measurement Deletion Completed&quot;); });   In the example above, we've registered an event listener for the MeasurementsCleared event. When the event occurs, the provided call-back function is executed, indicating the completion of measurement deletion by logging a message to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#parameters-3","content":" This event does not have any parameters.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Measurement Events","url":"/docs/power-pages/registerable-events/measurement-events#removing-event-listeners-3","content":" To remove the event listener for the MeasurementsCleared event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;MeasurementsCleared&quot;);   In the example above, the event listener for MeasurementsCleared is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Search Address Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/search-address-events","content":"","keywords":"","version":"Next"},{"title":"AddressSearched​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#addresssearched","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#description","content":" The AddressSearched event is triggered when a user initiates a search for a specific address on a map using the Maptaskr for Power Pages App. This event provides information about the searched text.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#usage","content":" To listen for the AddressSearched event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AddressSearched&quot;, function(text) { console.log(&quot;text: &quot; + text); });   In the example above, we've registered an event listener for the AddressSearched event. When the event occurs, the provided call-back function is executed, logging the searched text to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#parameters","content":" text (string): The text or address that was searched for on the map.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#removing-event-listeners","content":" To remove the event listener for the AddressSearched event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;AddressSearched&quot;);   In the example above, the event listener for AddressSearched is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AddressesFound​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#addressesfound","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#description-1","content":" The AddressesFound event is triggered when a user's address search on a map using the Maptaskr for Power Pages App returns one or more results. This event provides information about the search type, searched text, and the search results.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#usage-1","content":" To listen for the AddressesFound event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AddressesFound&quot;, function(type, text, results) { console.log(&quot;text: &quot; + text); console.log(&quot;results: &quot; + JSON.stringify(results)); });   In the example above, we've registered an event listener for the AddressesFound event. When the event occurs, the provided call-back function is executed, logging the search type, searched text, and the search results (in JSON format) to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#parameters-1","content":" type (string): The type or category of the address search (e.g., &quot;Geocoding&quot; or &quot;Reverse Geocoding&quot;).Text (string): The text or address that was searched for on the map.Results (object): The search results, typically in JSON format, providing details about the found addresses.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#response-example","content":" The Results returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  &quot;[ {&quot;title&quot;:&quot;115 32, 92246, Lauka, Hiiumaa vald, Hiiu Maakond, EST&quot;}, {&quot;title&quot;:&quot;115 32, 20139, Ukmergė, Ukmergės rajono savivaldybė, Vilniaus Apskritis, LTU&quot;}, {&quot;title&quot;:&quot;115 32, 20140, Ukmergė, Ukmergės rajono savivaldybė, Vilniaus Apskritis, LTU&quot;}, {&quot;title&quot;:&quot;Via 115 32, 73048, Nardò, Lecce, ITA&quot;}, {&quot;title&quot;:&quot;Strada 115 32, 317235, Pecica, Arad, ROU&quot;}, {&quot;title&quot;:&quot;Strada Provinciale 115 32, 73048, Nardò, Lecce, ITA&quot;} ]&quot; &quot;[ {&quot;title&quot;:&quot;-32.132166, 115.858761 (Malata Cres, Success, Perth, Western Australia, 6164)&quot;,&quot;geometry&quot;:[12897337.96901374,-3780672.0487148887]} ]&quot;   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#removing-event-listeners-1","content":" To remove the event listener for the AddressesFound event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AddressesFound&quot;);   In the example above, the event listener for AddressesFound is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"AddressSelected​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#addressselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#description-2","content":" The AddressSelected event is triggered when a user selects an address from search results on a map using the Maptaskr for Power Pages App. This event provides information about the selected address text and its associated location.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#usage-2","content":" To listen for the AddressSelected event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;AddressSelected&quot;, function(text, location) { console.log(&quot;text: &quot; + text); console.log(&quot;location: &quot; + location); });   In the example above, we've registered an event listener for the AddressSelected event. The provided call-back function is executed when the event occurs, logging the selected address text and its associated location to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#parameters-2","content":" text (string): The text or address that was selected from the search results.location (string): The location information associated with the selected address.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#response-example-1","content":" The location returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;x&quot;:2757280.325069334, &quot;y&quot;:7410000.549894081 } [12897337.96901374,-3780672.0487148887]   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Search Address Events","url":"/docs/power-pages/registerable-events/search-address-events#removing-event-listeners-2","content":" To remove the event listener for the AddressSelected event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;AddressSelected&quot;);   In the example above, the event listener for AddressSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Downloads","type":0,"sectionRef":"#","url":"/docs/power-pages/releases/downloads","content":"","keywords":"","version":"Next"},{"title":"App Source Release​","type":1,"pageTitle":"Downloads","url":"/docs/power-pages/releases/downloads#app-source-release","content":" Power Pages 2.2.4.65 ","version":"Next","tagName":"h2"},{"title":"Shape Drawing Events","type":0,"sectionRef":"#","url":"/docs/power-pages/registerable-events/shape-drawing-events","content":"","keywords":"","version":"Next"},{"title":"ShapeDrawingStarted​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#shapedrawingstarted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#description","content":" The ShapeDrawingStarted event is triggered when a user begins drawing a shape on a map using the Maptaskr Portal App. This event provides information about the shape being drawn, including its name, and starting latitude and longitude coordinates.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#usage","content":" You can listen for the ShapeDrawingStarted event by using the on method of the window['maptaskrPCF']object. Once you've registered an event listener, it will execute a call-back function whenever the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeDrawingStarted&quot;, function(shapeName, startLat, startLng) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;startLat: &quot; + startLat); console.log(&quot;startLng: &quot; + startLng); });   In the example above, we have registered an event listener for the ShapeDrawingStarted event. When the event occurs, the provided call-back function is executed, logging the shape's name, starting latitude, and starting longitude to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#parameters","content":" shapeName (string): The name or identifier of the shape being drawn.startLat (number): The latitude coordinate where the shape drawing started.startLng (number): The longitude coordinate where the shape drawing started.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#removing-event-listeners","content":" You can remove the event listener for the ShapeDrawingStarted event using the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for the event.  Example​  window['maptaskrPCF'].off(&quot;ShapeDrawingStarted&quot;);   In the example above, the event listener for ShapeDrawingStarted is removed and will no longer execute the associated call-back function when the event occurs.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingCompleted​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#shapedrawingcompleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#description-1","content":" The ShapeDrawingCompleted event is triggered when a user finishes drawing a shape on a map using the Maptaskr for Power Pages App. This event provides information about the completed shape, including its name, finishing latitude, finishing longitude, and a polygon representation if applicable.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#usage-1","content":" To listen for the ShapeDrawingCompleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeDrawingCompleted&quot;, function(shapeName, finishLat, finishLong, polygon) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;finishLat: &quot; + finishLat); console.log(&quot;finishLong: &quot; + finishLong); console.log(&quot;polygon: &quot; + polygon); });   In the example above, we've registered an event listener for the ShapeDrawingCompleted event. When the event occurs, the provided call-back function is executed, logging the shape's name, finishing latitude, finishing longitude, and the polygon representation (if available) to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#parameters-1","content":" shapeName (string): The name or identifier of the completed shape.finishLat (number): The latitude coordinate where the shape drawing was completed.finishLong (number): The longitude coordinate where the shape drawing was completed.polygon (object): A polygon representation of the completed shape, if applicable.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#response-example","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;13763753.343080917,-2640076.057267837,14225172.048240524,-1900449.0151737626&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;13790895.619855013,-1920805.7227543334,13763753.343080917,-2640076.057267837,14225172.048240524,-2592577.0729131717,14191244.202272907,-1900449.0151737626,13790895.619855013,-1920805.7227543334&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;shapeSize&quot;: &quot;Property Boundary Area: 268089470174.40 m²&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Property Boundary Area: 268089470174.40 m²&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#removing-event-listeners-1","content":" To remove the event listener for the ShapeDrawingCompleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;ShapeDrawingCompleted&quot;);   In the example above, the event listener for ShapeDrawingCompleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingCancelled​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#shapedrawingcancelled","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#description-2","content":" The ShapeDrawingCancelled event is triggered when a user cancels the drawing of a shape on a map using the Maptaskr for Power Pages App. This event provides information about the cancelled shape, including its name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#usage-2","content":" To listen for the ShapeDrawingCancelled event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeDrawingCancelled&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the ShapeDrawingCancelled event. When the event occurs, the provided call-back function is executed, logging the name of the cancelled shape to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#parameters-2","content":" shapeName (string): The name or identifier of the cancelled shape.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#removing-event-listeners-2","content":" To remove the event listener for the ShapeDrawingCancelled event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;ShapeDrawingCancelled&quot;);   In the example above, the event listener for ShapeDrawingCancelled is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingModified​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#shapedrawingmodified","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#description-3","content":" The ShapeDrawingModified event is triggered when a previously drawn shape is modified within the map application using the Maptaskr for Power Pages App. This event provides information about the modified shape's name and its updated polygon geometry.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#usage-3","content":" To listen for the ShapeDrawingModified event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeDrawingModified&quot;, function(shapeName, polygon) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;polygon: &quot; + polygon); });   In the example above, we've registered an event listener for the ShapeDrawingModified event. When the event occurs, the provided call-back function is executed, logging the name of the modified shape and its updated polygon geometry to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#parameters-3","content":" shapeName (string): The name of the modified shape.polygon (string): The updated polygon geometry of the modified shape.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#response-example-1","content":" The polygon returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;extent&quot;: &quot;13763753.343080917,-2640076.057267837,14253251.517202944,-1920805.7227543334&quot;, &quot;geometry&quot;: { &quot;geometry&quot;: &quot;13790895.619855013,-1920805.7227543334,13763753.343080917,-2640076.057267837,14225172.048240524,-2592577.0729131717,14253251.517202944,-2070504.77487333,13790895.619855013,-1920805.7227543334&quot;, &quot;type&quot;: &quot;Polygon&quot; }, &quot;shapeSize&quot;: &quot;Property Boundary Area: 252970372397.52 m²&quot;, &quot;attributes&quot;: { &quot;ShapeSize&quot;: &quot;Property Boundary Area: 252970372397.52 m²&quot;, &quot;UPLOAD_DOCUMENT_TYPE&quot;: &quot;Property Boundary&quot;, &quot;DYNAMIC_STOKE_COLOR&quot;: { &quot;strokeColour&quot;: &quot;#2ab01e12&quot;, &quot;fillColour&quot;: &quot;#2ab01e80&quot;, &quot;solidFill&quot;: true, &quot;dashedStroke&quot;: false }, &quot;OldGeometry&quot;: [ [ [ 13790895.619855013, -1920805.7227543334 ], [ 13763753.343080917, -2640076.057267837 ], [ 14225172.048240524, -2592577.0729131717 ], [ 14191244.202272907, -1900449.0151737626 ], [ 13790895.619855013, -1920805.7227543334 ] ] ] } }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#removing-event-listeners-3","content":" To remove the event listener for the ShapeDrawingModified event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen to this specific event.  Example​  window['maptaskrPCF'].off(&quot;ShapeDrawingModified&quot;);   In the example above, the event listener for ShapeDrawingModified is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingDeleted​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#shapedrawingdeleted","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#description-4","content":" The ShapeDrawingDeleted event is triggered when a user deletes a previously drawn shape on a map using the Maptaskr for Power Pages App. This event provides information about the deleted shape, including its name.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#usage-4","content":" To listen for the ShapeDrawingDeleted event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeDrawingDeleted&quot;, function(shapeName) { console.log(&quot;shapeName: &quot; + shapeName); });   In the example above, we've registered an event listener for the ShapeDrawingDeleted event. When the event occurs, the provided call-back function is executed, logging the name of the deleted shape to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#parameters-4","content":" shapeName (string): The name or identifier of the deleted shape.  ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#removing-event-listeners-4","content":" To remove the event listener for the ### ShapeDrawingDeleted event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;ShapeDrawingDeleted&quot;);   In the example above, the event listener for ShapeDrawingDeleted is removed, ensuring that the associated call-back function no longer executes when the event is triggered.  ","version":"Next","tagName":"h3"},{"title":"ShapeDrawingFileSelected​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#shapedrawingfileselected","content":" ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#description-5","content":" The ShapeDrawingFileSelected event is triggered when a user selects a file for shape drawing on a map using the Maptaskr for Power Pages App. This event provides information about the selected shape's name and the name of the selected file.  ","version":"Next","tagName":"h3"},{"title":"Usage​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#usage-5","content":" To listen for the ShapeDrawingFileSelected event, you can use the on method of the window['maptaskrPCF'] object. This allows you to register an event listener that executes a call-back function when the event is triggered.  Example​  window['maptaskrPCF'].on(&quot;ShapeDrawingFileSelected&quot;, function(shapeName, fileContent) { console.log(&quot;shapeName: &quot; + shapeName); console.log(&quot;fileContent: &quot; + fileContent); });   In the example above, we've registered an event listener for the ShapeDrawingFileSelected event. When the event occurs, the provided call-back function is executed, logging the name of the selected shape and the name of the selected file to the console.  ","version":"Next","tagName":"h3"},{"title":"Parameters​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#parameters-5","content":" shapeName (string): The name or identifier of the selected shape.fileContent (string): The BASE64 representation of the uploaded file.  ","version":"Next","tagName":"h3"},{"title":"Response Example​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#response-example-2","content":" The fileContent returned will be a JavaScript Object in the format provided below (with some properties excluded for brevity)  { &quot;filename&quot;: &quot;Shape 1.zip&quot;, &quot;mimetype&quot;: &quot;application/x-zip-compressed&quot;, &quot;content&quot;: &quot;UEsDBBQAAAAAAANhO1VQPMKBDgUAAAAFAAAADwAAAFByb2plY3RBcmVhLmNwZ1VURi04UEsDBBQAAAAIAANhO1VXJsO7IcOFAAAAwqQCAAAPAAAAUHJvamVjdEFyZWEuZGJmY8Kuw6LClGZkYGBQZGwCURjDgMOHPwTDhnQGEcKsaMOyAT7Cjn7DiMOyXGjDssKOw47DjsOxw47Dvi7CrjB5DTR5w7/DuGAPw4cAw5d...&quot; }   ","version":"Next","tagName":"h3"},{"title":"Removing Event Listeners​","type":1,"pageTitle":"Shape Drawing Events","url":"/docs/power-pages/registerable-events/shape-drawing-events#removing-event-listeners-5","content":" To remove the event listener for the ShapeDrawingFileSelected event, you can use the off method of the window['maptaskrPCF'] object. This is useful when you no longer want to listen for this specific event.  Example​  window['maptaskrPCF'].off(&quot;ShapeDrawingFileSelected&quot;);   In the example above, the event listener for ShapeDrawingFileSelected is removed, ensuring that the associated call-back function no longer executes when the event is triggered. ","version":"Next","tagName":"h3"},{"title":"Release Note History","type":0,"sectionRef":"#","url":"/docs/power-pages/releases/release-notes","content":"","keywords":"","version":"Next"},{"title":"Release Notes 2.2.4.65​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22465","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes","content":" Ticket #\tDescription11940\tFixed an issue where address fields were not being posted if they were disabled or in read-only mode.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.4.64​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22464","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-1","content":" Ticket #\tDescription11886\tAdded the ability to load a liquid template containing GeoJSON and layer style to render Dataverse layers on the map. 11914\tImplemented custom endpoint functionality for dataverse layer to allow users to define and access custom routes within the application. 11915\tFixed an issue where setting hideFields to true and providing null/undefined fields caused a bug. 11916\tEnhanced support for GeometryCollections during shape uploads for improved accuracy and processing capabilities. 11918\tFixed broken Dataverse fluid template to ensure proper display and functionality. 11920\tCustom search functionality has been updated to include null checking for more accurate search results. 11921\tFixed a bug in the addressFound event handler to correctly handle and process address data.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.3.67 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22367---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-2","content":" Ticket #\tDescription11774\tImproved parsing of hex fill colors from older portal shapes for consistent rendering. 11775\tImplemented a new layer for &quot;External Highlights&quot; with functions to AddHighlight and ClearHighlights. 11916\tImproved support for GeometryCollections when uploading shapes, ensuring accurate handling and processing.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.3.64 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22364---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-3","content":" Ticket #\tDescription11636\tUpdated liquid templates to include export enabled, allowing users to easily export data. 11647\tImplemented attribute loading based on viewport to improve performance and reduce unnecessary data loading. 11728\tFixed an issue where clicking on transparent polygons was not working correctly by adding transparent fill to layers. 11729\tFixed an issue where clicking on layers did not send the token through when querying. 11766\tThe token is now included in both the URL and the request body when making a POST request to ArcGIS.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.3.59 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22359---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#features","content":" Ticket #\tDescription10743\tWhen displaying the attribute tab, use the field display names, and format the values 11268\tAdd titles to all buttons for greater consistency 11402\tThe error message &quot;Intersects have been found, please check intersects and try again&quot; was reworded. 11404\tInitMap.js now has boolean values for &quot;cancelSubmissionOnWarningBuffer,&quot; &quot;cancelSubmissionOnErrorBuffer,&quot; and &quot;cancelSubmissionOnIntersection.&quot; 11439\tA &quot;window.MaptaskrReady()&quot; call has been added to the pcf component to let developers know the &quot;.on() method is available to register to. 11452\tDocument Appendix updated to include latest Initmap.js changes 11214\tUpdated portal 2.2.2.X documentation to include latest features. 11596\tFixed issue that prevented programmatic positioning of the map. 11469\tAdded support for uploading KML, KMZ, and GeoJson shape files. 11594\tFixed bug: StaticToken support now available for layers in Core 2.2.1. 11634\tAdded new methods: navigateToExtent, getRelatedShapes, and getLatLongFromCoordinate.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-4","content":" Ticket #\tDescription11229\tActive drawing now fires cancel events correctly. 11468\tFixed an issue where Mapserver Enterprise was returning string values instead of JSON, causing incorrect shape intersection. 11239\tSelected attribute table rows clear correctly when filtering. 11395\tLayer buffer numbers are now formatted correctly for smaller distances. 11396\tIssues in the draw component template have been addressed. 11385\tMapDownloaded Event now returns the image in base64 without geometry. 11393\tSearch Tab height remains consistent when an address is selected. 11394\tOpacity value slider is flexible and aligns correctly in the menu. 11398\tLock icon replaced with a more intuitive color picker; icon visibility improved. 11403\tPlacing a point near intersections is now error-free. 11408\tNorth arrow on Safari now works correctly during map downloads. 11410\tPolygon searches in Layers now utilize a bounding box. 11406\tFeatureSelected event functions correctly when vertex handle is clicked. 11407\tZ-index added to .maptaskr-logo, ensuring tooltips display above the tool panel. 11381\tShape and legend visibility now match. 11382\tLegend visibility button now matches shape editor dimensions. 11411\tCoordinate items can be selected without affecting the map. 11413\tFilter Layers within area button icon is stable. 11414\tShape color selection now updates fill color accurately. 11415\tLayer attribute table reloads correctly after clearing search keyword. 11405\tRelated shapes drawn freehand highlight all nodes as expected. 11399\tHelp-guide images now match the latest UI. 11430\tLayer tab behavior optimized for pre-selected layers. 11432\tCustom help guide is now parse-able. 11433\tAnnotation drawing with auto collapse toggled maintains color picker visibility. 11434\tUI improvements made for file upload and annotation functionalities. 11435\tAttribute filtering functionality corrected. 11436\tLayer title ordering, including Exclusion and Traceable, has been adjusted. 11437\tUpload and draw controls display centered text appropriately. 11418\tValidate Shapes button behavior adjusted for appropriate scenarios. 11419\tAddress search error notifications are accurate. 11420\tImplemented a &quot;fake fullscreen mode&quot; across all devices. 11425\tReasons for upload failures, like with Byford-invalid.zip, are now more descriptive. 11426\tMaximum file error message size is correctly indicated in MB. 11427\tFax field visibility on mobile has been addressed. 11428\tPolygon filters in Attribute Table now yield accurate results. 11440\tMessage wording improved for clarity. 11441\tDrawing restrictions on maps now handle shape uploads correctly. 11442\tShape names now accommodate all letters. 11443\tDownload As Image functionality expanded with a GET method. 11444\tCoordinate searches now include America. 11446\tFilter by area help text revised for clarity. 11447\tAttribute table retains current page number and paging total after clearing. 11448\tgetPolygonAreas function now supports multipolygons. 11449\tInitmap includes additional loading spinner info for the user 11458\tFixed issue where attribute table would not display correctly when features with empty geometry were included. 11462\tUpdated validation message to remove the unnecessary &quot;a&quot; in the requirement for File format to be ArcGIS .zip format. 11592\tFixed issue where setting `readOnly` property was preventing the default tab from loading. 11595\tResolved issue where searching for a location using custom search now returns a result without &quot;no address found&quot; error when no actual address is found. 11601\tFixed issue where using a shape fill with alpha &quot;00&quot; (#ff00ff00) would incorrectly revert to default opacity. 11606\tResolved issue preventing the saving of Original Shape files. 11605\tImproved the implementation of auth/token to enhance security and maintainability. 11609\tImproved ArcGIS Feature Loading to correctly load the OBJECT ID even when the ObjectIdFieldName is null. 11614\tUpdated EPSG_List to include both varieties of GDA2020 reference. 11617\tAdded support for additional templates in Custom Layer Search based on core version. 11612\tAdded support for additionalParameters in the MapServer URL, allowing users to easily add API Keys and other parameters. 11630\tImproved search functionality for indexed MapServer and Feature layers to ensure more accurate and reliable results. 11635\tFixed issue where getLatLongFromCoordinate method was not returning latitude and longitude correctly and mapready event now fires after properly awaiting for loaded shapes.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.74 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22274---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-5","content":" Ticket #\tDescription11606\tResolved issue preventing the saving of Original Shape files.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.73 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22273---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#features-1","content":" Ticket #\tDescription11214\tUpdated portal 2.2.2.X documentation to include latest features. 11596\tFixed issue that prevented programmatic positioning of the map.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-6","content":" Ticket #\tDescription11468\tFixed an issue where Mapserver Enterprise was returning string values instead of JSON, causing incorrect shape intersection. 11458\tFixed issue where attribute table would not display correctly when features with empty geometry were included. 11462\tUpdated validation message to remove the unnecessary &quot;a&quot; in the requirement for File format to be ArcGIS .zip format. 11592\tFixed issue where setting `readOnly` property was preventing the default tab from loading. 11595\tResolved issue where searching for a location using custom search now returns a result without &quot;no address found&quot; error when no actual address is found.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.69 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22269---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#features-2","content":" Ticket #\tDescription10743\tWhen displaying the attribute tab, use the field display names, and format the values 11268\tAdd titles to all buttons for greater consistency 11275\tAreas and Lengths on hover now display the shape name where appropriate 11384\tAn interactive map template was added to the supporting docs. 11402\tThe error message &quot;Intersects have been found, please check intersects and try again&quot; was reworded. 11404\tInitMap.js now has boolean values for &quot;cancelSubmissionOnWarningBuffer,&quot; &quot;cancelSubmissionOnErrorBuffer,&quot; and &quot;cancelSubmissionOnIntersection.&quot; 11439\tA &quot;window.MaptaskrReady()&quot; call has been added to the pcf component to let developers know the &quot;.on() method is available to register to. 11452\tDocument Appendix updated to include latest Initmap.js changes  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-7","content":" Ticket #\tDescription11229\tActive drawing now fires cancel events correctly. 11239\tSelected attribute table rows clear correctly when filtering. 11243\tSafari - Fullscreen mode now behaves correctly. 11291\tiPhone 12 Pus now properly enters fullscreen. 11300\tAttribute table filter event now includes column filters. 11301\tMaptaskr global functions now return expected values. 11302\tAnnotation text now restricts empty text or overly long inputs. 11375\tExclusion logic now caters for GeometryCollections. 11378\tLegend group names now arranged in more logical order. 11379\tLayer group now opens by default when set. 11380\tShapeIntersectionsDetected event now properly registers and returns intersection data. 11381\tShape and legend visibility now match. 11382\tLegend visibility button now matches shape editor dimensions. 11383\tLocation search zoom extent adjusted correctly for lines and polygons. 11385\tMapDownloaded Event now returns the image in base64 without geometry. 11386\tAll relevant fields are now displayed appropriately. 11387\tShapeDrawingFileSelected now correctly outputs the file object. 11388\tAttributes Table page size control now maintains window content position. 11389\tAfter resetting, layers now return as expected. 11390\tNo longer able to edit shapes that have their visibility toggled. 11391\tAttribute Table highlights selected feature/map server items properly. 11392\tTextbox auto-selection added to Rename shape and Annotation modals; enter and escape keys function as intended. 11393\tSearch Tab height remains consistent when an address is selected. 11394\tOpacity value slider is flexible and aligns correctly in the menu. 11395\tLayer buffer numbers are now formatted correctly for smaller distances. 11396\tIssues in the draw component template have been addressed. 11397\tInitmap no longer corrupts original zip files. 11398\tLock icon replaced with a more intuitive color picker; icon visibility improved. 11399\tHelp-guide images now match the latest UI. 11403\tPlacing a point near intersections is now error-free. 11405\tRelated shapes drawn freehand highlight all nodes as expected. 11406\tFeatureSelected event functions correctly when vertex handle is clicked. 11407\tZ-index added to .maptaskr-logo, ensuring tooltips display above the tool panel. 11408\tNorth arrow on Safari now works correctly during map downloads. 11410\tPolygon searches in Layers now utilize a bounding box. 11411\tCoordinate items can be selected without affecting the map. 11413\tFilter Layers within area button icon is stable. 11414\tShape color selection now updates fill color accurately. 11415\tLayer attribute table reloads correctly after clearing search keyword. 11418\tValidate Shapes button behavior adjusted for appropriate scenarios. 11419\tAddress search error notifications are accurate. 11420\tImplemented a &quot;fake fullscreen mode&quot; across all devices. 11425\tReasons for upload failures, like with Byford-invalid.zip, are now more descriptive. 11426\tMaximum file error message size is correctly indicated in MB. 11427\tFax field visibility on mobile has been addressed. 11428\tPolygon filters in Attribute Table now yield accurate results. 11430\tLayer tab behavior optimized for pre-selected layers. 11432\tCustom help guide is now parseable. 11433\tAnnotation drawing with autocollapse toggled maintains color picker visibility. 11434\tUI improvements made for file upload and annotation functionalities. 11435\tAttribute filtering functionality corrected. 11436\tLayer title ordering, including Exclusion and Traceable, has been adjusted. 11437\tUpload and draw controls display centered text appropriately. 11440\tMessage wording improved for clarity. 11441\tDrawing restrictions on maps now handle shape uploads correctly. 11442\tShape names now accommodate low hanging letters. 11443\tDownload As Image functionality expanded with a GET method. 11444\tCoordinate searches now include America. 11446\tFilter by area help text revised for clarity. 11447\tAttribute table retains current page number and paging total after clearing. 11448\tgetPolygonAreas function now supports multipolygons. 11449\tInitmap includes additional loading spinner info for the user  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.2.55 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22255---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#features-3","content":" Ticket #\tDescription9873\tImplement custom Help HTML loading property. 9875\tCreate the Shape events and callback functions 9876\tCreate the Measurement events and callback functions 9877\tCreate the Annotation events and callback functions 9878\tCreate the Basemap events and callback functions 9879\tCreate the Address Search events and callback functions 9880\tCreate the Layer List events and callback functions 9881\tCreate the Layer Attribute events and callback functions 9882\tCreate the Form Submission events and callback functions 9883\tCreate the Help Guide events and callback functions 9884\tCreate the Map Interaction events and callback functions 9885\tCreate the General Event events and callback functions 10552\tAdd unique legends to the layers marked as Snappable. Tracable, and Excluded 10553\tRework change detection to improve performance 10554\tCreated a configuration element for the layers to intersect, and the array of boundaries to throw error, and throw warning 10581\tRework the search UI to provide a combined result 10705\tAdd Custom Search Support 10747\tShapes without a configured shape name can now have their name set by users 10803\tAdd Cancel Button to download map 10914\tBring back editing text, this time with stateless editing. 10974\tImprove build process and cut out some obsolete libraries 10982\tLayer attribute model completely replaced and now loading regardless of viewport 11143\tLat and Long now displayed on desktop when moving mouse. 11150\tRefactored the ArcGIS feature loading to use paging for larger data sets. 11223\tAdded logic to conditionally show the shape validation button based on configured layers. 11264\tChange Base Map view to Street view 11266\tRework panel titles for greater consistency 11267\tImplement hover effects for basemap for greater consistency 11268\tAdd titles to all buttons for greater consistency 11275\tAreas and Lengths on hover now display the shape name where appropriate 11276\tRelated shapes are now clickable and can be configured to display information in the attribute pop-up window  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-8","content":" Ticket #\tDescription10818\tMultiple filters can now be applied to layers. 10876\tReviewed and improved all messaging and spelling of the solution 10925\tAdded a success message when exporting to CSV 10970\tFiltered layers now have the correct opacity 10975\tPCF Configuration Items are no longer case sensitive 11030\tLoading attributes to the attribute table can now be cancelled part way, with partial results returned. 11031\tBefore allowing submission we now enforce the exclusion layer testing. 11033\tShape names are now exclusive and unique. This will prevent accidental duplication. 11040\tRe-added missing references after changing the build process to include required libraries in the build. 11055\tSaved and loaded shape files now honour the style loaded from D365 11056\tShape legends now render for loaded shapes, layers, and related shapes. 11075\tZoom to Layer buttons will now not only zoom to the extent, but also test the layers minimum and maximum resolution and zoom to a visible distance. 11084\tRemoving global jQuery references. 11148\tFixed Layer Paged Metadata to load all attributes regardless of extent. 11149\tAll popups created by Maptaskr will now include the maptaskr-overlay class 11154\tMultipolygon shapes can now be loaded, and area is calculated correctly. 11185\tImplement URLBuild for greater consistency when querying ArcGIS 11203\tDeleting a shape will reset its colour to the preconfigured colour (if provided) 11205\tAddress search will now fail gracefully should the providers not return any results. 11206\tAttributes now no longer filtering by viewport and will load as paged data sets. 11207\tPortal Address search results now no longer affected by external portal styles. 11208\tInput validation added to address search. 11209\tRefactored the UI to be responsive based on the DIV size, not the window size, allowing dynamic placement in Portal Pages 11210\tShape names can now be edited on mobile responsive views. 11211\tLegend, Layer, and Help Guide pages restyled to be more responsive. 11212\tTab headers restyled to better fit smaller screens. 11213\tArcGIS map style loading for the basemap is now done before loading screen is hidden. 11216\tResolved a systemic issue with loading Angular within a React App on Safari. 11217\tAndroid - Fixed unexpected line through locked annotation colour picker 11218\tExisting shapes and annotations can now be toggled correctly 11219\tAdded error logging to the PCF control for easier debugging. 11226\tBetter value comparisons for dynamic ArcGIS Styles 11227\tStop search when we can't find a user submitted address 11228\tIndexed layers now rendering correct names in the legend 11229\tNo longer firing cancel events when we aren't actively drawing 11230\tAttribute table's page count now only includes relevant values based on the length of dataset 11237\tDisplay appropriate message when search results come back empty 11238\tButton states correctly restored when hitting 'esc' while drawing 11239\tSelected attribute table rows now cleared when filtering 11241\tWhen drawing a search/filter polygon correctly disable colour pickers 11242\tAltered the annotation and upload to be more explicit around what is submission and what is notes. 11244\tScale and map attributions control styles fixed to prevent overlap 11245\tRework scalebar styles for consistent spacing 11246\tSub-layer legend is now correctly displayed 11248\tWhen scale control is disabled, Maptaskr logo still displays correctly 11250\tAmend hover text for shape colour picker 11251\tChange background colour of warning alerts for a better UX 11252\tChange &quot;Validate Submission&quot; text to &quot;Validate shapes&quot; 11254\tVisibility icons are the same between legend and upload/draw panel now 11257\tRework the layer name order 11259\tUpdate annotation delete icon 11260\tRename upload labels 11261\tNo longer re-validating when deleting a shape or annotation 11262\tFix issue with text annotation placement after adding a point annotation 11265\tBuffers now take configured units into account 11270\tAnnotations in read only mode are now no longer editable 11272\tRelated shapes now group together based on shape name 11273\tFix issue with tool bar scrolling on mobile devices 11274\tStop attribute popup from clipping on mobile devices 11277\tShapeDrawing related events now return correct shape name 11278\tgetShapeIntersections function now returns the layers it intersected with 11279\tReplaced all FontAwesome icons with our own icons 11280\tIndexed layers now function correctly for snap/trace/exclusions 11282\tDeselecting the measurement tool while drawing no longer causes issues with other controls 11286\tImproved the object model passed to event callbacks for various events 11287\tBaseMapChanged event shows correct text for ArcGIS base map 11288\tFix issue preventing FeatureRowClicked not working with MapServer layers 11289\tResolve issue with base map features getting caught up in our feature click event 11292\tStop validation control from getting stuck validating on error 11297\tiPhone - Now correctly display measurements 11299\tLayerSelected event now let's callbacks know if it is selected or not 11302\tAnnotation text no longer allows empty text or extremely long inputs 11305\tConfigured shape fill colours now reapply correctly after deleting a shape or selecting a custom stroke colour 11373\tBuffer warning/error messages now handle empty configurations properly 11377\tWarning/Error buffer labels now convert to miles correctly  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#known-issues","content":" Ticket #\tDescription10743\tAttribute tab sometimes has poorly formed attribute names and values 11243\tSafari - Fullscreen mode behaving incorrectly 11249\tValidation section appears when it isn't needed 11281\tMobile - Tracing and snapping inconsistent 11283\tAndroid - Filter by drawing icon interferes with text 11284\tAndroid - No scale bar incorrectly offsets Maptaskr logo position 11291\tiPhone - Can't put map control into fullscreen 11293\tiPhone - Map crashes when I downloading map with layers visible and turned on 11298\tiPhone - Can't expand or collapse all legend items in Legend 11300\tAttribute table filter event doesn't include column filters 11301\tMaptaskr global functions not returning expected values 11375\tExclusion logic doesn't cater for GeometryCollections 11376\tSlight variation in measurement values when completing shape  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.53​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22153","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-9","content":" Ticket #\tDescription10978\tImplemented new Data Binding features for consistent data mapping on Portals 10983\tLoaded the token from the Layer_Security_Group correctly. 10984\tRemoved un-needed HTML Style tags causing conflicts. 11026\tRemoved references to global jQuery preventing conflicts. 10985\tResolved issue introduced to layer searching during build process.  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.50 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22150---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-10","content":" Ticket #\tDescription10969\tZip file uploaded in D365 now loads in Portal 10942\tWhen clearing the filter, the legend no longer is duplicated. 10012\tAdded logic to protect layer search from server 404 responses. 10978\tImplemented new Data Binding features for consistent data mapping on Portals  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.46 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22146---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-11","content":" Ticket #\tDescription10920\tWhen you turn on the same layer, it no longer overwrites the existing layer 10918\tAdded character limit to Address Search 10951\tHiding the scale bar no longer prevents the map from loading. 10952\tProtecting PCF numeric properties from incorrect values. 10961\tWhen annotation and shape colors are configured they are now locked whilst drawing 10833\tUpdated the How-To-Guide imagery and text to match latest feature sets. 10927\tAdded Validation for Height of Map 10930\tAnnotation color is now locked during drawing. 10931\tAnnotations no longer appear in legend (for now) 10932\tLayer Search Polygon no longer clicks on layers. 10934\tFilter layer attribute no longer breaks other layers to be rendered on the map 10935\tSubmitted shapes now load alpha-numerically with named shapes first 10937\tMeasurements also interact with exclusionary layers 10939\tSpacebar or Enter key can now toggle layers on/off while tabbing 10940\tCan no longer apply a filter without an operator selected 10941\tRenamed the hover tooltip text for the upload/draw/annotation tab 10942\tWhen clearing the filter, the legend no longer is duplicated. 10969\tZip file uploaded in D365 now loads in Portal 10012\tAdded logic to protect layer search from server 404 responses.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#known-issues-1","content":" Ticket #\tDescription10864\tImproved the layer searching cancellation logic, to ensure no wasted network traffic after cancellation. 10699\tMeasurement Tooltips should only appear on hover. 10766\tDashed line not being applied for uploaded shape 10772\tOccasionally when performing a search the search text box turns white. 10773\tSearch focus missing top border line. 10774\tAerial base map image has weird border 10777\tMeasurement clear icon - always looks disabled? 10779\tSkeleton base map appears when map first loading 10796\tSimplify the Legend and Help Text Expand All Collapse All 10801\tCannot use Keyboard to open, or navigate the layer menu 10818\tOnly a single filter can be applied to layers. 10834\tShape stroke color does not support 8 hex color 10838\tThe text overlay is not positioned where it was created and is fixed to the screen. 10875\tReview and improve the Units of Measure, and the displaying of the area label 10876\tReview an improve all messaging and Spelling of the solution 10906\tIf you quickly turn on and off the layer, even if the layer is in a disabled state, it becomes a state where you can still expand it. 10915\tAnnotation Fill is not 50% stroke color and should be 10916\tCreate a global &quot;button clicked&quot; state for all toggle buttons. 10921\tNA 10922\tPerformance issue when adjusting opacity 10923\tNeed loading screen when plot on map in attribute table 10925\tNeed success message for CSV export 10928\tLayer attribute clear filter doesn't clear the attribute table 10929\tLayer attribute apply filter should validate empty value 10936\tIf shape/annotation color is dark, can't see the lock icon 10944\tAdd a Visibility toggle for related shapes 10945\tLayer reset also turns off the default/exclusionary layers 10946\tNA 10948\tOn mobile, going full screen has strange behavior of going past the screen size, then tapping on screen moves everything back into place 10954\tWhen the annotation intersects with exclusionary, the stroke color does not change to red 10962\tPOINTS do not test for exclusion zones 10963\tSingle Click point will select a layer 10964\tDisable filtering from Exclusion Layers 10966\tDUPLICATE annotation doesn't consistently change color when passing exclusion features depending on type and create/edit 10967\tFilter dialog populates the operator without any user intervention 10968\tDrawing layer search polygon on an exclusion zone allows finishing the drawing but still shows the error message 10970\tThe filtered layer does not have applied current opacity 10971\tTapping does not work on Safari 10972\tThe checkbox should not be unchecked for the exclusion layer 10973\tDeselecting layer doesn't clear it's attribute table 9873\tImplement custom Help HTML loading property. 9875\tCreate the Shape events and callback functions (including documentation for the shape callback event delegates) 9876\tCreate the Measurement events and callback functions (including documentation for the callback event delegates) 9877\tCreate the Annotation events and callback functions (including documentation for the callback event delegates) 9878\tCreate the Basemap events and callback functions (including documentation for the callback event delegates) 9879\tCreate the Address Search events and callback functions (including documentation for the callback event delegates) 9880\tCreate the Layer List events and callback functions (including documentation for the callback event delegates) 9881\tCreate the Layer Attribute events and callback functions (including documentation for the callback event delegates) 9882\tCreate the Form Submission events and callback functions (including documentation for the callback event delegates) 9883\tCreate the Help Guide events and callback functions (including documentation for the callback event delegates) 9884\tCreate the Map Interaction events and callback functions (including documentation for the callback event delegates) 9885\tCreate the General Event events and callback functions (including documentation for the callback event delegates) 10552\tAdd unique legends to the layers marked as Snappable. Traceable, and Excluded 10553\tImplement the Angular fix detailed by Dylan stopping the continuous looping of change detection 10554\tCreate a configuration element for the layers to intersect, and the array of boundaries to throw error, and throw warning 10555\tImplement logic to run calculations against the layers configured based on buffers. 10556\tCreate UI to display the errors per layer, and to allow navigation between intersections. (see User Story) 10705\tAdd Custom Search Support to the Portal 10706\tRework the search UI to provide a combined result, for the single textbox. 10743\tWhen displaying the attribute tab, use the field display names, and format the values 10749\tAdd unique layer group to the layers marked as Snappable. Traceable, and Excluded 10803\tAdd Cancel Button to download map 10804\tAdd ability to &quot;Zoom to Extent&quot; of uploaded shapes (allowing the proponent to find and edit / delete the shape as required 10914\tBring back editing text, this time with stateless editing. 10974\tImprove the build process by upgrading to node 18, and fixing third party references  ","version":"Next","tagName":"h3"},{"title":"Release Notes 2.2.1.45 - RC​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#release-notes-22145---rc","content":" ","version":"Next","tagName":"h2"},{"title":"Features​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#features-4","content":" Ticket #\tDescription9867\tPortal can now be configured to allow Annotations or Uploads 9869\tPortal can now be configured to allow Drawing, or Uploading of named shape files. 9870\tAnnotations can now have their color changed. 9871\tUploaded shapes can now have pre-configured colors. 9874\tCustom shape endpoints can now be configured for loaded shapes or for related shapes. 9939\tArcGIS Style library now supports more ArcGIS styles. 10107\tSaving shapes now shows a progress dialog with loading spinner and messages to the user about actions. 10144\tUpdated proj4 to include GDA2020 transformations for highlighting features. 10547\tZoom to Layer extents are now calculated based on feature extents. 10549\tLayer Opacity controls now synced between layers and legend. 10550\tFeature Selection tolerance improved, with multi feature selection. 10551\tPortal now supports Map Server, Map Server Sub Layers, Feature Server, and Feature Server Sub Layers 10584\tImproved Layer identification used for layer selection and interaction. 10101\tPDF and Image generation for Portal now includes legend, attribution, and scale. 10507\tPortal can be configured to have a boundary constraint, preventing the map from panning outside the defined area. 10546\tWhen a Layer is turned on it will now sit on top of all other enabled layers. Respecting the Z-Order the user wishes. 10578\tPCF Properties have been updated and documented to allow easier configuration. 10633\tToggling Drawing modes will lock other actions until the user cancels, de-selects, or completes the action. 10634\tAdded AutoCollapse feature to the PCF to allow the tabs to auto hide when drawing. 10754\tPortal PCF can now be configured to only allow select shape file projections. 10741\tClicking of features on the Portal map will now select any feature within 5PX of the cursor. 10808\tShape upload and drawing simplified, and standardized. 9693\tShapes can now be configured to allow a pre-defined number of submissions. 10806\tAnnotations are now loaded and saved in the same format as the CORE D365 product, allowing cross communication of proponent and business user. 10853\tSimplifying the Annotation text placement and addition.  ","version":"Next","tagName":"h3"},{"title":"Bugfixes​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#bugfixes-12","content":" Ticket #\tDescription10524\tUpdating the ProcessArcGis Layer response to allow nested children layers. 10588\tUploading shape progress bar now disappears if upload fails. 9517\tPCF Control is now compiled and minified for speed and security purposes. 9542\tShape saving logic reviewed and improved, with graphical UI to inform the user of saving progress. 9551\tUpload control now protected against broken shape files 10607\tLegend symbols are now generated based on the ArcGIS style provided. 10608\tLegends are now removed when the layer is disabled, or the shape file is deleted. 10609\tLayer attributes now render consistently, regardless of layer type. 10610\tText Annotation tool will now render and save in the same format as D365 10611\tPoint annotation tool will now render and save in the same format as D365 10631\tPortal annotations can now correctly be edited and saved. 10687\tLayer and feature information will now pop up over the correct feature regardless of layer projection. 10688\tWhen the Portal loads any existing shapes, the viewport will automatically zoom to the shapes combined extent. 10689\tLayer list has been refactored to be more reliable. 10691\tThe Attribute table will no longer auto expand, unless requested by the user. 10693\tMeasurements and Labels will now all use a standard font and size. 10694\tTable Sticky headers removed as they are no longer useful / relevant. 10695\tUpdated label colors to be WCAG AA compliant. 10696\tAttribute table no longer shrinks columns, showing all data. 10697\tStandardized the iconography for add, edit and delete functions. 10701\tZoom to Extent and Opacity controls have improved styling. 10715\tFixed the Deletion mode of text and annotations to no longer click on underlying layers. 10716\tRestyled the Legend and Layer checkboxes to ensure clicking of menu items work. 10718\tPCF now loads Shapes separate from Annotations 10719\tLeft Toolbar panel will now hide if there are no buttons enabled. 10721\tAttribute table performance improved for Select All checkboxes. 10722\tReset button in the Attribute table now clears attribute filters and pagination. 10756\tMaptaskr Annotations now have a centroid location in 4326 allowing rendering in the D365 portal. 10757\tPCF Control now contains default values for properties. 10764\tBase64 encoding and decoding protected from incorrectly injected Base64 encoded GeoJSON files 10768\tLayer labels now honor the ArcGIS Styling Min and Max resolution. 10778\tWhen adding a textual annotation - if you hit enter the map reloads. 10782\tAttribute tab UI overhauled to be simplified. 10771\tFullscreen button now correctly fills the screen regardless of configured map height. 10784\tPlot from attribute tab now zooms to the plotted features. 10791\tCharacter limit added to PCF Properties 10795\tMaptaskr_lambpets without a defined name are now loaded and saved with the document type &quot;Annotation&quot; 10811\tAnnotation text is now appended to the annotation lambpet. 10812\tRemoved requirement to stipulate constraint boundary. 10813\tAnnotation buttons adjusted to be Mobile Responsive. 10698\tAnnotation text restyled to be AA compliant. 10775\tSearch loading spinner restyled to be consistent with the rest of the product. 10776\tAll infoboxes and UI elements now have a border around them, with a consistent border radius, and scrollable panels. 10780\tAttribute infobox now hides when feature is de-selected. 10785\tEnsured all attribute tables can be exported to CSV 10788\tMap extent history reworked to be more intuitive. 10789\tMap Download logic reworked to work for ArcGIS Vector basemap. 10790\tSearching layers reworked to follow the CORE product layer searching. 10792\tEnsured checking a layer will auto expand the accordion if the layer has sub-layers. 10794\tIncluded selection of Allowed Upload Types to allow administrators to allow uploaded files, drawn files or both to be submitted. 10799\tCompleted a WCAG AA Pass over the portal control to resolve critical issues. 10800\tAll toolbars and buttons now have appropriate aria labels. 10802\tDownloading map now has loading spinner and progress messaging. 10809\tError notifications now displayed if layer attributes cannot be found at current view or zoom. 10786\tAttribute Filter By Polygon now requests features directly from the layer api rather than using client side processing. 10787\tLayers are now z-ordered by the order the user enabled them, with newly enabled layers overlaying older selected ones. 10810\tPortal now include &quot;Constraint Boundaries&quot; feature allowing map to be locked to a specific region. 10816\tMedia queries are replaced with custom classes, ensuring the map is responsive, even when places in other larger pages. 10690\tImproved the responsive styling of the Attribute table. 10798\tAnother WCAG AA review, identifying and fixing focusable elements. 10820\tUploaded files are now consistently uploaded with original files being saved against the records. 10822\tShape layer visibility no longer locked when shape is deleted. 10831\tUpdated the responsiveness of all panels, ensuring consistent experience on mobile devices. 10840\tEnsuring the annotation text dialog will appear at the co-ordinates of the cursor. 10842\tSimplified layer filtering to ensure consistent usage across Map and Feature services. 10845\tImproved performance of Snapping, Tracing, and Exclusions. 10846\tAdded Multi-polygon and line string support for Exclusionary Layers. 10833\tUpdated the How-To-Guide imagery and text to match latest feature sets. 10835\tAdded debounce to address search errors to ensure user only gets one error at a time. 10836\tAddress search improved to handle server error more gracefully. 10839\tFixing the width of the modal dialogs when embedded in standard portal page. 10855\tLegend and Layer accordions restyled to be more mobile responsive. 10858\tDisabling the scale bar no longer throws error when loading the map. 10861\tReviewed and removed scrollTop call from vendor library. 10900\tStopped the attribute table from popping up, unless activated by the user. 10904\tIncreased the size of menu buttons for easier usage on mobile devices. 10905\tRestyled Upload and Draw Shape buttons. 10910\tUpdated the calculation of Map Resolution from scale, used in ArcGIS layer visibility checks. 9541\tAdded logic to the save method to delete an existing annotation and upload a new one if the annotations have changes. 10012\tAdded logic to protect layer search from server 404 responses. 10797\tEnsured that loaded related shapes cannot be edited or removed / cleared from the map. 10837\tAfter deselecting a textbox, the text background color returns to default. 10843\tReworked the Opacity controls for Layers and Legends, coupling them to ensure changes in one are reflected in the other. 10848\tAdded more protections from shape files with incorrect or no projection. 10849\tEnsured that selecting a tool that requires clicking on the map will lock other similar actions. 10864\tImproved the layer searching cancellation logic, to ensure no wasted network traffic after cancellation. 10911\tEnsured styling of the loaded annotation matches that of newly created ones. 10912\tUpdated POINT rendering styles to ensure user can move, and delete easily. 10913\tRemoved measurement tooltip from POINTS as it provides no value. 10841\tAdded clear button to the layer filter dialog to allow users to easily remove filters from a layer. 10917\tTemporarily removed annotation text editing, whilst we look at refactoring the editing logic. 10919\tMade all the PCF Parameters SingleLine.Text fields allowing both static input OR data binding.  ","version":"Next","tagName":"h3"},{"title":"Known Issues​","type":1,"pageTitle":"Release Note History","url":"/docs/power-pages/releases/release-notes#known-issues-2","content":" Ticket #\tDescription10699\tMeasurement Tooltips should only appear on hover. 10766\tDashed line not being applied for uploaded shape 10772\tOccasionally when performing a search, the search text box turns white. 10773\tSearch focus missing top border line. 10774\tAerial base map image has weird border 10777\tMeasurement clear icon - always looks disabled? 10779\tSkeleton base map appears when map first loading 10796\tSimplify the Legend and Help Text Expand All Collapse All 10801\tCannot use Keyboard to open, or navigate the layer menu 10818\tOnly a single filter can be applied to layers. 10834\tShape stroke color does not support 8 hex color 10838\tThe text overlay is not positioned where it was created and is fixed to the screen. 10875\tReview and improve the Units of Measure, and the displaying of the area label 10876\tReview an improve all messaging and Spelling of the solution 10906\tIf you quickly turn on and off the layer, even if the layer is in a disabled state, it becomes a state where you can still expand it. 10915\tAnnotation Fill is not 50% stroke color and should be 10916\tCreate a global &quot;button clicked&quot; state for all toggle buttons. 10922\tPerformance issue when adjusting opacity 10923\tNeed loading screen when plot on map in attribute table 10925\tNeed success message for CSV export 10936\tIf shape/annotation color is dark, can't see the lock icon 10944\tAdd a Visibility toggle for related shapes 10948\tOn mobile, going full screen has strange behavior of going past the screen size, then tapping on screen moves everything back into place 10954\tWhen the annotation intersects with exclusionary, the stroke color does not change to red 10962\tPOINTS do not test for exclusion zones 10963\tSingleClick point will select a layer 9873\tImplement custom Help HTML loading property. 9875\tCreate the Shape events and callback functions (including documentation for the shape callback event delegates) 9876\tCreate the Measurement events and callback functions (including documentation for the callback event delegates) 9877\tCreate the Annotation events and callback functions (including documentation for the callback event delegates) 9878\tCreate the Basemap events and callback functions (including documentation for the callback event delegates) 9879\tCreate the Address Search events and callback functions (including documentation for the callback event delegates) 9880\tCreate the Layer List events and callback functions (including documentation for the callback event delegates) 9881\tCreate the Layer Attribute events and callback functions (including documentation for the callback event delegates) 9882\tCreate the Form Submission events and callback functions (including documentation for the callback event delegates) 9883\tCreate the Help Guide events and callback functions (including documentation for the callback event delegates) 9884\tCreate the Map Interaction events and callback functions (including documentation for the callback event delegates) 9885\tCreate the General Event events and callback functions (including documentation for the callback event delegates) 10552\tAdd unique legends to the layers marked as Snappable. Tracable, and Excluded 10553\tImplement the Angular fix detailed by Dylan stopping the continuous looping of change detection 10554\tCreate a configuration element for the layers to intersect, and the array of boundaries to throw error, and throw warning 10555\tImplement logic to run calculations against the layers configured based on buffers. 10556\tCreate UI to display the errors per layer, and to allow navigation between intersections. (see User Story) 10705\tAdd Custom Search Support to the Portal 10706\tRework the search UI to provide a combined result, for the single textbox. 10743\tWhen displaying the attribute tab, use the field display names, and format the values 10749\tAdd unique layer group to the layers marked as Snappable. Tracable, and Excluded 10803\tAdd Cancel Button to download map 10804\tAdd ability to &quot;Zoom to Extent&quot; of uploaded shapes (allowing the proponent to find and edit / delete the shape as required 10914\tBring back editing text, this time with stateless editing. ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}